{
  "openapi": "3.0.0",
  "info": {
    "title": "Reviews",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/review-helpful": {
      "get": {
        "summary": "ListReviewHelpful lists all the ReviewHelpful(s)",
        "operationId": "ReviewHelpfulService_ListReviewHelpful",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListReviewHelpfulResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.userIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.reviewIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ReviewHelpfulService"
        ]
      },
      "post": {
        "summary": "SetReviewHelpfulStatus sets review helpful status",
        "operationId": "ReviewHelpfulService_SetReviewHelpfulStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewHelpful"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReviewHelpful"
            }
          }
        ],
        "tags": [
          "ReviewHelpfulService"
        ]
      }
    },
    "/v1/review:batchCreate": {
      "post": {
        "operationId": "Reviews_BatchCreateReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCreateReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchCreateReviewRequest"
            }
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews": {
      "get": {
        "summary": "Called from client side",
        "operationId": "Reviews_BatchReviewsByEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appEventIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxRating",
            "description": "will be applied on overall rating",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "minRating",
            "description": "will be applied on overall rating",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "query",
            "description": "reviewer name or email matching",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "starred",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Reviews"
        ]
      },
      "post": {
        "operationId": "Reviews_CreateReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Review"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateReviewRequest"
            }
          }
        ],
        "tags": [
          "Reviews"
        ]
      },
      "put": {
        "operationId": "Reviews_UpsertReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Review"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertReviewRequest"
            }
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews-Setting:list": {
      "get": {
        "operationId": "ReviewSettings_GetReviewSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ReviewSettings"
        ]
      }
    },
    "/v1/reviews-average-rating:list": {
      "get": {
        "operationId": "AverageRatings_GetAverageRating",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AverageRating"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AverageRatings"
        ]
      }
    },
    "/v1/reviews-page-setting": {
      "put": {
        "operationId": "ReviewPageSettings_UpsertReviewPageSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewPageSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertReviewPageSettingRequest"
            }
          }
        ],
        "tags": [
          "ReviewPageSettings"
        ]
      }
    },
    "/v1/reviews-page-setting:list": {
      "get": {
        "operationId": "ReviewPageSettings_GetReviewPageSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewPageSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ReviewPageSettings"
        ]
      }
    },
    "/v1/reviews-setting": {
      "put": {
        "operationId": "ReviewSettings_UpsertReviewSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertReviewSettingRequest"
            }
          }
        ],
        "tags": [
          "ReviewSettings"
        ]
      }
    },
    "/v1/reviews/list/{parent}": {
      "get": {
        "summary": "In client side we need to filter out with userId and customer Id\nEach filter should be public",
        "operationId": "Reviews_ListReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.appIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.query",
            "description": "reviewer name or email matching",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.starred",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.primaryFilterId",
            "description": "TODO will replace it later with json",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.primaryFilterType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.secondaryFilterId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.secondaryFilterType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.operator",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "GREATER",
              "LESS",
              "EQUAL",
              "GREATER_EQUAL",
              "LESS_EQUAL"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "filter.overallRating",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.timeslot.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.timeslot.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFAULT",
              "HIGHEST_RATING",
              "LOWEST_RATING",
              "NEWEST"
            ],
            "default": "DEFAULT"
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews/mail": {
      "post": {
        "operationId": "Reviews_SendReviewMail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendReviewMailRequest"
            }
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews/starred": {
      "put": {
        "operationId": "Reviews_ChangeReviewStarredStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangeReviewStarredStatusRequest"
            }
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews/status/{dataCodeId}": {
      "get": {
        "operationId": "Reviews_ReviewStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCodeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews/{appEventId}": {
      "get": {
        "summary": "Called from client side",
        "operationId": "Reviews_ListReviewsByEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListReviewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appEventId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxRating",
            "description": "will be applied on overall rating",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "minRating",
            "description": "will be applied on overall rating",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "query",
            "description": "reviewer name or email matching",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "starred",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews/{id}": {
      "get": {
        "operationId": "Reviews_GetReview",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Review"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/reviews/{userId}": {
      "get": {
        "summary": "TODO it should not be public\nuser",
        "operationId": "Reviews_ListReviewsByUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListReviewsByUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    },
    "/v1/review-mail-setting": {
      "post": {
        "summary": "UpsertAppointmentReviewMailSetting creates new  review mail setting.",
        "operationId": "ReviewMailSettings_UpsertReviewMailSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewMailSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertReviewMailSettingRequest"
            }
          }
        ],
        "tags": [
          "ReviewMailSettings"
        ]
      }
    },
    "/v1/review-mail-setting/{companyId}": {
      "get": {
        "summary": "GetReviewMailSetting returns the  review mail setting by its unique id.",
        "operationId": "ReviewMailSettings_GetReviewMailSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ReviewMailSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ReviewMailSettings"
        ]
      }
    }
  },
  "components": {
    "schemas": null,
    "responses": null,
    "parameters": null,
    "requestBodies": null
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesGalleryItem": {
      "type": "object",
      "properties": {
        "thumbImage": {
          "type": "string"
        },
        "largeImage": {
          "type": "string"
        }
      },
      "title": "Generic Gallery Item Object"
    },
    "typesGender": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "FEMALE",
        "MALE",
        "OTHER",
        "PREFER_NOT_TO_SAY"
      ],
      "default": "UNSPECIFIED"
    },
    "typesMetaDetailsWrapper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "deletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "updateMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesPageInfo": {
      "type": "object",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "HasNext is used to indicate whether more edges exist following the set\ndefined by the clients arguments. If the client is paginating with\nfirst/after, then the server must return true if further edges exist,\notherwise false. If the client is paginating with last/before, then the\nclient may return true if edges further from before exist, if it can do so\nefficiently, otherwise may return false."
        },
        "hasPrevious": {
          "type": "boolean",
          "description": "HasPrevious is used to indicate whether more edges exist prior to the set\ndefined by the clients arguments.\nIf the client is paginating with last/before, then the server must return\ntrue if prior edges exist, otherwise false. If the client is paginating\nwith first/after, then the client may return true if edges prior to after\nexist, if it can do so efficiently, otherwise may return false."
        },
        "startCursor": {
          "type": "string"
        },
        "endCursor": {
          "type": "string"
        }
      }
    },
    "typesTimeslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Timeslot object"
    },
    "v1AverageRating": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "distributedRatings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DistributedRating"
          }
        },
        "starRatings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StarRating"
          }
        },
        "averageRating": {
          "type": "number",
          "format": "double"
        },
        "totalCount": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "StarRating: Start Rating is overallRating\nWe have to store the information of total user corresponding to star rating (OverallRating)\nWhile distribute=ion rating is different from star Rating: easiness , Cleaniness these are all distribution rating"
    },
    "v1BatchCreateReviewRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateReviewWrapper"
          },
          "title": "List of review requested"
        }
      }
    },
    "v1BatchCreateReviewResponse": {
      "type": "object",
      "properties": {
        "reviews": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateReviewResponseWrapper"
          }
        }
      }
    },
    "v1ChangeReviewStarredStatusRequest": {
      "type": "object",
      "properties": {
        "reviewId": {
          "type": "string"
        },
        "markStar": {
          "type": "boolean"
        }
      }
    },
    "v1CreateReviewRequest": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/v1Review"
        }
      }
    },
    "v1CreateReviewResponseWrapper": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/v1Review"
        },
        "error": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1CreateReviewWrapper": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/v1Review"
        },
        "metaDetails": {
          "$ref": "#/definitions/typesMetaDetailsWrapper",
          "title": "MetaDetailsWrapper: ignore id and set update_mask to which ever field is need to be set in it"
        }
      }
    },
    "v1DistributedRating": {
      "type": "object",
      "properties": {
        "ratingName": {
          "type": "string"
        },
        "averageRating": {
          "type": "number",
          "format": "double"
        },
        "totalUsers": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Total User of Distributed rating"
    },
    "v1ListReviewHelpfulResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewHelpfulNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo"
        }
      }
    },
    "v1ListReviewResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo"
        }
      }
    },
    "v1ListReviewsByUserResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo"
        }
      }
    },
    "v1Operator": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GREATER",
        "LESS",
        "EQUAL",
        "GREATER_EQUAL",
        "LESS_EQUAL"
      ],
      "default": "UNKNOWN"
    },
    "v1Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "distributionRating": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "overallRating": {
          "type": "string",
          "format": "int64",
          "title": "overall rating is the average of all the distribution rating"
        },
        "scale": {
          "type": "string",
          "format": "int64"
        },
        "likes": {
          "type": "string",
          "format": "int64",
          "title": "number of likes and dislikes of the review"
        },
        "dislikes": {
          "type": "string",
          "format": "int64"
        },
        "reviewerUserId": {
          "type": "string",
          "title": "Reviewer is the one who has given review e.g. customer"
        },
        "reviewerCustomerId": {
          "type": "string"
        },
        "reviewerName": {
          "type": "string"
        },
        "reviewerEmail": {
          "type": "string"
        },
        "reviewerImage": {
          "$ref": "#/definitions/typesGalleryItem"
        },
        "reviewerGender": {
          "$ref": "#/definitions/typesGender"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "appId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "appEventId": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        },
        "anonymous": {
          "type": "boolean"
        },
        "dataCodeId": {
          "type": "string",
          "title": "data code will be stored against each review\ndata code is used to get information in client side from data code id"
        },
        "starred": {
          "type": "boolean"
        },
        "primaryFilterId": {
          "type": "string",
          "title": "TODO we will replace these filters with Json object as soon as we add option for json search in chaku"
        },
        "primaryFilterType": {
          "type": "string"
        },
        "secondaryFilterId": {
          "type": "string"
        },
        "secondaryFilterType": {
          "type": "string"
        },
        "imported": {
          "type": "boolean",
          "title": "review is imported or not"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reviewUpdated": {
          "type": "boolean"
        }
      },
      "description": "Review Object\nid - string\ntitle - string = from ui\ndescription - string = from ui\ndistribution_rating - map<string, int> = from ui\noverall_rating - int = calculate-->Average rating of all the distributed rating\nscale - int = from dataCode\nlikes - int64 = 0\ndislike - int64 = 0\nreviewer = id from dataCode & rest from user-service according to setting\nuser_id - string\nname - string\nemail - string\nimage\ngender\nreviewed_on - date_time\nupdated_on - date_time\napp_id - string = from dataCode\napp_name - string = from dataCode\napp_event_id - string = from dataCode\nsource - enum = from dataCode\nanonymous - bool = from setting and request\ndata-code_id - string\nstar = How many star given by the end user.\n\n- create\nIt will simply create the review with following checks\n- It will fetch the Review_Distribution_rating setting of business and will match the names else throw the error\n- If anonymous is true then it will not store the user information. It will only store the user_id and other fields will be blank.\n- If anonymous is true in review request then it will also not store the reviewee information.\n\n- It will take the data code Id\n- update\nCustomer will be able to update the old given review.\n\n- It will take the data code Id\n\n- review-status\n- This endpoint will take the data-code and will return the status of the review (review given)\n- It will also return the source where review should be given. (yelp, google, saastack). It will fetch the setting from review page setting\n\nlist\n- same as previous\n\nsend manual email\n- same as previous"
    },
    "v1ReviewFilter": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerId": {
          "type": "string"
        },
        "query": {
          "type": "string",
          "title": "reviewer name or email matching"
        },
        "starred": {
          "type": "boolean"
        },
        "primaryFilterId": {
          "type": "string",
          "title": "TODO will replace it later with json"
        },
        "primaryFilterType": {
          "type": "string"
        },
        "secondaryFilterId": {
          "type": "string"
        },
        "secondaryFilterType": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "$ref": "#/definitions/v1Operator"
        },
        "overallRating": {
          "type": "string"
        },
        "timeslot": {
          "$ref": "#/definitions/typesTimeslot"
        }
      }
    },
    "v1ReviewHelpful": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "wasHelpful": {
          "type": "boolean"
        }
      }
    },
    "v1ReviewHelpfulFilter": {
      "type": "object",
      "properties": {
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reviewIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ReviewHelpfulNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1ReviewHelpful"
        }
      }
    },
    "v1ReviewManageAlgo": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "SAASTACK_ONLY",
        "OTHER"
      ],
      "default": "UNDEFINED"
    },
    "v1ReviewNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1Review"
        }
      }
    },
    "v1ReviewPageSetting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enable": {
          "type": "boolean"
        },
        "settings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReviewPageUrl"
          }
        },
        "algo": {
          "$ref": "#/definitions/v1ReviewManageAlgo"
        }
      },
      "description": "ReviewPageSetting..."
    },
    "v1ReviewPageUrl": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "v1ReviewSetting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "distributionRatingNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "distributionScale": {
          "type": "string",
          "format": "int64"
        },
        "anonymous": {
          "type": "boolean"
        },
        "allowDistribution": {
          "type": "boolean"
        },
        "hideCustomer": {
          "type": "boolean"
        }
      },
      "description": "As a company admin, I want to manage the default distribution rating name,\nso that my customers can  see the relevant information for my business.\n\n- As a company admin, I want to list default distribution rating name,\nso that I can manage them.\n- It will have upsert logic. If location setting is not saved then it\nwill fetch the profession and fetch the default distribution rating\nname and return it else it will return the saved setting.\n- As a location admin, I want to upsert the distribution rating name,\nso that I can change them as per new need.",
      "title": "Review_setting\n- id string (company is parent)\n- distribution_rating_names []string\n- distribution_scale int (0-10)\n- anonymous bool"
    },
    "v1ReviewStatusResponse": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/v1Review"
        },
        "source": {
          "$ref": "#/definitions/v1ReviewPageUrl"
        }
      }
    },
    "v1SendReviewMailRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "appEventId": {
          "type": "string"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eventTime": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        },
        "activity": {
          "type": "string"
        }
      },
      "title": "review id and title is useful in client side\ntitle and subtitle is event details ex: Appointment details"
    },
    "v1SortOrders": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "HIGHEST_RATING",
        "LOWEST_RATING",
        "NEWEST"
      ],
      "default": "DEFAULT"
    },
    "v1StarRating": {
      "type": "object",
      "properties": {
        "averageRating": {
          "type": "number",
          "format": "double"
        },
        "totalUsers": {
          "type": "string",
          "format": "int64"
        },
        "ratingType": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Star value should not be more than 5"
    },
    "v1UpsertReviewPageSettingRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "reviewPageSetting": {
          "$ref": "#/definitions/v1ReviewPageSetting"
        },
        "upsertMask": {
          "type": "string"
        }
      }
    },
    "v1UpsertReviewRequest": {
      "type": "object",
      "properties": {
        "review": {
          "$ref": "#/definitions/v1Review"
        },
        "upsertMask": {
          "type": "string"
        }
      }
    },
    "v1UpsertReviewSettingRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "reviewSetting": {
          "$ref": "#/definitions/v1ReviewSetting"
        },
        "upsertMask": {
          "type": "string"
        }
      },
      "title": "parent will be company id"
    },
    "v1ValidateParentResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1MailSetting": {
      "type": "object",
      "properties": {
        "sendAutomatic": {
          "type": "boolean"
        },
        "enableReview": {
          "type": "boolean"
        },
        "appName": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        }
      }
    },
    "v1ReviewMailSetting": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "mailSetting": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1MailSetting"
          }
        }
      },
      "title": "Parent will be company id"
    },
    "v1UpsertReviewMailSettingRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "reviewMailSetting": {
          "$ref": "#/definitions/v1ReviewMailSetting"
        },
        "appNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ReviewRequest": {
      "type": "object",
      "properties": {
        "reviewerId": {
          "type": "string"
        },
        "revieweeId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    }
  }
}
