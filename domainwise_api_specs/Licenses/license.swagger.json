{
  "swagger": "2.0",
  "info": {
    "title": "license/pb/license.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Licensing"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/licensing": {
      "get": {
        "summary": "ListLicense lists all the License(s)",
        "operationId": "Licensing_ListLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListLicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Licensing"
        ]
      }
    },
    "/v1/licensing/{id}": {
      "get": {
        "summary": "GetLicense returns the license by its unique id.",
        "operationId": "Licensing_GetLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1License"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Licensing"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesRestrictionTypes": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_RESTRICTION",
        "NUMBER_LIMIT",
        "CYCLIC_NUMBER_LIMIT",
        "MODULE",
        "FEATURE_RPC",
        "ATTRIBUTE"
      ],
      "default": "UNSPECIFIED_RESTRICTION",
      "description": "- NUMBER_LIMIT: hard number limit on total count (Ex: 5 staff)\n - CYCLIC_NUMBER_LIMIT: number limit on total count in 1 cycle (Ex: 100 appointments in 1 month)\n - MODULE: restrict complete module usage (Ex: restrict class module from usage completely)\n - FEATURE_RPC: restrict certain features/rpc (Ex: Reply feature for review)\n - ATTRIBUTE: restrict input parameter values (Ex: Date-Range in reports)",
      "title": "Restriction-types for License and Billing-Plan"
    },
    "v1BatchGetLicenseResponse": {
      "type": "object",
      "properties": {
        "license": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1License"
          }
        }
      }
    },
    "v1License": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "licenseName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "moduleLicenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ModuleLicense"
          }
        },
        "product": {
          "type": "string"
        },
        "displayActivityLogFromInMonths": {
          "type": "integer",
          "format": "int32"
        },
        "deleteActivityLogAfterInMonths": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1ListLicenseResponse": {
      "type": "object",
      "properties": {
        "license": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1License"
          }
        }
      }
    },
    "v1ModuleLicense": {
      "type": "object",
      "properties": {
        "moduleName": {
          "type": "string",
          "title": "module details"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "restrictionSlugs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restrictionType": {
          "$ref": "#/definitions/typesRestrictionTypes"
        },
        "enabled": {
          "type": "boolean",
          "title": "module level\nif this module is enabled or disabled"
        },
        "freeLimit": {
          "type": "integer",
          "format": "int32",
          "description": "available for free",
          "title": "number limit / cyclic limit"
        },
        "licenseLimit": {
          "type": "integer",
          "format": "int32",
          "title": "available after paying for this specific license"
        },
        "paidAddonLimit": {
          "type": "integer",
          "format": "int32",
          "title": "addons that are paid by business"
        },
        "maxAddonLimit": {
          "type": "integer",
          "format": "int32",
          "title": "maximum addons that can be paid for"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int32",
          "title": "maximum allowed in this license irrespective of what type"
        },
        "totalLimit": {
          "type": "integer",
          "format": "int32",
          "title": "for wallet to get current value(limit) for module (free + paid_addons + license)"
        },
        "rpcs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "feature level to restrict rpcs"
        }
      }
    }
  }
}
