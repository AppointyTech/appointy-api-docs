{
  "openapi": "3.0.0",
  "info": {
    "title": "User",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/user-settings": {
      "put": {
        "operationId": "UserSettings_UpsertUserSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertUserSettingsRequest"
            }
          }
        ],
        "tags": [
          "UserSettings"
        ]
      }
    },
    "/v1/user-settings/{userId}": {
      "get": {
        "operationId": "UserSettings_GetUserSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "businessId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserSettings"
        ]
      }
    },
    "/v1/me": {
      "get": {
        "summary": "GetUserMe returns the currently logged in user",
        "operationId": "UserProfiles_GetUserMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/me/data": {
      "get": {
        "summary": "GetUserData returns the currently logged in user's companies and locations",
        "operationId": "UserProfiles_GetUserData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profile/email-update/{id}": {
      "post": {
        "operationId": "UserProfiles_UpdateEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserProfilesUpdateEmailBody"
            }
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/email/verification": {
      "post": {
        "operationId": "UserProfiles_SendVerificationMail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendVerificationMailRequest"
            }
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/external/verify": {
      "get": {
        "operationId": "UserProfiles_VerifyExternalToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/invited/users/{userId}": {
      "get": {
        "operationId": "UserProfiles_GetInvitedUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInvitedUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "levelId",
            "description": "This level id is taken for userrole connection and validation",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/phone/send-otp": {
      "post": {
        "operationId": "UserProfiles_SendPhoneOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendPhoneOTPRequest"
            }
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/phone/verify-otp": {
      "post": {
        "operationId": "UserProfiles_VerifyPhoneOTP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifyPhoneOTPRequest"
            }
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/{id}": {
      "get": {
        "summary": "GetUserProfile returns the user profile by its unique user id.",
        "operationId": "UserProfiles_GetUserProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id is a uniquely identified user id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "description": "ViewMask contains the list of field from user profile object that has to be\nreturned.\nIf a FieldMask object is not present then return all the field from the\nprofile object.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/{parent}": {
      "put": {
        "operationId": "UserProfiles_UpdateUserPhoneStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfilesUpdateUserPhoneStatusBody"
            }
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/user-profiles/{userProfile.id}": {
      "put": {
        "summary": "UpdateUserProfile will update the user profile identified by its user id.\nUpdate UserProfile uses Field Mask to update specific properties of user profile object\ntherefore it must have a PATCH http method",
        "operationId": "UserProfiles_UpdateUserProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userProfile.id",
            "description": "Id is the user id which uniquely identify a user provided by user registration service",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfilesUpdateUserProfileBody"
            }
          }
        ],
        "tags": [
          "UserProfiles"
        ]
      }
    },
    "/v1/appointy-user-calendar-filter-group": {
      "get": {
        "operationId": "AppointyUserCalendarFilterGroups_ListCalendarFilterGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCalendarFilterGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppointyUserCalendarFilterGroups"
        ]
      },
      "delete": {
        "operationId": "AppointyUserCalendarFilterGroups_DeleteCalendarFilterGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCalendarFilterGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppointyUserCalendarFilterGroups"
        ]
      },
      "put": {
        "operationId": "AppointyUserCalendarFilterGroups_UpsertCalendarFilterGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertCalendarFilterGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertCalendarFilterGroupRequest"
            }
          }
        ],
        "tags": [
          "AppointyUserCalendarFilterGroups"
        ]
      }
    },
    "/v1/appointy-user-settings": {
      "put": {
        "operationId": "AppointyUserSettings_UpsertAppointyUserSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAppointyUserSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertAppointyUserSettingsRequest"
            }
          }
        ],
        "tags": [
          "AppointyUserSettings"
        ]
      }
    },
    "/v1/appointy-user-settings/{userId}": {
      "get": {
        "operationId": "AppointyUserSettings_GetAppointyUserSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAppointyUserSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "businessId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AppointyUserSettings"
        ]
      }
    },
    "/v1/sessions": {
      "get": {
        "summary": "ListSession lists all the Session(s)",
        "operationId": "UserSessions_ListUserSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserSessionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserSessions"
        ]
      }
    },
    "/v1/sessions/{id}": {
      "delete": {
        "summary": "DeleteSession will delete the session from the system by Id.\nThis will be a soft delete from the system",
        "operationId": "UserSessions_RevokeUserSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "UserSessions"
        ]
      }
    },
    "/v1/user-login": {
      "put": {
        "summary": "UpdateUserPassword , if a user has registered with external logins then\nthis method can be used to add a password to the user account , it can also\nbe used to update the user old password\nOnce the user has updated his password all his existing logins should be\nlogged out.",
        "operationId": "UserLoginService_UpdateUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id is the unique user id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "oldPassword",
            "description": "Password to be added against the given user id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserLoginService"
        ]
      }
    }
  },
  "components": {
    "schemas": null,
    "responses": null,
    "parameters": null,
    "requestBodies": null
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Dimension": {
      "type": "object",
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "left": {
          "type": "integer",
          "format": "int32"
        },
        "top": {
          "type": "integer",
          "format": "int32"
        },
        "static": {
          "type": "boolean"
        }
      }
    },
    "v1GetUserSettingsResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "userSettingsData": {
          "$ref": "#/definitions/v1UserSettingData"
        }
      }
    },
    "v1MySpaceSetting": {
      "type": "object",
      "properties": {
        "activeWidgets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dimensions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ResponsiveDimension"
          }
        }
      }
    },
    "v1QuickStartGuideSetting": {
      "type": "object",
      "properties": {
        "step": {
          "type": "integer",
          "format": "int32"
        },
        "completedSteps": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "v1ResponsiveDimension": {
      "type": "object",
      "properties": {
        "xs": {
          "$ref": "#/definitions/v1Dimension"
        },
        "sm": {
          "$ref": "#/definitions/v1Dimension"
        },
        "md": {
          "$ref": "#/definitions/v1Dimension"
        },
        "lg": {
          "$ref": "#/definitions/v1Dimension"
        },
        "xl": {
          "$ref": "#/definitions/v1Dimension"
        }
      }
    },
    "v1UpsertUserSettingsRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "userSettingsData": {
          "$ref": "#/definitions/v1UserSettingData"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UserSettingData": {
      "type": "object",
      "properties": {
        "userUISetting": {
          "$ref": "#/definitions/v1UserUISetting"
        },
        "quickStartGuideSetting": {
          "$ref": "#/definitions/v1QuickStartGuideSetting"
        },
        "wizardSetting": {
          "$ref": "#/definitions/v1WizardSetting"
        },
        "mySpaceSetting": {
          "$ref": "#/definitions/v1MySpaceSetting"
        }
      }
    },
    "v1UserUISetting": {
      "type": "object",
      "properties": {
        "themeColor": {
          "type": "string"
        },
        "darkMode": {
          "type": "boolean"
        },
        "signupProfession": {
          "type": "string"
        }
      }
    },
    "v1WizardSetting": {
      "type": "object",
      "properties": {
        "step": {
          "type": "integer",
          "format": "int32"
        },
        "completedSteps": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "UserProfilesUpdateUserPhoneStatusBody": {
      "type": "object",
      "properties": {
        "phoneDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PhoneDetails"
          }
        },
        "phone": {
          "type": "string"
        },
        "isPhoneVerified": {
          "type": "boolean"
        },
        "existingUser": {
          "$ref": "#/definitions/v1UserProfile"
        }
      }
    },
    "UserProfilesUpdateUserProfileBody": {
      "type": "object",
      "properties": {
        "userProfile": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "title": "Email is the unique email of the user"
            },
            "firstName": {
              "type": "string",
              "description": "FirstName is the user first name,it does not have any min length as it can\nbe empty too."
            },
            "lastName": {
              "type": "string",
              "description": "LastName is the user last Name , it does not have any min length as it can\nbe empty too."
            },
            "birthDate": {
              "type": "string",
              "format": "date-time",
              "title": "BirthDate is the user`s date of birth"
            },
            "profileImage": {
              "$ref": "#/definitions/typesGalleryItem",
              "title": "ProfileImage user profile image"
            },
            "address": {
              "$ref": "#/definitions/typesAddress",
              "title": "Address user postal address"
            },
            "gender": {
              "$ref": "#/definitions/typesGender"
            },
            "preferences": {
              "$ref": "#/definitions/v1UserPreference"
            },
            "emailVerifiedOn": {
              "type": "string",
              "format": "date-time"
            },
            "verifiedEmail": {
              "type": "string"
            },
            "invitedBy": {
              "type": "string",
              "title": "invited_by = created_by"
            },
            "isInvitedByAdmin": {
              "type": "boolean",
              "title": "is_invited_by_admin true if user is invited by admin"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "tokenValidTill": {
              "type": "string",
              "format": "date-time"
            },
            "source": {
              "type": "string",
              "title": "user-analytics"
            },
            "medium": {
              "type": "string"
            },
            "campaign": {
              "type": "string"
            },
            "forceForPass": {
              "type": "boolean"
            },
            "phoneDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1PhoneDetails"
              }
            },
            "phoneNumber": {
              "type": "string"
            },
            "isPhoneVerified": {
              "type": "boolean"
            },
            "phoneVerifiedOn": {
              "type": "string",
              "format": "date-time"
            },
            "ssoId": {
              "type": "string"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "UserProfile contains the user personal information"
        },
        "updateMask": {
          "type": "string",
          "title": "UpdateMask controls which fields of the user Profile object can be updated.\nList of fields which can be updated are  :\nFirstName , LastName , ProfileImage , Address , Telephones ,BirthDate"
        },
        "formFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        },
        "updateEmployeeProfileImage": {
          "type": "boolean"
        },
        "updateStaffProfileImage": {
          "type": "boolean"
        }
      }
    },
    "typesAddress": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "title": "Country , e.g. \"USA\". (required)"
        },
        "locality": {
          "type": "string",
          "title": "Locality or locality/city, e.g. \"Mountain View\". (required)"
        },
        "region": {
          "type": "string",
          "title": "Region, The region/state/province, e.g. \"CA\". This field is only required\nin\ncountries where region is commonly a part of the address. (optional)"
        },
        "postalCode": {
          "type": "string",
          "title": "PostalCode  e.g. \"94043\". (required)"
        },
        "streetAddress": {
          "type": "string",
          "title": "StreetAddress, e.g. \"1600 Amphitheatre Pkwy\". (required)"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "GeoCoordinates , e.g. latitude=23.2599333, longitude=77.41261499999996\nLatitude e.g. 23.2599333"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "Longitude e.g. 77.41261499999996"
        }
      }
    },
    "typesDateslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Dateslot object"
    },
    "typesExtendedFieldSubmissionValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "stringKey": {
          "type": "string"
        },
        "intKey": {
          "type": "string",
          "format": "int64"
        },
        "floatKey": {
          "type": "number",
          "format": "float"
        },
        "boolKey": {
          "type": "boolean"
        },
        "addressKey": {
          "$ref": "#/definitions/typesAddress"
        },
        "stringArrKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "intArrKey": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "typesGalleryItem": {
      "type": "object",
      "properties": {
        "thumbImage": {
          "type": "string"
        },
        "largeImage": {
          "type": "string"
        }
      },
      "title": "Generic Gallery Item Object"
    },
    "typesGender": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "FEMALE",
        "MALE",
        "OTHER",
        "PREFER_NOT_TO_SAY"
      ],
      "default": "UNSPECIFIED"
    },
    "typesPageInfo": {
      "type": "object",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "HasNext is used to indicate whether more edges exist following the set\ndefined by the clients arguments. If the client is paginating with\nfirst/after, then the server must return true if further edges exist,\notherwise false. If the client is paginating with last/before, then the\nclient may return true if edges further from before exist, if it can do so\nefficiently, otherwise may return false."
        },
        "hasPrevious": {
          "type": "boolean",
          "description": "HasPrevious is used to indicate whether more edges exist prior to the set\ndefined by the clients arguments.\nIf the client is paginating with last/before, then the server must return\ntrue if prior edges exist, otherwise false. If the client is paginating\nwith first/after, then the client may return true if edges prior to after\nexist, if it can do so efficiently, otherwise may return false."
        },
        "startCursor": {
          "type": "string"
        },
        "endCursor": {
          "type": "string"
        }
      }
    },
    "v1BatchGetUserDetailsByIdsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetUserDetailsByIdResponse"
          }
        }
      }
    },
    "v1BatchGetUserProfileByEmailResponse": {
      "type": "object",
      "properties": {
        "userProfile": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserProfile"
          }
        }
      }
    },
    "v1BatchGetUserProfileResponse": {
      "type": "object",
      "properties": {
        "userProfile": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserProfile"
          }
        }
      }
    },
    "v1CreateUserWithLoginResponse": {
      "type": "object",
      "properties": {
        "profile": {
          "$ref": "#/definitions/v1UserProfile"
        },
        "newUser": {
          "type": "boolean"
        }
      }
    },
    "v1GenerateOTACForDashBoardResponse": {
      "type": "object",
      "properties": {
        "loginLink": {
          "type": "string"
        }
      }
    },
    "v1GetInvitedUsersResponse": {
      "type": "object",
      "properties": {
        "invitedUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InvitedUser"
          }
        }
      }
    },
    "v1GetUserDataResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserGroup"
          }
        }
      }
    },
    "v1GetUserDetailsByIdResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      }
    },
    "v1InvitedUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "levelId": {
          "type": "string"
        }
      }
    },
    "v1ListUserForDashboardResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserProfileNode"
          },
          "title": "List of user profile"
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo",
          "title": "PageInfo contains information about the current page"
        }
      }
    },
    "v1Otac": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "code id"
        },
        "email": {
          "type": "string",
          "title": "Email is the unique email of the user"
        }
      }
    },
    "v1Otp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "code id"
        },
        "userId": {
          "type": "string",
          "title": "Id is the unique id of the user"
        },
        "phone": {
          "type": "string",
          "title": "phone number on which otp needs to be sent"
        },
        "otpCode": {
          "type": "string",
          "title": "one time password"
        },
        "generatedOn": {
          "type": "string",
          "format": "date-time",
          "title": "otp code generated on"
        }
      }
    },
    "v1PhoneDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneVerifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "phoneVerifiedBy": {
          "type": "string"
        },
        "isPhoneVerified": {
          "type": "boolean"
        }
      }
    },
    "v1SendPhoneOTPRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "phone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "v1SendVerificationMailRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "side": {
          "$ref": "#/definitions/v1VerificationSide"
        },
        "companyId": {
          "type": "string",
          "title": "only added for admin rights"
        }
      }
    },
    "v1UserCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UserGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "companies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserCompany"
          }
        }
      }
    },
    "v1UserPreference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Just needed for chaku, no use otherwise"
        },
        "timezone": {
          "type": "string",
          "title": "Timezone format in INA => Ex: \"Etc/UTC\""
        },
        "language": {
          "type": "string",
          "title": "Local Format Ex: \"en-US\""
        },
        "dateFormat": {
          "type": "string"
        },
        "timeFormat": {
          "type": "string"
        },
        "uiInfo": {
          "type": "string",
          "title": "contains json object, used by frontend"
        },
        "startOfWeek": {
          "type": "integer",
          "format": "int32",
          "title": "0: SUNDAY, 1: MONDAY ... 6: SATURDAY, 7: SUNDAY"
        }
      }
    },
    "v1UserProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the user id which uniquely identify a user provided by user registration service"
        },
        "email": {
          "type": "string",
          "title": "Email is the unique email of the user"
        },
        "firstName": {
          "type": "string",
          "description": "FirstName is the user first name,it does not have any min length as it can\nbe empty too."
        },
        "lastName": {
          "type": "string",
          "description": "LastName is the user last Name , it does not have any min length as it can\nbe empty too."
        },
        "birthDate": {
          "type": "string",
          "format": "date-time",
          "title": "BirthDate is the user`s date of birth"
        },
        "profileImage": {
          "$ref": "#/definitions/typesGalleryItem",
          "title": "ProfileImage user profile image"
        },
        "address": {
          "$ref": "#/definitions/typesAddress",
          "title": "Address user postal address"
        },
        "gender": {
          "$ref": "#/definitions/typesGender"
        },
        "preferences": {
          "$ref": "#/definitions/v1UserPreference"
        },
        "emailVerifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "verifiedEmail": {
          "type": "string"
        },
        "invitedBy": {
          "type": "string",
          "title": "invited_by = created_by"
        },
        "isInvitedByAdmin": {
          "type": "boolean",
          "title": "is_invited_by_admin true if user is invited by admin"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tokenValidTill": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string",
          "title": "user-analytics"
        },
        "medium": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        },
        "forceForPass": {
          "type": "boolean"
        },
        "phoneDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PhoneDetails"
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "isPhoneVerified": {
          "type": "boolean"
        },
        "phoneVerifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "ssoId": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "UserProfile contains the user personal information"
    },
    "v1UserProfileNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1UserProfile",
          "title": "Node is the actual user profile object"
        }
      },
      "title": "UserProfileNode is an object with user profile its position in the list"
    },
    "v1UserProfilesUpdateEmailBody": {
      "type": "object",
      "properties": {
        "oldEmail": {
          "type": "string"
        },
        "newEmail": {
          "type": "string"
        }
      }
    },
    "v1ValidateOtacResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "otac": {
          "$ref": "#/definitions/v1Otac"
        }
      }
    },
    "v1ValidateOtpResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1VerificationSide": {
      "type": "string",
      "enum": [
        "VerificationSide_UNSPECIFIED",
        "Admin",
        "Client"
      ],
      "default": "VerificationSide_UNSPECIFIED"
    },
    "v1VerifyPhoneOTPRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "otpCode": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "v1AppointmentNotificationPreference": {
      "type": "string",
      "enum": [
        "ALWAYS",
        "NEVER",
        "MANUAL"
      ],
      "default": "ALWAYS"
    },
    "v1AppointmentSetting": {
      "type": "object",
      "properties": {
        "titleOrder": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationPreference": {
          "$ref": "#/definitions/v1AppointmentNotificationPreference"
        }
      }
    },
    "v1AppointyUserSettingData": {
      "type": "object",
      "properties": {
        "appointmentSetting": {
          "$ref": "#/definitions/v1AppointmentSetting"
        },
        "blockHourSetting": {
          "$ref": "#/definitions/v1BlockHourSetting"
        },
        "calendarSetting": {
          "$ref": "#/definitions/v1CalendarSetting"
        },
        "openHourSetting": {
          "$ref": "#/definitions/v1OpenHourSetting"
        },
        "meetingSetting": {
          "$ref": "#/definitions/v1MeetingSetting"
        }
      }
    },
    "v1BlockHourSetting": {
      "type": "object",
      "properties": {
        "resourceColors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1CalendarDuration": {
      "type": "string",
      "enum": [
        "AUTOMATIC",
        "MANUALLY"
      ],
      "default": "AUTOMATIC"
    },
    "v1CalendarFilterGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "parent is user_id"
        },
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "sourceId": {
          "type": "string",
          "title": "Per source per user there can be max 5 filter settings"
        },
        "pin": {
          "type": "boolean"
        },
        "selectedStatuses": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "selectedFilterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "showBlockTime": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1CalendarSetting": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "weekends": {
          "type": "boolean"
        },
        "columnWidth": {
          "type": "integer",
          "format": "int32"
        },
        "rowHeight": {
          "type": "integer",
          "format": "int32"
        },
        "view": {
          "type": "string"
        },
        "minEventDuration": {
          "type": "integer",
          "format": "int32"
        },
        "resourceColors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "weekdays": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "calendarDuration": {
          "$ref": "#/definitions/v1CalendarDuration"
        },
        "selectedResource": {
          "type": "string"
        },
        "selectedFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupBy": {
          "type": "integer",
          "format": "int32"
        },
        "resourceOrder": {
          "$ref": "#/definitions/v1ResourceOrder"
        },
        "filterResourceWithEvents": {
          "type": "boolean"
        },
        "startOfWeek": {
          "type": "integer",
          "format": "int32",
          "title": "0: SUNDAY, 1: MONDAY ... 6: SATURDAY, 7: SUNDAY"
        },
        "slotInterval": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1DeleteCalendarFilterGroupResponse": {
      "type": "object",
      "properties": {
        "deletedFilterGroup": {
          "$ref": "#/definitions/v1CalendarFilterGroup"
        }
      }
    },
    "v1GetAppointyUserSettingsResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "appointyUserSettingsData": {
          "$ref": "#/definitions/v1AppointyUserSettingData"
        }
      }
    },
    "v1ListCalendarFilterGroupResponse": {
      "type": "object",
      "properties": {
        "filterGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CalendarFilterGroup"
          }
        }
      }
    },
    "v1MeetingSetting": {
      "type": "object",
      "properties": {
        "savedEmployees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SavedEmployee"
          }
        }
      }
    },
    "v1OpenHourSetting": {
      "type": "object",
      "properties": {
        "weekends": {
          "type": "boolean"
        },
        "resourceColumnWidth": {
          "type": "integer",
          "format": "int32"
        },
        "view": {
          "type": "string"
        }
      }
    },
    "v1ResourceOrder": {
      "type": "string",
      "enum": [
        "MAX_EVENTS",
        "MIN_EVENTS",
        "UNSPECIFIED"
      ],
      "default": "MAX_EVENTS",
      "title": "- MAX_EVENTS: default value"
    },
    "v1SavedEmployee": {
      "type": "object",
      "properties": {
        "employeeId": {
          "type": "string"
        },
        "checked": {
          "type": "boolean"
        }
      }
    },
    "v1UpsertAppointyUserSettingsRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "businessId": {
          "type": "string"
        },
        "appointyUserSettingsData": {
          "$ref": "#/definitions/v1AppointyUserSettingData"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpsertCalendarFilterGroupRequest": {
      "type": "object",
      "properties": {
        "filterGroup": {
          "$ref": "#/definitions/v1CalendarFilterGroup"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpsertCalendarFilterGroupResponse": {
      "type": "object",
      "properties": {
        "filterGroup": {
          "$ref": "#/definitions/v1CalendarFilterGroup"
        }
      }
    },
    "v1ListUserSessionResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserSession"
          }
        }
      }
    },
    "v1UserSession": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "UserAgent": {
          "type": "string"
        },
        "IP": {
          "type": "string"
        },
        "loginAt": {
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "$ref": "#/definitions/typesAddress"
        }
      }
    },
    "v1CreateUserLoginImportResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the unique identifier of the user"
        },
        "externalLogins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ExternalLogin"
          },
          "title": "External_logins contain list of external logins"
        }
      }
    },
    "v1CreateUserLoginResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the unique identifier of the user"
        },
        "externalLogins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ExternalLogin"
          },
          "title": "External_logins contain list of external logins"
        }
      }
    },
    "v1ExternalLogin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "done for chaku, no other significance"
        },
        "externalId": {
          "type": "string",
          "title": "ExternalId is the unique external id provided by the third party login"
        },
        "provider": {
          "type": "string",
          "title": "Provider is the unique id of the third party login provider like facebook\n,Google"
        }
      }
    },
    "v1ListUserExternalLoginsResponse": {
      "type": "object",
      "properties": {
        "externalLogins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ExternalLogin"
          },
          "title": "List of external logins"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the unique identifier of the user"
        }
      }
    },
    "v1UserLogin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the unique identifier of the user i.e its profile id"
        },
        "password": {
          "type": "string",
          "title": "password of the user, this will be saved as hashed in our system\nShould be at least 8 character and maximums 72 characters long with numeric\nand alphabet"
        },
        "passwordChangedOn": {
          "type": "string",
          "format": "date-time"
        },
        "externalLogins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ExternalLogin"
          },
          "title": "ExternalLogins detail e.g. Google login or facebook login"
        }
      }
    },
    "v1ValidateProviderResponse": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        }
      }
    },
    "v1ValidateUserLoginResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id is the user Unique identifier"
        }
      }
    }
  }
}
