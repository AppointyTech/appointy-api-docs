{
  "swagger": "2.0",
  "info": {
    "title": "discount/pb/discount.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Discounts"
    },
    {
      "name": "ItemService"
    },
    {
      "name": "ParentService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/discounts": {
      "get": {
        "summary": "ListDiscounts returns all the discounts of the specified parent.",
        "operationId": "Discounts_ListDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListDiscountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "it is a fully qualified string that contains information about the owner in\nhierarchical manner group/location/business (required)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "first",
            "description": "First specifies the number of rows that are to be returned starting after\nthe the cursor (value of after) (required if last is 0 and before is\nempty).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "description": "After takes any value as cursor to get the data after that point. Data\nshould be sorted on type of value specified for After For Ex. id, datetime,\nname...\n(required if last is 0 and before is empty).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "description": "Last specifies the number of rows that are to be returned ending before the\nthe cursor (value of before) (required if first is 0 and after is empty).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "description": "Before takes any value as cursor to get the data before that point. Data\nshould be sorted on type of value specified for Before For Ex. id,\ndatetime, name...\n(required if first is 0 and after is empty).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applyAutomaticallyFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ApplyAutomaticallyFilter_UNSPECIFIED",
              "ALL",
              "TRUE",
              "FALSE"
            ],
            "default": "ApplyAutomaticallyFilter_UNSPECIFIED"
          },
          {
            "name": "statusFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "StatusFilter_UNSPECIFIED",
              "ALL_STATUS",
              "ACTIVE_STATUS",
              "INACTIVE_STATUS",
              "EXPIRED_STATUS"
            ],
            "default": "StatusFilter_UNSPECIFIED"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DiscountOrderByFilter_UNSPECIFIED",
              "FIRST_CREATED",
              "LAST_CREATED"
            ],
            "default": "DiscountOrderByFilter_UNSPECIFIED"
          }
        ],
        "tags": [
          "Discounts"
        ]
      },
      "post": {
        "summary": "Client request to create a discount\nAccepts CreateDiscountRequest which contains parent information and\ndiscount and returns newly created discount if all the validations are\npassed",
        "operationId": "Discounts_CreateDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDiscountRequest"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts/code/{code}": {
      "get": {
        "summary": "GetDiscount returns a discount based on its unique code.",
        "operationId": "Discounts_GetDiscountByCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "description": "Code Unique code of discount",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts/{discount.id}": {
      "put": {
        "summary": "Client request to update a discount\nAccepts UpdateDiscountRequest which is a discount and returns updated\ndiscount if all the validations are passed",
        "operationId": "Discounts_UpdateDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "discount.id",
            "description": "Unique identifier for discount",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscountsUpdateDiscountBody"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts/{id}": {
      "get": {
        "summary": "GetDiscount returns a discount based on its unique ID.\nID should be one that was retrieved by one of the list methods.",
        "operationId": "Discounts_GetDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Discount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id Unique discount identifier",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Discounts"
        ]
      },
      "delete": {
        "summary": "Client request to delete a product",
        "operationId": "Discounts_DeleteDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique Id of a discount",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "baseId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts:batch": {
      "post": {
        "summary": "to bulk import discounts list",
        "operationId": "Discounts_BatchCreateDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCreateDiscountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchCreateDiscountRequest"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts:batchDeleteDiscount": {
      "put": {
        "summary": "Client request to batch delete discounts(s) of the specified ids",
        "operationId": "Discounts_BatchDeleteDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchDeleteDiscountRequest"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts:batchGet": {
      "post": {
        "summary": "Client request to get  discounts(s) of the specified ids",
        "operationId": "Discounts_BatchGetDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetDiscountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchGetDiscountRequest"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts:batchStatusChangeDiscount": {
      "put": {
        "summary": "Client request to batch enable/disable discounts(s) of the specified ids",
        "operationId": "Discounts_BatchStatusChangeDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchStatusChangeDiscountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchStatusChangeDiscountRequest"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/v1/discounts:share": {
      "post": {
        "operationId": "Discounts_ShareDiscount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ShareDiscountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ShareDiscountRequest"
            }
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    }
  },
  "definitions": {
    "DiscountsUpdateDiscountBody": {
      "type": "object",
      "properties": {
        "discount": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "title": "This is alphanumeric string which will be required to avail discount"
            },
            "title": {
              "type": "string",
              "description": "Tile of the Discount. Title of the discount cannot be empty."
            },
            "description": {
              "type": "string",
              "title": "Description is a brief statement about discount, It gives an idea about when\nand on which items discount can be applied"
            },
            "discountType": {
              "$ref": "#/definitions/v1DiscountType",
              "title": "It has two possible values 1: PERCENTAGE 2: FIXED.\nIt tells weather a percentage of amount is deducted from total amount or a\nfixed amount is deducted"
            },
            "discountValue": {
              "$ref": "#/definitions/v1DiscountValue",
              "title": "This is the value that will used to calculate the amount of discount to be\ngiven If discount_type is in percentage, we need to calculate discount\namount else discount_value will directly be deducted for specific currency"
            },
            "discountableItemIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Unique Ids of items on which this discount will work, if empty it will work\non all items\npatterns : com_id/loc_id/srv* , com_id/*, com_id/loc_id* , com_id/loc_id/srv_id (valid items)\nchecked on create using item service : verifies patterns \u0026 discount parent corresponding to item parent\nitem should be on same level or below"
            },
            "restriction": {
              "$ref": "#/definitions/v1Restriction",
              "title": "Set of restrictions that defines how and when discount will work"
            },
            "enabled": {
              "type": "boolean",
              "title": "Disabled discount code can't be consumed\nand it will be updated using update field mask"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time"
            },
            "visibility": {
              "$ref": "#/definitions/v1Visibility"
            },
            "applyAutomatically": {
              "type": "boolean",
              "title": "applies automatically or not"
            },
            "applicableDurationStart": {
              "type": "string",
              "format": "date-time",
              "title": "discount can be applied on any item, if application date (current time) false within"
            },
            "applicableDurationEnd": {
              "type": "string",
              "format": "date-time"
            },
            "batchId": {
              "type": "string"
            },
            "gallery": {
              "$ref": "#/definitions/typesGallery"
            },
            "baseId": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "consumedCount": {
              "type": "integer",
              "format": "int32"
            },
            "bookingScheduleAfter": {
              "type": "string",
              "format": "date-time",
              "title": "discount can be applied if booking scheduled time is within"
            },
            "bookingScheduleBefore": {
              "type": "string",
              "format": "date-time"
            }
          },
          "title": "Discount contains discount items"
        },
        "updateMask": {
          "type": "string",
          "title": "UpdateMask controls which fields can be updated of the given discount"
        },
        "baseId": {
          "type": "string"
        }
      },
      "title": "Request to update discount"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesDayOfWeek": {
      "type": "string",
      "enum": [
        "SUNDAY",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY"
      ],
      "default": "SUNDAY",
      "description": "Represents a day of week.\n\n - SUNDAY: The day-of-week of Sunday.\n - MONDAY: The day-of-week of Monday.\n - TUESDAY: The day-of-week of Tuesday.\n - WEDNESDAY: The day-of-week of Wednesday.\n - THURSDAY: The day-of-week of Thursday.\n - FRIDAY: The day-of-week of Friday.\n - SATURDAY: The day-of-week of Saturday."
    },
    "typesGallery": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesGalleryItem"
          }
        },
        "default": {
          "$ref": "#/definitions/typesGalleryItem"
        }
      },
      "title": "for chaku always tag json"
    },
    "typesGalleryItem": {
      "type": "object",
      "properties": {
        "thumbImage": {
          "type": "string"
        },
        "largeImage": {
          "type": "string"
        }
      },
      "title": "Generic Gallery Item Object"
    },
    "typesMetaDetailsWrapper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "deletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "updateMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesPageInfo": {
      "type": "object",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "HasNext is used to indicate whether more edges exist following the set\ndefined by the clients arguments. If the client is paginating with\nfirst/after, then the server must return true if further edges exist,\notherwise false. If the client is paginating with last/before, then the\nclient may return true if edges further from before exist, if it can do so\nefficiently, otherwise may return false."
        },
        "hasPrevious": {
          "type": "boolean",
          "description": "HasPrevious is used to indicate whether more edges exist prior to the set\ndefined by the clients arguments.\nIf the client is paginating with last/before, then the server must return\ntrue if prior edges exist, otherwise false. If the client is paginating\nwith first/after, then the client may return true if edges prior to after\nexist, if it can do so efficiently, otherwise may return false."
        },
        "startCursor": {
          "type": "string"
        },
        "endCursor": {
          "type": "string"
        }
      }
    },
    "typesPrice": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "currency": {
          "type": "string"
        },
        "amountInFloat": {
          "type": "number",
          "format": "double",
          "title": "@deprecated - DO NOT USE"
        }
      },
      "title": "Generic Price object"
    },
    "typesTimeslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Timeslot object"
    },
    "v1ApplyAutomaticallyFilter": {
      "type": "string",
      "enum": [
        "ApplyAutomaticallyFilter_UNSPECIFIED",
        "ALL",
        "TRUE",
        "FALSE"
      ],
      "default": "ApplyAutomaticallyFilter_UNSPECIFIED"
    },
    "v1BatchCreateDiscountFlockResponse": {
      "type": "object",
      "properties": {
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateDiscountResponseWrapper"
          }
        }
      }
    },
    "v1BatchCreateDiscountRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "levelDiscounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LevelDiscount"
          }
        }
      }
    },
    "v1BatchCreateDiscountResponse": {
      "type": "object",
      "properties": {
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateDiscountResponseWrapper"
          }
        }
      }
    },
    "v1BatchDeleteDiscountId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "baseId": {
          "type": "string"
        }
      }
    },
    "v1BatchDeleteDiscountRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BatchDeleteDiscountId"
          },
          "title": "Ids ,Unique discount identifiers"
        }
      }
    },
    "v1BatchGetDiscountRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Ids ,Unique discount identifiers"
        },
        "viewMask": {
          "type": "string"
        }
      },
      "title": "Request to get product(s),"
    },
    "v1BatchGetDiscountResponse": {
      "type": "object",
      "properties": {
        "discount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Discount"
          }
        }
      },
      "title": "BatchGetDiscountResponse is the convenient wrapper for a list of discounts"
    },
    "v1BatchStatusChangeDiscountId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "baseId": {
          "type": "string"
        }
      }
    },
    "v1BatchStatusChangeDiscountRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BatchStatusChangeDiscountId"
          },
          "title": "Ids ,Unique discount identifiers"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "Request to get product(s),"
    },
    "v1BatchStatusChangeDiscountResponse": {
      "type": "object",
      "properties": {
        "discount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Discount"
          }
        }
      },
      "title": "BatchGetDiscountResponse is the convenient wrapper for a list of discounts"
    },
    "v1BatchUpdateDiscountMetadataRequestWrapper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "metaDetails": {
          "$ref": "#/definitions/typesMetaDetailsWrapper",
          "title": "MetaDetailsWrapper: ignore id and set update_mask to which ever field is need to be set in it"
        }
      }
    },
    "v1BatchUpdateDiscountMetadataResponse": {
      "type": "object",
      "properties": {
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BatchUpdateDiscountMetadataResponseWrapper"
          }
        }
      }
    },
    "v1BatchUpdateDiscountMetadataResponseWrapper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "error": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1BatchValidateParentResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1ConsumeRule": {
      "type": "object",
      "properties": {
        "initialOrderCount": {
          "$ref": "#/definitions/v1InitialOrderCount"
        },
        "userRestriction": {
          "$ref": "#/definitions/v1UserRestriction"
        },
        "usageRestriction": {
          "$ref": "#/definitions/v1UsageRestriction"
        },
        "minOrderCount": {
          "$ref": "#/definitions/v1MinOrderCount"
        },
        "minOrderItemCount": {
          "$ref": "#/definitions/v1MinOrderItemCount"
        }
      },
      "title": "Defines in which way and number of times discount can be used"
    },
    "v1CreateDiscountRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Parent contains the hierarchical information of the given discount like\nbusiness/group."
        },
        "discount": {
          "$ref": "#/definitions/v1Discount",
          "title": "The discount to create (required)"
        },
        "levelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Request to create discount"
    },
    "v1CreateDiscountResponseWrapper": {
      "type": "object",
      "properties": {
        "discount": {
          "$ref": "#/definitions/v1Discount"
        },
        "error": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1CreateDiscountWrapper": {
      "type": "object",
      "properties": {
        "levelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "discount": {
          "$ref": "#/definitions/v1Discount"
        },
        "metaDetails": {
          "$ref": "#/definitions/typesMetaDetailsWrapper",
          "title": "MetaDetailsWrapper: ignore id and set update_mask to which ever field is need to be set in it"
        }
      }
    },
    "v1CustomerRestriction": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "emails to be allowed for discount coupon application"
        }
      },
      "title": "This will be replaced with dynamic list later"
    },
    "v1Discount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Unique identifier for discount"
        },
        "code": {
          "type": "string",
          "title": "This is alphanumeric string which will be required to avail discount"
        },
        "title": {
          "type": "string",
          "description": "Tile of the Discount. Title of the discount cannot be empty."
        },
        "description": {
          "type": "string",
          "title": "Description is a brief statement about discount, It gives an idea about when\nand on which items discount can be applied"
        },
        "discountType": {
          "$ref": "#/definitions/v1DiscountType",
          "title": "It has two possible values 1: PERCENTAGE 2: FIXED.\nIt tells weather a percentage of amount is deducted from total amount or a\nfixed amount is deducted"
        },
        "discountValue": {
          "$ref": "#/definitions/v1DiscountValue",
          "title": "This is the value that will used to calculate the amount of discount to be\ngiven If discount_type is in percentage, we need to calculate discount\namount else discount_value will directly be deducted for specific currency"
        },
        "discountableItemIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Unique Ids of items on which this discount will work, if empty it will work\non all items\npatterns : com_id/loc_id/srv* , com_id/*, com_id/loc_id* , com_id/loc_id/srv_id (valid items)\nchecked on create using item service : verifies patterns \u0026 discount parent corresponding to item parent\nitem should be on same level or below"
        },
        "restriction": {
          "$ref": "#/definitions/v1Restriction",
          "title": "Set of restrictions that defines how and when discount will work"
        },
        "enabled": {
          "type": "boolean",
          "title": "Disabled discount code can't be consumed\nand it will be updated using update field mask"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "visibility": {
          "$ref": "#/definitions/v1Visibility"
        },
        "applyAutomatically": {
          "type": "boolean",
          "title": "applies automatically or not"
        },
        "applicableDurationStart": {
          "type": "string",
          "format": "date-time",
          "title": "discount can be applied on any item, if application date (current time) false within"
        },
        "applicableDurationEnd": {
          "type": "string",
          "format": "date-time"
        },
        "batchId": {
          "type": "string"
        },
        "gallery": {
          "$ref": "#/definitions/typesGallery"
        },
        "baseId": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "consumedCount": {
          "type": "integer",
          "format": "int32"
        },
        "bookingScheduleAfter": {
          "type": "string",
          "format": "date-time",
          "title": "discount can be applied if booking scheduled time is within"
        },
        "bookingScheduleBefore": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Discounts are reductions to a basic price of goods or services.\nFor eg. 10% discount on hair cut or 20% discount on shampoo"
    },
    "v1DiscountNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string",
          "title": "Position is the current position of the cursor in the Discount list eg :row\nnumber"
        },
        "node": {
          "$ref": "#/definitions/v1Discount",
          "title": "Information about the Discount"
        }
      },
      "title": "Information about each Discount and its position"
    },
    "v1DiscountOrderByFilter": {
      "type": "string",
      "enum": [
        "DiscountOrderByFilter_UNSPECIFIED",
        "FIRST_CREATED",
        "LAST_CREATED"
      ],
      "default": "DiscountOrderByFilter_UNSPECIFIED"
    },
    "v1DiscountType": {
      "type": "string",
      "enum": [
        "DiscountType_UNSPECIFIED",
        "PERCENTAGE",
        "FIXED"
      ],
      "default": "DiscountType_UNSPECIFIED"
    },
    "v1DiscountValue": {
      "type": "object",
      "properties": {
        "discountPercentage": {
          "type": "number",
          "format": "double",
          "title": "This value is used for discount percentage, this percent is used"
        },
        "discountPrices": {
          "$ref": "#/definitions/typesPrice",
          "title": "This value is used for fixed discount value and different currencies"
        }
      }
    },
    "v1EmployeeRestriction": {
      "type": "object",
      "properties": {
        "employeeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "employee ids to be allowed for discount coupon application"
        }
      }
    },
    "v1GetDiscountLinkingResponse": {
      "type": "object",
      "properties": {
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Discount"
          }
        }
      }
    },
    "v1GetItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id unique identifier for item"
        }
      }
    },
    "v1InitialOrderCount": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Two cases\n1. For user first x orders, for eg. we want users to apply discount on first 5 orders only\n2. Valid for customers with less than or equal to number of bookings"
    },
    "v1LevelDiscount": {
      "type": "object",
      "properties": {
        "levelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "discount": {
          "$ref": "#/definitions/v1Discount"
        }
      }
    },
    "v1ListAutomaticApplicablePublicDiscountCodeResponse": {
      "type": "object",
      "properties": {
        "discounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Discount"
          }
        }
      }
    },
    "v1ListDiscountResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DiscountNode"
          },
          "title": "List of Discount node which contains Discount and its position in the list"
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo"
        }
      },
      "title": "Response for ListDiscountsOfParent RPC, it contains Discount and pagination\ninformation"
    },
    "v1MinOrderCount": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Min bookings required for applying discount"
    },
    "v1MinOrderItemCount": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Restriction": {
      "type": "object",
      "properties": {
        "consumeRules": {
          "$ref": "#/definitions/v1ConsumeRule",
          "title": "Defines consume rules for discount"
        },
        "weekdayRule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WeekdayRule"
          },
          "description": "WeekdayRule  this rule will add restriction on discount\nconsumption like we can only consume the items of this package on every\nMonday and Tuesday of the week between 9 am to 6 pm."
        },
        "maxDiscount": {
          "$ref": "#/definitions/typesPrice",
          "title": "Maximum amount that can be deducted from total amount\nIf amount obtained after applying discount code is more than max_discount,\nthan user will receive amount specified in max_discount"
        },
        "maxDiscountableItems": {
          "type": "integer",
          "format": "int32",
          "description": "Number to total items that can be discounted in a single order.\nfor eg. an order contains 10 items all of which are valid for getting\ndiscount but maxDiscountableItems value is 4 than any 4 out of 10 items will\nbe discounted. -1 for no limit."
        },
        "order": {
          "$ref": "#/definitions/v1SelectionOrder",
          "title": "Order in which items will be picked for discount\nOnly work when maxDiscountableItems value is specified and discountable items\nare more than this value\nIt will always order based on price"
        },
        "minOrderAmount": {
          "$ref": "#/definitions/typesPrice",
          "title": "Minimum order price required to apply discount\nIf the price of order is less than the minimum amount,\ndiscount code cannot be applied"
        },
        "customerRestrictions": {
          "$ref": "#/definitions/v1CustomerRestriction",
          "title": "Customers allowed"
        },
        "employeeRestrictions": {
          "$ref": "#/definitions/v1EmployeeRestriction",
          "title": "Employees allowed"
        }
      },
      "title": "Restriction is the set of rule which can be applied to discount"
    },
    "v1SelectionOrder": {
      "type": "string",
      "enum": [
        "SelectionOrder_UNSPECIFIED",
        "ASC",
        "DESC"
      ],
      "default": "SelectionOrder_UNSPECIFIED",
      "title": "Sets the order in which selection will be done"
    },
    "v1ShareDiscountRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "discountId": {
          "type": "string"
        },
        "baseId": {
          "type": "string"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "levelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ShareDiscountResponse": {
      "type": "object",
      "properties": {
        "discountId": {
          "type": "string"
        },
        "discount": {
          "$ref": "#/definitions/v1Discount"
        },
        "customerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StatusFilter": {
      "type": "string",
      "enum": [
        "StatusFilter_UNSPECIFIED",
        "ALL_STATUS",
        "ACTIVE_STATUS",
        "INACTIVE_STATUS",
        "EXPIRED_STATUS"
      ],
      "default": "StatusFilter_UNSPECIFIED"
    },
    "v1UsageRestriction": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Total number of times discount can be used irrespective of user"
    },
    "v1UserRestriction": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "For users x number of usage, for eg. we want user to use discount for 5\ntimes only"
    },
    "v1ValidateParentResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1Visibility": {
      "type": "string",
      "enum": [
        "Visibility_UNSPECIFIED",
        "PRIVATE",
        "PUBLIC"
      ],
      "default": "Visibility_UNSPECIFIED"
    },
    "v1WeekdayRule": {
      "type": "object",
      "properties": {
        "slot": {
          "$ref": "#/definitions/typesTimeslot"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/typesDayOfWeek",
          "title": "day of week"
        }
      }
    }
  }
}
