{
  "openapi": "3.0.0",
  "info": {
    "title": "Mathnasium",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/student-enrolments": {
      "post": {
        "operationId": "StudentEnrolments_CreateStudentEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateStudentEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateStudentEnrolmentRequest"
            }
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      },
      "put": {
        "operationId": "StudentEnrolments_UpdateStudentEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateStudentEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateStudentEnrolmentRequest"
            }
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      }
    },
    "/v1/student-enrolments/location/linking": {
      "get": {
        "operationId": "StudentEnrolments_GetLinkedMathnasiumLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLinkedMathnasiumLocationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "studentId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      }
    },
    "/v1/student-enrolments/remaining-sessions": {
      "get": {
        "operationId": "StudentEnrolments_GetStudentsRemainingSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStudentsRemainingSessionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "studentId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "guardianId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      }
    },
    "/v1/student-enrolments/{id}": {
      "get": {
        "operationId": "StudentEnrolments_GetStudentEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStudentEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      },
      "delete": {
        "operationId": "StudentEnrolments_DeleteStudentEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteStudentEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      }
    },
    "/v1/student-enrolments:batch": {
      "get": {
        "operationId": "StudentEnrolments_BatchGetStudentEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetStudentEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "studentIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "currentOrFutureEnrolmentsOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      }
    },
    "/v1/student-enrolments:list": {
      "get": {
        "operationId": "StudentEnrolments_ListStudentEnrolments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListStudentEnrolmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "studentId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "terminationDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "StudentEnrolments"
        ]
      }
    },
    "/v1/wrappers/mathnasium/appointment/status": {
      "patch": {
        "summary": "ChangeStudentAppointmentStatus will change the appointment status",
        "operationId": "MathnasiumWrappers_ChangeStudentAppointmentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangeStudentAppointmentStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangeStudentAppointmentStatusRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      }
    },
    "/v1/wrappers/mathnasium/customer-account": {
      "get": {
        "summary": "GetCustomerAccount will return the mathnasium customer account details â€“ including all guardians",
        "operationId": "MathnasiumWrappers_GetCustomerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomerAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "post": {
        "summary": "CreateCustomerAccount will create new customer account with the provided guardian details",
        "operationId": "MathnasiumWrappers_CreateCustomerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCustomerAccountRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "put": {
        "summary": "UpdateCustomerAccount will update the customer account details",
        "operationId": "MathnasiumWrappers_UpdateCustomerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCustomerAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCustomerAccountRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      }
    },
    "/v1/wrappers/mathnasium/physical-center": {
      "get": {
        "summary": "GetPhysicalCenter will return the physical center with corresponding mathnasium masters for provided center id",
        "operationId": "MathnasiumWrappers_GetPhysicalCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPhysicalCenterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "centerId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "post": {
        "summary": "CreatePhysicalCenter will create physical centers with corresponding mathnasium masters",
        "operationId": "MathnasiumWrappers_CreatePhysicalCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePhysicalCenterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePhysicalCenterRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "put": {
        "summary": "UpdatePhysicalCenter will update physical center with corresponding mathnasium masters",
        "operationId": "MathnasiumWrappers_UpdatePhysicalCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePhysicalCenterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePhysicalCenterRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      }
    },
    "/v1/wrappers/mathnasium/student": {
      "get": {
        "summary": "GetStudentWithEnrolment will return the mathnasium account's students with enrolment",
        "operationId": "MathnasiumWrappers_GetStudentWithEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStudentWithEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "studentId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "post": {
        "summary": "CreateStudentWithEnrolment will create new student with their enrolment",
        "operationId": "MathnasiumWrappers_CreateStudentWithEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateStudentWithEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateStudentWithEnrolmentRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "put": {
        "summary": "UpdateStudentWithEnrolment will update new student with their enrolment",
        "operationId": "MathnasiumWrappers_UpdateStudentWithEnrolment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateStudentWithEnrolmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateStudentWithEnrolmentRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      }
    },
    "/v1/wrappers/mathnasium/virtual-center": {
      "get": {
        "summary": "GetVirtualCenter will return the virtual center with corresponding mathnasium masters for provided center id",
        "operationId": "MathnasiumWrappers_GetVirtualCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetVirtualCenterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "centerId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "post": {
        "summary": "CreateVirtualCenter will create virtual centers with corresponding mathnasium masters",
        "operationId": "MathnasiumWrappers_CreateVirtualCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateVirtualCenterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateVirtualCenterRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      },
      "put": {
        "summary": "UpdateVirtualCenter will update virtual center with corresponding mathnasium masters",
        "operationId": "MathnasiumWrappers_UpdateVirtualCenter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateVirtualCenterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateVirtualCenterRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumWrappers"
        ]
      }
    },
    "/v1/mathnasium-service-link": {
      "post": {
        "summary": "UpsertMathnasiumServiceLink will basically create or update a mathnasium service\nlinking depending on whether it's already present in the system or not.\nThere will be only one MathnasiumServiceLink object for each service",
        "operationId": "MathnasiumMasters_UpsertMathnasiumServiceLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertMathnasiumServiceLinkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertMathnasiumServiceLinkRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumMasters"
        ]
      }
    },
    "/v1/mathnasium-service-links": {
      "get": {
        "summary": "ListMathnasiumServiceLinks returns all the MathnasiumServiceLinks under the given\nlocation_id or set of service_ids",
        "operationId": "MathnasiumMasters_ListMathnasiumServiceLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMathnasiumServiceLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "serviceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "MathnasiumMasters"
        ]
      }
    },
    "/v1/mathnasium/masters": {
      "get": {
        "operationId": "MathnasiumMasters_GetMathnasiumMaster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMathnasiumMasterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customLocationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MathnasiumMasters"
        ]
      },
      "delete": {
        "operationId": "MathnasiumMasters_DeleteMathnasiumMaster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteMathnasiumMasterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customLocationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MathnasiumMasters"
        ]
      },
      "post": {
        "summary": "UpsertMathnasiumMaster will basically create or update a master depending on whether it's already\npresent in the system or not. A location can only have one MathnasiumMaster object.\nBut first validate location_id and custom_location_id",
        "operationId": "MathnasiumMasters_UpsertMathnasiumMaster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpsertMathnasiumMasterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpsertMathnasiumMasterRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumMasters"
        ]
      }
    },
    "/v1/mathnasium/sync/appointments": {
      "post": {
        "summary": "SyncMathnasiumAppointments is the method for Radius System of Mathnasium, to sync all the\nchanges of appointments made after a timestamp. User must be logged in to use this method",
        "operationId": "MathnasiumMasters_SyncMathnasiumAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SyncMathnasiumAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SyncMathnasiumAppointmentsRequest"
            }
          }
        ],
        "tags": [
          "MathnasiumMasters"
        ]
      }
    },
    "/v1/mathnasium/availability": {
      "post": {
        "summary": "todo: add attribute level rights access for MathnasiumListSlots,MathnasiumListDates,MathnasiumListServicesOrEmployees",
        "operationId": "StudentBookings_MathnasiumListSlots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListSlotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListSlotsRequest"
            }
          }
        ],
        "tags": [
          "StudentBookings"
        ]
      }
    },
    "/v1/mathnasium/availability/dates": {
      "post": {
        "operationId": "StudentBookings_MathnasiumListDates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListDatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListDatesRequest"
            }
          }
        ],
        "tags": [
          "StudentBookings"
        ]
      }
    },
    "/v1/mathnasium/availability/services-employees": {
      "post": {
        "operationId": "StudentBookings_MathnasiumListServicesOrEmployees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListServicesOrEmployeesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListServicesOrEmployeesRequest"
            }
          }
        ],
        "tags": [
          "StudentBookings"
        ]
      }
    },
    "/v1/mathnasium/availability/student-services-employees": {
      "post": {
        "operationId": "StudentBookings_MathnasiumListServicesOrEmployeesOfStudents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListServicesOrEmployeesOfStudentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1MathnasiumListServicesOrEmployeesOfStudentRequest"
            }
          }
        ],
        "tags": [
          "StudentBookings"
        ]
      }
    },
    "/v1/mathnasium/report/over-booking": {
      "get": {
        "operationId": "StudentBookings_MathnasiumOverBookingReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MathnasiumOverBookingReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "parent will be location id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "description": "date will be the date at which over booking report need to be generated",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "StudentBookings"
        ]
      }
    },
    "/v1/students": {
      "get": {
        "operationId": "Students_ListStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListStudentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "guardianId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mergingStatuses",
            "description": "filters",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "APPOINTY_ACCOUNT",
                "RADIUS_ACCOUNT",
                "MERGED_ACCOUNT"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "first",
            "description": "pagination related fields",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Students"
        ]
      },
      "post": {
        "operationId": "Students_CreateStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Student"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateStudentRequest"
            }
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/batch-get-student-location-links": {
      "put": {
        "summary": "deprecated with respect to Student Enrolments' GetLinkedMathnasiumLocations",
        "operationId": "Students_BatchGetStudentLocationLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetStudentLocationLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "studentIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/list-by-guardians": {
      "get": {
        "operationId": "Students_ListStudentsByGuardians",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListStudentsByGuardiansResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "guardianIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mergingStatuses",
            "description": "filters",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "UNDEFINED",
                "APPOINTY_ACCOUNT",
                "RADIUS_ACCOUNT",
                "MERGED_ACCOUNT"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "query",
            "description": "fullname or email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/location-link": {
      "get": {
        "summary": "deprecated with respect to Student Enrolments' GetLinkedMathnasiumLocations",
        "operationId": "Students_GetStudentLocationLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetStudentLocationLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "studentId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Students"
        ]
      },
      "put": {
        "summary": "deprecated with respect to Student Enrolments' GetLinkedMathnasiumLocations",
        "operationId": "Students_UpsertStudentLocationLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StudentLocationLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "studentId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/location-student-link": {
      "put": {
        "summary": "deprecated with respect to Student Enrolments' GetLinkedMathnasiumLocations",
        "operationId": "Students_UpsertLocationStudentLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StudentLocationLinksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "studentIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/parents/list": {
      "get": {
        "operationId": "Students_ListParentsUsingStudents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListParentsUsingStudentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessContact",
            "description": "AccessContact to check if user has access for customer(parents') contact details\nworks on the basis of \"access_contact.ListCustomer\" right pattern",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "query",
            "description": "Query makes overall search in student's/parent's email or name -- optional",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forParent.firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forParent.lastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forParent.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forParent.phoneNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forParent.registeredAfter",
            "description": "RegisteredAfter will check CreatedOn > input",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "forParent.registeredBefore",
            "description": "RegisteredBefore will check CreatedOn < input",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "forStudent.firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forStudent.lastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forStudent.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forStudent.phoneNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forStudent.registeredAfter",
            "description": "RegisteredAfter will check CreatedOn > input",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "forStudent.registeredBefore",
            "description": "RegisteredBefore will check CreatedOn < input",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "locationIds",
            "description": "Location linking",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tags",
            "description": "Other Customer's filters",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "customerCompanyId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "description": "pagination related fields",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "default": "Ascending"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CreatedOn",
              "LastName",
              "FirstName",
              "Email"
            ],
            "default": "CreatedOn"
          },
          {
            "name": "first",
            "description": "first specifies limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "description": "after specifies cursor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/{id}": {
      "get": {
        "operationId": "Students_GetStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Student"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Students"
        ]
      },
      "delete": {
        "operationId": "Students_DeleteStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "guardianId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students/{student.id}": {
      "put": {
        "operationId": "Students_UpdateStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Student"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "student.id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudentsUpdateStudentBody"
            }
          }
        ],
        "tags": [
          "Students"
        ]
      }
    },
    "/v1/students:batchGet": {
      "post": {
        "operationId": "Students_BatchGetStudent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetStudentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchGetStudentRequest"
            }
          }
        ],
        "tags": [
          "Students"
        ]
      }
    }
  },
  "components": {
    "schemas": null,
    "responses": null,
    "parameters": null,
    "requestBodies": null
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesFrequency": {
      "type": "string",
      "enum": [
        "ONCE",
        "DAILY",
        "WEEKLY",
        "MONTHLY",
        "YEARLY",
        "FIXED",
        "HOURLY"
      ],
      "default": "ONCE",
      "title": "Frequency"
    },
    "typesTimeslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Timeslot object"
    },
    "v1BatchGetStudentEnrolmentResponse": {
      "type": "object",
      "properties": {
        "studentLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentEnrolmentsLink"
          }
        }
      }
    },
    "v1CreateStudentEnrolmentRequest": {
      "type": "object",
      "properties": {
        "studentEnrolment": {
          "$ref": "#/definitions/v1StudentEnrolment",
          "title": "parent will be StudentId"
        }
      }
    },
    "v1CreateStudentEnrolmentResponse": {
      "type": "object",
      "properties": {
        "studentEnrolment": {
          "$ref": "#/definitions/v1StudentEnrolment"
        }
      }
    },
    "v1DeleteStudentEnrolmentResponse": {
      "type": "object",
      "properties": {
        "deletedEnrolment": {
          "$ref": "#/definitions/v1StudentEnrolment"
        }
      }
    },
    "v1DeliveryMethod": {
      "type": "object",
      "properties": {
        "deliveryMethod": {
          "$ref": "#/definitions/v1DeliveryMethodType"
        },
        "timeSlot": {
          "$ref": "#/definitions/typesTimeslot"
        }
      }
    },
    "v1DeliveryMethodType": {
      "type": "string",
      "enum": [
        "InCenter",
        "Home",
        "Hybrid"
      ],
      "default": "InCenter"
    },
    "v1EnrolmentBaseType": {
      "type": "string",
      "enum": [
        "Sessions_Package",
        "Private_Sessions_Package",
        "Monthly_Sessions",
        "Flexible"
      ],
      "default": "Sessions_Package"
    },
    "v1GetLinkedMathnasiumLocationsResponse": {
      "type": "object",
      "properties": {
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "students": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentAllowedLocation"
          }
        }
      }
    },
    "v1GetStudentEnrolmentResponse": {
      "type": "object",
      "properties": {
        "studentEnrolment": {
          "$ref": "#/definitions/v1StudentEnrolment"
        }
      }
    },
    "v1GetStudentsRemainingSessionsResponse": {
      "type": "object",
      "properties": {
        "enrolmentRemainingSessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RemainingSessionsInEnrolment"
          }
        },
        "restrictionsRemainingSessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RemainingSessionsInConsumerRestrictions"
          }
        }
      }
    },
    "v1ListStudentEnrolmentsResponse": {
      "type": "object",
      "properties": {
        "studentEnrolments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentEnrolment"
          }
        }
      }
    },
    "v1RemainingSessionsInConsumerRestrictions": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/typesFrequency",
          "title": "only daily or weekly is allowed"
        },
        "remainingSessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RemainingSessionsInDuration"
          }
        }
      }
    },
    "v1RemainingSessionsInDuration": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "remainingSessions": {
          "type": "string",
          "format": "int64"
        },
        "isUnlimited": {
          "type": "boolean"
        }
      }
    },
    "v1RemainingSessionsInEnrolment": {
      "type": "object",
      "properties": {
        "enrolmentId": {
          "type": "string"
        },
        "enrolmentType": {
          "$ref": "#/definitions/v1EnrolmentBaseType"
        },
        "remainingSessions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RemainingSessionsInDuration"
          }
        }
      }
    },
    "v1StudentAllowedLocation": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1StudentEnrolment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "studentId": {
          "type": "string"
        },
        "customStudentId": {
          "type": "string",
          "title": "IDs from Radius system"
        },
        "customEnrolmentId": {
          "type": "string"
        },
        "membershipTypeId": {
          "type": "string",
          "title": "Membership associated with this enrolment"
        },
        "gradeRangeId": {
          "type": "string",
          "title": "Grade range in which this enrolment is applicable"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "Enrolment duration"
        },
        "terminationDate": {
          "type": "string",
          "format": "date-time"
        },
        "sessionLengths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Sessions Durations associated with this enrolment (in seconds)"
        },
        "maxSessions": {
          "type": "string",
          "format": "int64",
          "title": "Max sessions allowed for this enrolment"
        },
        "remainingSessions": {
          "type": "string",
          "format": "int64",
          "title": "Remaining sessions of the current enrolment cycle"
        },
        "deliveryMethods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DeliveryMethod"
          },
          "title": "Delivery method for this enrolment"
        },
        "holds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentEnrolmentHold"
          },
          "title": "Holds in the enrolment cycle"
        },
        "enrolmentBaseType": {
          "$ref": "#/definitions/v1EnrolmentBaseType",
          "title": "BaseType of the enrolments"
        }
      }
    },
    "v1StudentEnrolmentHold": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "customHoldId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "title": "Hold duration"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleteScheduledSessions": {
          "type": "boolean",
          "title": "Whether to delete the scheduled sessions or not"
        }
      }
    },
    "v1StudentEnrolmentsLink": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "enrolments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentEnrolment"
          }
        }
      }
    },
    "v1UpdateStudentEnrolmentRequest": {
      "type": "object",
      "properties": {
        "studentEnrolment": {
          "$ref": "#/definitions/v1StudentEnrolment"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateStudentEnrolmentResponse": {
      "type": "object",
      "properties": {
        "studentEnrolment": {
          "$ref": "#/definitions/v1StudentEnrolment"
        }
      }
    },
    "typesAddress": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "title": "Country , e.g. \"USA\". (required)"
        },
        "locality": {
          "type": "string",
          "title": "Locality or locality/city, e.g. \"Mountain View\". (required)"
        },
        "region": {
          "type": "string",
          "title": "Region, The region/state/province, e.g. \"CA\". This field is only required\nin\ncountries where region is commonly a part of the address. (optional)"
        },
        "postalCode": {
          "type": "string",
          "title": "PostalCode  e.g. \"94043\". (required)"
        },
        "streetAddress": {
          "type": "string",
          "title": "StreetAddress, e.g. \"1600 Amphitheatre Pkwy\". (required)"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "GeoCoordinates , e.g. latitude=23.2599333, longitude=77.41261499999996\nLatitude e.g. 23.2599333"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "Longitude e.g. 77.41261499999996"
        }
      }
    },
    "v1ChangeStudentAppointmentStatusRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "appointmentId": {
          "type": "string"
        },
        "newStatus": {
          "$ref": "#/definitions/v1MathnasiumAppointmentStatus"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "v1ChangeStudentAppointmentStatusResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "v1CreateCustomerAccountRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/v1WrpCustomerAccount"
        }
      }
    },
    "v1CreateCustomerAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1WrpCustomerAccount"
        }
      }
    },
    "v1CreatePhysicalCenterRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "center": {
          "$ref": "#/definitions/v1WrpPhysicalCenter"
        }
      }
    },
    "v1CreatePhysicalCenterResponse": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1WrpPhysicalCenter"
        }
      }
    },
    "v1CreateStudentWithEnrolmentRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "student": {
          "$ref": "#/definitions/v1WrpStudent"
        }
      }
    },
    "v1CreateStudentWithEnrolmentResponse": {
      "type": "object",
      "properties": {
        "student": {
          "$ref": "#/definitions/v1WrpStudent"
        }
      }
    },
    "v1CreateVirtualCenterRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "center": {
          "$ref": "#/definitions/v1WrpVirtualCenter"
        }
      }
    },
    "v1CreateVirtualCenterResponse": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1WrpVirtualCenter"
        }
      }
    },
    "v1GetCustomerAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1WrpCustomerAccount"
        }
      }
    },
    "v1GetPhysicalCenterResponse": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1WrpPhysicalCenter"
        }
      }
    },
    "v1GetStudentWithEnrolmentResponse": {
      "type": "object",
      "properties": {
        "student": {
          "$ref": "#/definitions/v1WrpStudent"
        }
      }
    },
    "v1GetVirtualCenterResponse": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1WrpVirtualCenter"
        }
      }
    },
    "v1MathnasiumAppointmentStatus": {
      "type": "string",
      "enum": [
        "Scheduled",
        "Attended",
        "NoShow",
        "NoShowEM",
        "Canceled",
        "LateCanceled",
        "LateCanceledEM"
      ],
      "default": "Scheduled"
    },
    "v1UpdateCustomerAccountRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/v1WrpCustomerAccount"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateCustomerAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1WrpCustomerAccount"
        }
      }
    },
    "v1UpdatePhysicalCenterRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "center": {
          "$ref": "#/definitions/v1WrpPhysicalCenter"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdatePhysicalCenterResponse": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1WrpPhysicalCenter"
        }
      }
    },
    "v1UpdateStudentWithEnrolmentRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "student": {
          "$ref": "#/definitions/v1WrpStudent"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateStudentWithEnrolmentResponse": {
      "type": "object",
      "properties": {
        "student": {
          "$ref": "#/definitions/v1WrpStudent"
        }
      }
    },
    "v1UpdateVirtualCenterRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "center": {
          "$ref": "#/definitions/v1WrpVirtualCenter"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateVirtualCenterResponse": {
      "type": "object",
      "properties": {
        "center": {
          "$ref": "#/definitions/v1WrpVirtualCenter"
        }
      }
    },
    "v1WrpCenterType": {
      "type": "string",
      "enum": [
        "Normal",
        "PodTeaching",
        "TeamTeaching"
      ],
      "default": "Normal"
    },
    "v1WrpCustomerAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "physicalCenterId": {
          "type": "string"
        },
        "guardians": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpGuardian"
          }
        },
        "physicalCenterAppointyId": {
          "type": "string"
        }
      }
    },
    "v1WrpDeliveryMethod": {
      "type": "object",
      "properties": {
        "deliveryMethodId": {
          "type": "string"
        },
        "deliveryMethod": {
          "$ref": "#/definitions/v1WrpDeliveryMethodType"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1WrpDeliveryMethodType": {
      "type": "string",
      "enum": [
        "InCenter",
        "Home",
        "Hybrid"
      ],
      "default": "InCenter"
    },
    "v1WrpEnrolment": {
      "type": "object",
      "properties": {
        "enrolmentId": {
          "type": "string"
        },
        "membershipId": {
          "type": "string"
        },
        "gradeRangeId": {
          "type": "string"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "terminationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "sessionLengthsInSeconds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "maxSessions": {
          "type": "string",
          "format": "int64"
        },
        "remainingSessions": {
          "type": "string",
          "format": "int64"
        },
        "deliveryMethods": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpDeliveryMethod"
          }
        },
        "holds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpEnrolmentHolds"
          }
        },
        "baseType": {
          "$ref": "#/definitions/v1WrpEnrolmentBaseType"
        },
        "appointyId": {
          "type": "string"
        }
      }
    },
    "v1WrpEnrolmentBaseType": {
      "type": "string",
      "enum": [
        "Sessions_Package",
        "Private_Sessions_Package",
        "Monthly_Sessions",
        "Flexible"
      ],
      "default": "Sessions_Package"
    },
    "v1WrpEnrolmentHolds": {
      "type": "object",
      "properties": {
        "holdId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleteScheduledSessions": {
          "type": "boolean"
        }
      }
    },
    "v1WrpGradeRange": {
      "type": "object",
      "properties": {
        "gradeRangeId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1WrpGuardian": {
      "type": "object",
      "properties": {
        "guardianId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "appointyId": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/typesAddress"
        },
        "timezone": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      }
    },
    "v1WrpMembershipType": {
      "type": "object",
      "properties": {
        "membershipTypeId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1WrpPhysicalCenter": {
      "type": "object",
      "properties": {
        "centerType": {
          "$ref": "#/definitions/v1WrpCenterType"
        },
        "centerId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contactNumber": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/typesAddress"
        },
        "inactiveDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "membershipTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpMembershipType"
          }
        },
        "gradeRanges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpGradeRange"
          }
        },
        "appointyId": {
          "type": "string"
        }
      }
    },
    "v1WrpStudent": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "virtualCenterId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "enrolments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpEnrolment"
          }
        },
        "appointyId": {
          "type": "string"
        },
        "virtualCenterAppointyId": {
          "type": "string"
        }
      }
    },
    "v1WrpVirtualCenter": {
      "type": "object",
      "properties": {
        "centerType": {
          "$ref": "#/definitions/v1WrpCenterType"
        },
        "centerId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "contactNumber": {
          "type": "string"
        },
        "inactiveDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "membershipTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpMembershipType"
          }
        },
        "gradeRanges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WrpGradeRange"
          }
        },
        "appointyId": {
          "type": "string"
        }
      }
    },
    "v1DeleteMathnasiumMasterResponse": {
      "type": "object",
      "properties": {
        "deletedMaster": {
          "$ref": "#/definitions/v1MathnasiumMaster"
        }
      }
    },
    "v1GetMathnasiumMasterResponse": {
      "type": "object",
      "properties": {
        "master": {
          "$ref": "#/definitions/v1MathnasiumMaster"
        }
      }
    },
    "v1ListMathnasiumServiceLinksResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumServiceLinkWrapper"
          }
        }
      }
    },
    "v1MathnasiumAppointment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/v1MathnasiumUser"
        },
        "lastModifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "title": "Appointment details"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "appointyStatus": {
          "type": "string"
        },
        "student": {
          "$ref": "#/definitions/v1MathnasiumUser",
          "title": "Guardian and Student details"
        },
        "guardian": {
          "$ref": "#/definitions/v1MathnasiumUser"
        },
        "enrolmentId": {
          "type": "string",
          "title": "Enrolment & Center details"
        },
        "centerId": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumGradeRange": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumMaster": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "parent will be location id"
        },
        "locationId": {
          "type": "string"
        },
        "customLocationId": {
          "type": "string",
          "title": "IDs from Radius system"
        },
        "memberships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumMembership"
          },
          "title": "Memberships from Radius system"
        },
        "grades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumGradeRange"
          },
          "title": "Grade ranges from Radius system"
        }
      }
    },
    "v1MathnasiumMembership": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumServiceLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "parent will be service_id"
        },
        "serviceId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "memberships": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumMembership"
          },
          "title": "Memberships from Radius system"
        },
        "grades": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumGradeRange"
          },
          "title": "Grade ranges from Radius system"
        }
      }
    },
    "v1MathnasiumServiceLinkWrapper": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceLink": {
          "$ref": "#/definitions/v1MathnasiumServiceLink"
        }
      }
    },
    "v1MathnasiumUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "radiusId": {
          "type": "string"
        }
      }
    },
    "v1SyncMathnasiumAppointmentsRequest": {
      "type": "object",
      "properties": {
        "after": {
          "type": "string",
          "format": "date-time"
        },
        "parent": {
          "type": "string"
        }
      }
    },
    "v1SyncMathnasiumAppointmentsResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumAppointment"
          }
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time"
        },
        "waitTill": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1UpsertMathnasiumMasterRequest": {
      "type": "object",
      "properties": {
        "master": {
          "$ref": "#/definitions/v1MathnasiumMaster"
        }
      }
    },
    "v1UpsertMathnasiumMasterResponse": {
      "type": "object",
      "properties": {
        "master": {
          "$ref": "#/definitions/v1MathnasiumMaster"
        }
      }
    },
    "v1UpsertMathnasiumServiceLinkRequest": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1MathnasiumServiceLink"
        }
      }
    },
    "v1UpsertMathnasiumServiceLinkResponse": {
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/v1MathnasiumServiceLink"
        }
      }
    },
    "v1MathnasiumFilter": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "timeSlot": {
          "$ref": "#/definitions/typesTimeslot"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "employees": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "type": "string",
          "format": "int64",
          "title": "duration in seconds if provided then the slot will only returned if their duration matches"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "capacity is the min allowed capacity for the slot"
        },
        "lastRequestTime": {
          "type": "string",
          "format": "date-time",
          "description": "LastRequestTime is used to provide an added buffer to some time based settings, check. When\nthe difference between allowed time and current time is less than 2 minutes."
        },
        "consumerId": {
          "type": "string",
          "title": "ConsumerId is used for getting the consumer restrictions and filtering the restrictions at availability level"
        },
        "existingAppointmentId": {
          "type": "string",
          "title": "ExistingAppointmentId"
        },
        "enrolmentId": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumListDatesRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumFilter"
          },
          "title": "Filter for ListDateRequest"
        },
        "timezone": {
          "type": "string",
          "title": "Timezone of the ListDateRequest (Min Length : 1)"
        },
        "skipValidations": {
          "type": "boolean",
          "title": "skip validations"
        }
      }
    },
    "v1MathnasiumListDatesResponse": {
      "type": "object",
      "properties": {
        "available": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          },
          "title": "Available contains dates as key and true/false as values, true if available"
        },
        "errorMessage": {
          "type": "string"
        },
        "datesStatus": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "DatesStatus contains dates as key and type of slot(available/booked) as values"
        }
      }
    },
    "v1MathnasiumListServicesOrEmployeesNode": {
      "type": "object",
      "properties": {
        "availableIds": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "errorMessage": {
          "type": "string"
        },
        "studentId": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumListServicesOrEmployeesOfStudentNode": {
      "type": "object",
      "properties": {
        "availableIds": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "errorMessage": {
          "type": "string"
        },
        "studentId": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumListServicesOrEmployeesOfStudentRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumFilter"
          },
          "title": "Filter for ListDateRequest"
        },
        "listEmployees": {
          "type": "boolean",
          "title": "default behaviour of the endpoint is to return available services\nand if employees are required set list_employees field true"
        },
        "skipValidations": {
          "type": "boolean",
          "title": "skip validations"
        }
      }
    },
    "v1MathnasiumListServicesOrEmployeesOfStudentResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumListServicesOrEmployeesOfStudentNode"
          }
        }
      }
    },
    "v1MathnasiumListServicesOrEmployeesRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumFilter"
          },
          "title": "Filter for ListDateRequest"
        },
        "listEmployees": {
          "type": "boolean",
          "title": "default behaviour of the endpoint is to return available services\nand if employees are required set list_employees field true"
        },
        "skipValidations": {
          "type": "boolean",
          "title": "skip validations"
        }
      }
    },
    "v1MathnasiumListServicesOrEmployeesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumListServicesOrEmployeesNode"
          }
        }
      }
    },
    "v1MathnasiumListSlotsNode": {
      "type": "object",
      "properties": {
        "slots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumSlotWrapper"
          },
          "title": "Slots contains time slots for resources"
        },
        "errorMessage": {
          "type": "string"
        },
        "studentId": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumListSlotsRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumFilter"
          },
          "title": "Filters for ListSlotsRequest"
        },
        "skipValidations": {
          "type": "boolean",
          "title": "skip validations"
        },
        "timezone": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumListSlotsResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumListSlotsNode"
          }
        }
      }
    },
    "v1MathnasiumOverBookingReportData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "appointmentDate": {
          "$ref": "#/definitions/typesTimeslot"
        },
        "studentData": {
          "$ref": "#/definitions/v1OverBookingStudentData"
        },
        "sessionName": {
          "type": "string"
        },
        "sessionDuration": {
          "type": "string"
        },
        "bookedByAdmin": {
          "type": "boolean"
        },
        "enrolmentId": {
          "type": "string"
        }
      }
    },
    "v1MathnasiumOverBookingReportResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MathnasiumOverBookingReportData"
          }
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "downloadLimit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1MathnasiumSlot": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "timeSlot": {
          "$ref": "#/definitions/typesTimeslot",
          "description": "TimeSlot is the time of the slot."
        },
        "service": {
          "type": "string",
          "description": "Service is the id of the service."
        },
        "employee": {
          "type": "string",
          "description": "Employee is the id of the employee."
        },
        "capacity": {
          "type": "string",
          "format": "int64"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "studentId": {
          "type": "string"
        },
        "enrolmentId": {
          "type": "string"
        },
        "warningMessage": {
          "type": "string",
          "title": "WarningMessage if any"
        }
      },
      "title": "Slot only contains corresponding id's of each item only"
    },
    "v1MathnasiumSlotType": {
      "type": "string",
      "enum": [
        "Available",
        "AvailableAppointment",
        "BookedAppointment",
        "BlockedHours",
        "NonOpenHours",
        "LeasedAppointment"
      ],
      "default": "Available",
      "title": "- NonOpenHours: not handled"
    },
    "v1MathnasiumSlotWrapper": {
      "type": "object",
      "properties": {
        "slotType": {
          "$ref": "#/definitions/v1MathnasiumSlotType"
        },
        "slot": {
          "$ref": "#/definitions/v1MathnasiumSlot"
        }
      }
    },
    "v1OverBookingStudentData": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "guardianId": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "guardianEmail": {
          "type": "string"
        },
        "guardianFirstName": {
          "type": "string"
        },
        "guardianLastName": {
          "type": "string"
        },
        "studentId": {
          "type": "string"
        }
      }
    },
    "StudentsUpdateStudentBody": {
      "type": "object",
      "properties": {
        "student": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "telephones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "phoneNumber": {
              "type": "string"
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date-time"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "grade": {
              "type": "string"
            },
            "profileImage": {
              "$ref": "#/definitions/typesGalleryItem",
              "title": "Url of the profile Image"
            },
            "userId": {
              "type": "string"
            },
            "primaryGuardianId": {
              "type": "string",
              "title": "Guardians are the links of student => Customer ids (Guardian is an alias to Customer)"
            },
            "secondaryGuardianId": {
              "type": "string",
              "title": "optional"
            },
            "createdBy": {
              "type": "string",
              "title": "meta infos"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time"
            },
            "updatedBy": {
              "type": "string"
            },
            "updatedOn": {
              "type": "string",
              "format": "date-time"
            },
            "activeMembership": {
              "type": "boolean"
            },
            "customStudentId": {
              "type": "string"
            },
            "virtualCenterId": {
              "type": "string"
            },
            "accountId": {
              "type": "string",
              "description": "this is sso_id of guardian",
              "title": "Radius custom account details"
            },
            "physicalCenterId": {
              "type": "string"
            },
            "mergingStatus": {
              "$ref": "#/definitions/v1MergingStatus"
            }
          }
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "typesGalleryItem": {
      "type": "object",
      "properties": {
        "thumbImage": {
          "type": "string"
        },
        "largeImage": {
          "type": "string"
        }
      },
      "title": "Generic Gallery Item Object"
    },
    "typesOrderBy": {
      "type": "string",
      "enum": [
        "Ascending",
        "Descending"
      ],
      "default": "Ascending"
    },
    "typesPageInfo": {
      "type": "object",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "HasNext is used to indicate whether more edges exist following the set\ndefined by the clients arguments. If the client is paginating with\nfirst/after, then the server must return true if further edges exist,\notherwise false. If the client is paginating with last/before, then the\nclient may return true if edges further from before exist, if it can do so\nefficiently, otherwise may return false."
        },
        "hasPrevious": {
          "type": "boolean",
          "description": "HasPrevious is used to indicate whether more edges exist prior to the set\ndefined by the clients arguments.\nIf the client is paginating with last/before, then the server must return\ntrue if prior edges exist, otherwise false. If the client is paginating\nwith first/after, then the client may return true if edges prior to after\nexist, if it can do so efficiently, otherwise may return false."
        },
        "startCursor": {
          "type": "string"
        },
        "endCursor": {
          "type": "string"
        }
      }
    },
    "typesProtobuf": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string",
          "title": "TypeUrl specifies the path of the protocol buffer message"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Data is valid serialized protocol buffer message"
        }
      },
      "title": "Protobuf represesnts any serialized protocol buffer message"
    },
    "v1BatchGetStudentLocationLinksResponse": {
      "type": "object",
      "properties": {
        "studentLocationLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GetStudentLocationLinksResponse"
          }
        }
      }
    },
    "v1BatchGetStudentRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "viewMask": {
          "type": "string"
        }
      }
    },
    "v1BatchGetStudentResponse": {
      "type": "object",
      "properties": {
        "student": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Student"
          }
        }
      }
    },
    "v1CreateStudentRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "student": {
          "$ref": "#/definitions/v1Student"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountId": {
          "type": "string"
        },
        "doNotCreateDefaultBookingRestrictions": {
          "type": "boolean",
          "title": "true - if we're not explicitly creating restrictions"
        }
      }
    },
    "v1CustomerListSortBy": {
      "type": "string",
      "enum": [
        "CreatedOn",
        "LastName",
        "FirstName",
        "Email"
      ],
      "default": "CreatedOn"
    },
    "v1DeleteAllStudentsOfGuardiansResponse": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1GetStudentLocationLinksResponse": {
      "type": "object",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1IndividualSearchFilter": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "registeredAfter": {
          "type": "string",
          "format": "date-time",
          "title": "RegisteredAfter will check CreatedOn > input"
        },
        "registeredBefore": {
          "type": "string",
          "format": "date-time",
          "title": "RegisteredBefore will check CreatedOn < input"
        }
      }
    },
    "v1ListParentsUsingStudentsResponse": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SerializedParentNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo"
        }
      }
    },
    "v1ListStudentResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo"
        }
      }
    },
    "v1ListStudentsByGuardiansResponse": {
      "type": "object",
      "properties": {
        "students": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Student"
          }
        }
      }
    },
    "v1MergingStatus": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "APPOINTY_ACCOUNT",
        "RADIUS_ACCOUNT",
        "MERGED_ACCOUNT"
      ],
      "default": "UNDEFINED"
    },
    "v1SerializedParentNode": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/typesProtobuf",
          "title": "Customer node will be added in connection"
        }
      }
    },
    "v1Student": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "telephones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "grade": {
          "type": "string"
        },
        "profileImage": {
          "$ref": "#/definitions/typesGalleryItem",
          "title": "Url of the profile Image"
        },
        "userId": {
          "type": "string"
        },
        "primaryGuardianId": {
          "type": "string",
          "title": "Guardians are the links of student => Customer ids (Guardian is an alias to Customer)"
        },
        "secondaryGuardianId": {
          "type": "string",
          "title": "optional"
        },
        "createdBy": {
          "type": "string",
          "title": "meta infos"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "activeMembership": {
          "type": "boolean"
        },
        "customStudentId": {
          "type": "string"
        },
        "virtualCenterId": {
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "this is sso_id of guardian",
          "title": "Radius custom account details"
        },
        "physicalCenterId": {
          "type": "string"
        },
        "mergingStatus": {
          "$ref": "#/definitions/v1MergingStatus"
        }
      }
    },
    "v1StudentLocationLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "studentId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        }
      }
    },
    "v1StudentLocationLinksResponse": {
      "type": "object",
      "properties": {
        "newLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1StudentLocationLink"
          }
        },
        "names": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1StudentNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1Student"
        }
      }
    }
  }
}
