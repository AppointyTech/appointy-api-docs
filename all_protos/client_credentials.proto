syntax = "proto3";

import "validate/chaku.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/protobuf/field_mask.proto";
import "annotations/annotations.proto";
import "pehredaar/pehredaar.proto";
import "eventspush/push.proto";
import "schema/schema.proto";

package saastack.client_credential.v1;

option go_package = "./pb";

service ClientCredentials {

    rpc GetClientCredential(GetClientCredentialRequest) returns (ClientCredential) {
    };

    rpc GetClientCredentialByClientId(GetClientCredentialByClientIdRequest) returns (ClientCredential) {
    };

    rpc ListClientCredential(ListClientCredentialRequest) returns (ListClientCredentialResponse) {
    };

    rpc CreateClientCredential (CreateClientCredentialRequest) returns (ClientCredential) {
    };

    rpc UpdateClientCredential (UpdateClientCredentialRequest) returns (ClientCredential) {
    };

    // Request to delete client Credential
    // client Credential will only be soft deleted
    rpc DeleteClientCredential (DeleteClientCredentialRequest) returns (google.protobuf.Empty) {
    };
}

message ClientCredential {
    option (chaku.root) = true;
    option (chaku.prefix) = 'cli';
    
    // Id of client Credential
    string id = 1;
    // Name of the client Credential
    string client_name = 2 [(validate.rules).string = {min_len : 1 max_len : 50}];

    // ID of the client Credential
    string client_id = 3 [(validate.rules).string = {min_len : 1 max_len : 50}];

    bool skip_consent = 4;
}

message GetClientCredentialRequest {
    // Id of the client Credential
    string id = 1 [(validate.rules).string.min_len = 1];
    // ViewMask contains the list of field from client Credential object that has to be returned.
    // If a FieldMask object is not present then return all the field from the client Credential object.
    google.protobuf.FieldMask view_mask = 2 [(validate.rules).message.required = true];
}

message GetClientCredentialByClientIdRequest {
    // Id of the client Credential
    string client_id = 1 [(validate.rules).string.min_len = 1];
    // ViewMask contains the list of field from client Credential object that has to be returned.
    // If a FieldMask object is not present then return all the field from the client Credential object.
    google.protobuf.FieldMask view_mask = 2 [(validate.rules).message.required = true];
}
// ListClientCredentialRequest: Request object for ListClientCredential rpc call
message ListClientCredentialRequest {
    google.protobuf.FieldMask view_mask = 2 [(validate.rules).message.required = true];
}

// ListClientCredentialResponse: Response object for ListClientCredential rpc
// call
message ListClientCredentialResponse {
    repeated ClientCredential client_credential = 1;
}

// CreateClientCredentialRequest: Request object for CreateClientCredential rpc
// call
message CreateClientCredentialRequest {
    // ClientCredential to be added. (required)
    ClientCredential client_credential = 2 [(validate.rules).message.required = true];
}

message BatchCreateClientCredentialRequest {
    // Parent contains the hierarchical information of the given client Credential
    // like business/group.
    string parent = 1 [(validate.rules).string.min_len = 1];
    // ClientCredentials to be added. (required)
    repeated ClientCredential client_credentials = 2 [(validate.rules).repeated.items.message.required = true];
}

message BatchCreateClientCredentialResponse {
    // ClientCredentials added
    repeated ClientCredential client_credentials = 1;
}

// Request to update client Credential
message UpdateClientCredentialRequest {
    // ClientCredential contains ClientCredentials object
    ClientCredential client_credential = 1 [(validate.rules).message.required = true];
    // UpdateMask controls which fields of the given client Credential object that can be updated.
    google.protobuf.FieldMask update_mask = 2;
}

// Request to delete client Credential
message DeleteClientCredentialRequest {
    // Unique Id of a client Credential
    string id = 1 [(validate.rules).string.min_len = 1];
}

message BatchGetClientCredentialRequest {
    // List of unique ids of client Credentials
    repeated string ids = 1 [(validate.rules).repeated.min_items = 1];
    // View Mask defines the object properties which needs to be returned as output.
    // If passed empty than all properties are returned
    google.protobuf.FieldMask view_mask = 2 [(validate.rules).message.required = true];
}

message BatchGetClientCredentialResponse {
    // Batch of client Credentials which are requested
    repeated ClientCredential client_credential = 1;
}