{
  "swagger": "2.0",
  "info": {
    "title": "webhook-events/pb/webhook_event.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "WebhookEvents"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/webhook-events": {
      "get": {
        "summary": "ListWebhookEvent lists all the WebhookEvent(s)",
        "operationId": "WebhookEvents_ListWebhookEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWebhookEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "WebhookEvents"
        ]
      },
      "post": {
        "summary": "CreateWebhookEvent creates new webhook event.",
        "operationId": "WebhookEvents_CreateWebhookEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WebhookEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateWebhookEventRequest"
            }
          }
        ],
        "tags": [
          "WebhookEvents"
        ]
      }
    },
    "/v1/webhook-events/{eventName}": {
      "get": {
        "operationId": "WebhookEvents_GetWebhookEventByEventName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WebhookEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "eventName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WebhookEvents"
        ]
      }
    },
    "/v1/webhook-events/{id}": {
      "get": {
        "summary": "GetWebhookEvent returns the webhook event by its unique id.",
        "operationId": "WebhookEvents_GetWebhookEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WebhookEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WebhookEvents"
        ]
      },
      "delete": {
        "summary": "DeleteWebhookEvent will delete the webhook event from the system by Id.\nThis will be a soft delete from the system",
        "operationId": "WebhookEvents_DeleteWebhookEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WebhookEvents"
        ]
      }
    },
    "/v1/webhook-events/{webhookEvent.id}": {
      "put": {
        "summary": "UpdateWebhookEvent will update the webhook event identified by its webhook event id.\nUpdate WebhookEvent uses Field Mask to update specific properties of webhook event object",
        "operationId": "WebhookEvents_UpdateWebhookEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WebhookEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "webhookEvent.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookEventsUpdateWebhookEventBody"
            }
          }
        ],
        "tags": [
          "WebhookEvents"
        ]
      }
    },
    "/v1/webhook-events:batchGet": {
      "get": {
        "summary": "Gets all the WebhookEvent(s) by their ids",
        "operationId": "WebhookEvents_BatchGetWebhookEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetWebhookEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WebhookEvents"
        ]
      }
    }
  },
  "definitions": {
    "WebhookEventsUpdateWebhookEventBody": {
      "type": "object",
      "properties": {
        "webhookEvent": {
          "type": "object",
          "properties": {
            "eventName": {
              "type": "string"
            },
            "appId": {
              "type": "string"
            },
            "appName": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BatchGetWebhookEventResponse": {
      "type": "object",
      "properties": {
        "webhookEvent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WebhookEvent"
          }
        }
      }
    },
    "v1CreateWebhookEventRequest": {
      "type": "object",
      "properties": {
        "webhookEvent": {
          "$ref": "#/definitions/v1WebhookEvent"
        }
      }
    },
    "v1ListWebhookEventResponse": {
      "type": "object",
      "properties": {
        "webhookEvent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WebhookEvent"
          }
        }
      }
    },
    "v1WebhookEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    }
  }
}
