{
  "swagger": "2.0",
  "info": {
    "title": "appointment/pb/appointment.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Appointments"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/appointment": {
      "post": {
        "summary": "Client request to add a appointment\nAccepts CreateAppointmentRequest which contains parent information and\nappointment and returns newly added Appointment if all the\nvalidations are passed. Refer to CreateAppointmentRequest \u0026\nAppointment message to know what validations are applied",
        "operationId": "Appointments_CreateAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Appointment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAppointmentRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/add/consumers/recurring/{recurringId}": {
      "patch": {
        "operationId": "Appointments_AddConsumersToRecurringAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddConsumersToRecurringAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "recurringId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsAddConsumersToRecurringAppointmentBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/add/consumers/{appId}": {
      "patch": {
        "operationId": "Appointments_AddConsumers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsAddConsumersBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/appointmentsOfAnOrder/{orderId}": {
      "patch": {
        "operationId": "Appointments_ListAppointmentsOfOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppointmentsOfOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsListAppointmentsOfOrderBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/batch/cancel": {
      "patch": {
        "operationId": "Appointments_BatchCancelAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCancelAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchCancelAppointmentsRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/batch/cancel/consumer/{appointmentId}": {
      "patch": {
        "operationId": "Appointments_BatchCancelConsumers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCancelConsumersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsBatchCancelConsumersBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/batch/cancellation/policy": {
      "get": {
        "operationId": "Appointments_AppointmentsCancellationPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentsCancellationPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appointmentIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/batch/delete": {
      "delete": {
        "operationId": "Appointments_BatchDeleteAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/batch/update": {
      "put": {
        "operationId": "Appointments_BatchUpdateAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchUpdateAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchUpdateAppointmentsRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/calendar": {
      "get": {
        "summary": "ListAppointmentsForCalendar returns all the appointments on the basis of specified filters",
        "operationId": "Appointments_ListAppointmentsForCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppointmentsForCalendarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "either duration or end time must be set and if both are passed duration is used",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parents",
            "description": "either one parent or one employee id is required",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "serviceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APPOINTMENT_STATUS_UNSPECIFIED",
              "APPOINTMENT_CONFIRMED",
              "APPOINTMENT_CANCELLED",
              "APPOINTMENT_WAITING_FOR_APPROVAL",
              "APPOINTMENT_BOOKING_IN_PROCESS",
              "APPOINTMENT_FAILED"
            ],
            "default": "APPOINTMENT_STATUS_UNSPECIFIED"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perDayLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderNotImportant",
            "description": "OrderNotImportant: Order of appointments in the list is not important.\nIf is false, the list will be in ascending order by appointment start time.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showOnlyRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showOnlyEndRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fetchOtherParentBlockingAppointments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "buyerOrganizationIdFilter",
            "description": "this filter is used by VTNZ",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/calendar-events": {
      "get": {
        "summary": "ListAppointmentEventsForCalendar returns all the appointments on the basis of specified filters",
        "operationId": "Appointments_ListAppointmentEventsForCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppointmentEventsForCalendarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "either duration or end time must be set and if both are passed duration is used",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parents",
            "description": "either one parent or one employee id is required",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "serviceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APPOINTMENT_STATUS_UNSPECIFIED",
              "APPOINTMENT_CONFIRMED",
              "APPOINTMENT_CANCELLED",
              "APPOINTMENT_WAITING_FOR_APPROVAL",
              "APPOINTMENT_BOOKING_IN_PROCESS",
              "APPOINTMENT_FAILED"
            ],
            "default": "APPOINTMENT_STATUS_UNSPECIFIED"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perDayLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderNotImportant",
            "description": "OrderNotImportant: Order of appointments in the list is not important.\nIf is false, the list will be in ascending order by appointment start time.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showOnlyRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showOnlyEndRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fetchOtherParentBlockingAppointments",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "buyerOrganizationIdFilter",
            "description": "this filter is used by VTNZ",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/calendar/search": {
      "get": {
        "summary": "AppointmentSearchForCalendar returns all the appointments on the basis of specified filters",
        "operationId": "Appointments_AppointmentSearchForCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentSearchForCalendarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "full location id should be passed here",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeSlot.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeSlot.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "serviceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerName",
            "description": "student name should be passed in this field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerName",
            "description": "Guardian name should be passed in this field",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "free text search on above list of fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerEmail",
            "description": "student email should be passed in this field",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/cancel/ported/{dataCodeId}": {
      "patch": {
        "operationId": "Appointments_CancelPortedAppointmentByDataCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCodeId",
            "description": "Data code contains appointment-id and consumer-id to cancel appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsCancelPortedAppointmentByDataCodeBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/cancel/{dataCodeId}": {
      "patch": {
        "operationId": "Appointments_CancelAppointmentByDataCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CancelAppointmentByDataCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCodeId",
            "description": "Data code contains appointment-id and consumer-id to cancel appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsCancelAppointmentByDataCodeBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/cancelAllFutureAppointments/{consumerId}": {
      "patch": {
        "operationId": "Appointments_CancelAllFutureAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CancelAllFutureAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "consumerId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsCancelAllFutureAppointmentsBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/cancelAppointment/{id}": {
      "patch": {
        "operationId": "Appointments_CancelAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CancelAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsCancelAppointmentBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/cancellation/policy": {
      "get": {
        "operationId": "Appointments_AppointmentCancellationPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentCancellationPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appointmentId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "quantity",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/changeConsumerStatus/{appId}": {
      "patch": {
        "operationId": "Appointments_ChangeConsumerStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appId",
            "description": "Unique Id of a appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsChangeConsumerStatusBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/changeStatus/{dataCode}": {
      "patch": {
        "operationId": "Appointments_ChangeAppointmentStatusByDataCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangeAppointmentStatusByDataCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCode",
            "description": "Data code contains appointment-id and consumer-id to cancel appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsChangeAppointmentStatusByDataCodeBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/changeStatus/{id}": {
      "patch": {
        "operationId": "Appointments_ChangeAppointmentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangeAppointmentStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique Id of a appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsChangeAppointmentStatusBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/check-availability": {
      "post": {
        "operationId": "Appointments_BatchCheckAvailability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchCheckAvailabilityRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/consumer-rsvp": {
      "patch": {
        "summary": "The admin will not be able to change the RSVP status of the consumer\nhttps://appointy.atlassian.net/browse/AXN-1314?focusedCommentId=17114",
        "operationId": "Appointments_UpdateConsumerRSVP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateConsumerRSVPRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/consumer/data_code/{dataCode}": {
      "patch": {
        "operationId": "Appointments_UpdateConsumerRSVPByDataCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateConsumerRSVPByDataCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCode",
            "description": "Data code contains appointment-id and consumer-id to update appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdateConsumerRSVPByDataCodeBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/consumers/quantity/{appointmentId}": {
      "put": {
        "operationId": "Appointments_UpdateConsumersQuantity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdateConsumersQuantityBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/count": {
      "get": {
        "operationId": "Appointments_GetAppointmentCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAppointmentCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "either duration or end time must be set and if both are passed duration is used",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parents",
            "description": "either one parent or one employee id is required",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "serviceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APPOINTMENT_STATUS_UNSPECIFIED",
              "APPOINTMENT_CONFIRMED",
              "APPOINTMENT_CANCELLED",
              "APPOINTMENT_WAITING_FOR_APPROVAL",
              "APPOINTMENT_BOOKING_IN_PROCESS",
              "APPOINTMENT_FAILED"
            ],
            "default": "APPOINTMENT_STATUS_UNSPECIFIED"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showOnlyRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showOnlyEndRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/count/consumer": {
      "get": {
        "operationId": "Appointments_ConsumerAppointmentCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ConsumerAppointmentCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilters.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/count/consumer:batch": {
      "get": {
        "operationId": "Appointments_BatchConsumerAppointmentCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchConsumerAppointmentCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilters.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/custom-statuses": {
      "get": {
        "operationId": "Appointments_ListAppointmentCustomStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppointmentCustomStatusesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fetchBelowLevel",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Appointments"
        ]
      },
      "post": {
        "operationId": "Appointments_CreateAppointmentCustomStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentCustomStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAppointmentCustomStatusRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/custom-statuses/{customStatus.id}": {
      "put": {
        "operationId": "Appointments_UpdateAppointmentCustomStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentCustomStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "customStatus.id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdateAppointmentCustomStatusBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/data_code/ported/{dataCodeId}": {
      "put": {
        "operationId": "Appointments_UpdatePortedAppointmentByDataCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Appointment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCodeId",
            "description": "Data code contains appointment-id and consumer-id to update appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdatePortedAppointmentByDataCodeBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/data_code/{dataCodeId}": {
      "put": {
        "operationId": "Appointments_UpdateAppointmentByDataCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAppointmentByDataCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dataCodeId",
            "description": "Data code contains appointment-id and consumer-id to update appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdateAppointmentByDataCodeBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/delete/{id}": {
      "delete": {
        "summary": "DeleteAppointment deletes the appointment from the system using its unique ID.",
        "operationId": "Appointments_DeleteAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeId",
            "description": "for sole purpose of rights check",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.id",
            "description": "Id of the appointment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.timeSlot.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.timeSlot.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.service.id",
            "description": "id can be empty as it can be dynamically booked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.service.title",
            "description": "Title of the service in various locales.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.service.capacity",
            "description": "Capacity",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "originalAppointment.service.preBufferTime",
            "description": "Pre appointment buffer time in seconds",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "originalAppointment.service.postBufferTime",
            "description": "Post appointment buffer time in seconds",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "originalAppointment.service.isDynamic",
            "description": "in case of  link sharing  , we have to create dynamic service",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.service.lastId",
            "description": "in case of update: the last service id will contain old service id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.service.templateId",
            "description": "service template id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.service.dynamicLinkId",
            "description": "dynamic link id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.channel.id",
            "description": "Id of the channel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.channel.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.id",
            "description": "Id of the employee. (required)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.firstName",
            "description": "FirstName of the employee.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.lastName",
            "description": "LastName of the employee.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.email",
            "description": "Email of the employee.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.profileId",
            "description": "profile id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.lastId",
            "description": "in case of update: the last employee id will contain old employee id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.name",
            "description": "only for readonly purpose: name = first_name + \" \" + last_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.employee.smsReminderSent",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.employee.emailReminderSent",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.employee.smsRemindOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.employee.emailRemindOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.employee.reviewMailStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DoNotSendMail",
              "ReviewMailScheduled",
              "ReviewMailSent"
            ],
            "default": "DoNotSendMail"
          },
          {
            "name": "originalAppointment.quantity",
            "description": "total no. of consumers in the appointment\n\ntotal consumers",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "originalAppointment.bookingId",
            "description": "BookingId is a unique grouping id for appointments booked together. For example,\nrecurring appointments will share the same booking id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.recurringId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APPOINTMENT_STATUS_UNSPECIFIED",
              "APPOINTMENT_CONFIRMED",
              "APPOINTMENT_CANCELLED",
              "APPOINTMENT_WAITING_FOR_APPROVAL",
              "APPOINTMENT_BOOKING_IN_PROCESS",
              "APPOINTMENT_FAILED"
            ],
            "default": "APPOINTMENT_STATUS_UNSPECIFIED"
          },
          {
            "name": "originalAppointment.paymentStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APPOINTMENT_PAYMENT_UNKNOWN",
              "APPOINTMENT_PAYMENT_FAILED",
              "APPOINTMENT_PAYMENT_PAID",
              "APPOINTMENT_PAYMENT_UNPAID",
              "APPOINTMENT_PAYMENT_REFUND",
              "APPOINTMENT_PAYMENT_PARTIAL"
            ],
            "default": "APPOINTMENT_PAYMENT_UNKNOWN"
          },
          {
            "name": "originalAppointment.createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.createdOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.updatedBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.updatedOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.source",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.rescheduleAllowedTill",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.cancellationAllowedTill",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.totalPrice.amount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "originalAppointment.totalPrice.currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.totalPrice.amountInFloat",
            "description": "@deprecated - DO NOT USE",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "originalAppointment.discountCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.totalDiscountedPrice.amount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "originalAppointment.totalDiscountedPrice.currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.totalDiscountedPrice.amountInFloat",
            "description": "@deprecated - DO NOT USE",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "originalAppointment.meetingData.integrationType",
            "description": " - GOOGLE_DRIVE: not for appointy\n - ZAPIER: for appointy\n - OPEN_HOUR_GOOGLE_CALENDAR: Open Hour for Google Calendar",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN_TYPE",
              "GOOGLECALENDAR",
              "OUTLOOK",
              "QUICKBOOKS",
              "STRIPE",
              "GOOGLE_BUSINESS_REVIEW",
              "YELP",
              "OTHERS",
              "FIREBASE",
              "WEBEX",
              "ZOOM",
              "GOOGLE_TAG_MANAGER",
              "GOOGLE_ANALYTICS",
              "FACEBOOK_PIXEL",
              "MIXPANEL",
              "SQUARE",
              "BRAINTREE",
              "PAYPAL",
              "ICLOUD",
              "INTERCOM",
              "GOOGLE_DRIVE",
              "DROPBOX",
              "GOOGLE_CONTACT",
              "ZAPIER",
              "MICROSOFT_TEAMS",
              "MICROSOFT_TEAMS_CONNECTOR",
              "CUSTOM_WEBHOOK",
              "SERVICE_NOW",
              "RAZORPAY",
              "SALESFORCE",
              "FRESH_SALES",
              "OPEN_HOUR_GOOGLE_CALENDAR",
              "BIG_COMMERCE",
              "XERO",
              "MAILCHIMP",
              "ZENDESK",
              "HUBSPOT"
            ],
            "default": "UNKNOWN_TYPE"
          },
          {
            "name": "originalAppointment.meetingData.externalMeetingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.meetingData.pin",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.meetingData.metadata",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.meetingData.joinUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.meetingData.iconUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.metadata",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.medium",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.campaign",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.isBookedByAdmin",
            "description": "is_booked_by_admin true if booked by admin",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.reason",
            "description": "reason for update or cancel",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.submissionData",
            "description": "form submission data, this is read only value, and is not stored in db",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "originalAppointment.isIntakeFormSubmitted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.hasNotes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.everRescheduled",
            "description": "true on update in time",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.lastRescheduledBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.lastRescheduledOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.isLastRescheduledByAdmin",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.lastStatusUpdatedBy",
            "description": "Last Status Change fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalAppointment.lastStatusUpdatedOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalAppointment.isLastStatusUpdatedByAdmin",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.recurrenceSet",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "originalAppointment.inviteeCanModify",
            "description": "InviteeCanModify represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can modify the booking or not.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.inviteeCanManageOtherInvitees",
            "description": "InviteeCanManageOtherInvitees represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can invite or remove some other invitees.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.viewGuestList",
            "description": "ViewGuestList represent Meeting app permission for all users to view other users involved in appointment.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "originalAppointment.lastRecurringAppointment",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/deserialize": {
      "post": {
        "operationId": "Appointments_DeserializeAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SerializeAppointmentRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SerializeAppointmentResponse"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/group-check-availability": {
      "post": {
        "summary": "GroupBatchCheckAvailability check the availability for the group of appointments",
        "operationId": "Appointments_GroupBatchCheckAvailability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GroupBatchCheckAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GroupBatchCheckAvailabilityRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/meeting/invite/add/remove": {
      "post": {
        "summary": "AddOrRemoveMeetingInvitees will add or remove new invitee employees or customers in the meeting. And only host\nor according to the host set permissions or Meeting Manager can add new invitees.",
        "operationId": "Appointments_AddOrRemoveMeetingInvitees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddOrRemoveMeetingInviteesRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/meeting/permissions": {
      "patch": {
        "summary": "UpdateMeetingPermissions will update the additional meeting permissions to modify or allow invite of the booking\nAnd only the host employee of the booking can update this permissions or anyone with MeetingsManager module role\nhttps://appointy.atlassian.net/browse/AXN-1320",
        "operationId": "Appointments_UpdateMeetingPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMeetingPermissionsRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/meeting/search": {
      "get": {
        "summary": "SearchMeetingInvitees will search employees and customers within the company.\nhttps://appointy.atlassian.net/browse/AXN-1317",
        "operationId": "Appointments_SearchMeetingInvitees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchMeetingInviteesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/month/view": {
      "get": {
        "operationId": "Appointments_AppointmentsMonthView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentsMonthViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parents",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "serviceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceTypeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "view",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "StaffView",
              "ServiceView",
              "ResourceView",
              "LocationView"
            ],
            "default": "StaffView"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APPOINTMENT_STATUS_UNSPECIFIED",
              "APPOINTMENT_CONFIRMED",
              "APPOINTMENT_CANCELLED",
              "APPOINTMENT_WAITING_FOR_APPROVAL",
              "APPOINTMENT_BOOKING_IN_PROCESS",
              "APPOINTMENT_FAILED"
            ],
            "default": "APPOINTMENT_STATUS_UNSPECIFIED"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "showOnlyRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showOnlyEndRecurringBooking",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/notes": {
      "get": {
        "operationId": "Appointments_ListAppointmentNotes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppointmentNotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appointmentId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "getPrivate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "allStaff",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "statusType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE",
              "ANY"
            ],
            "default": "PUBLIC"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      },
      "post": {
        "operationId": "Appointments_CreateAppointmentNote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentNote"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAppointmentNoteRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      },
      "put": {
        "operationId": "Appointments_UpdateAppointmentNote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppointmentNote"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAppointmentNoteRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/ported/generate/code": {
      "post": {
        "operationId": "Appointments_GenerateDataCodeForPortedAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GenerateDataCodeForPortedAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateDataCodeForPortedAppointmentRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/ported/{code}": {
      "get": {
        "operationId": "Appointments_GetPortedAppointmentsByCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPortedAppointmentsByCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/recurring/cancel/{parent}": {
      "patch": {
        "operationId": "Appointments_CancelRecurringAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CancelRecurringAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsCancelRecurringAppointmentsBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/recurring/changeStatus/{id}": {
      "patch": {
        "operationId": "Appointments_ChangeRecurringAppointmentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangeRecurringAppointmentStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Unique Id of a appointment",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsChangeRecurringAppointmentStatusBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/recurring/delete/{parent}": {
      "patch": {
        "operationId": "Appointments_DeleteRecurringAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRecurringAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsDeleteRecurringAppointmentsBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/recurring/{parent}": {
      "put": {
        "operationId": "Appointments_UpdateRecurringAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRecurringAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdateRecurringAppointmentsBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/related": {
      "post": {
        "operationId": "Appointments_DeleteRelatedAppointments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRelatedAppointmentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteRelatedAppointmentsRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/report/details": {
      "get": {
        "operationId": "Appointments_GetAppointmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAppointmentReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "appointmentDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "appointmentDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "consumerName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceTitle",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price.amount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "price.currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price.amountInFloat",
            "description": "@deprecated - DO NOT USE",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "campaign",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerTag",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exportTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerName",
            "description": "guardian_name filters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerEmail",
            "description": "guardian_email filters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportedFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accessContact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "paymentMethod",
            "description": " - CASH: Offline\n - CREDIT_CARD: Offline\n - ECHECK: Offline\n - DEBIT_CARD: Offline\n - CREDIT_CARD_AND_CASH: Offline\n - GIFT_CERTIFICATE_OFFLINE: Offline\n - GIFT_CERTIFICATE_AND_CASH: Offline\n - INSURANCE: Offline\n - CHEQUE: Offline",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED_PAYMENT_METHOD",
              "CASH",
              "STRIPE_CARD",
              "SQUARE_CARD",
              "PACKAGE",
              "GIFT_CERTIFICATE",
              "MEMBERSHIP",
              "DISCOUNT_CODE",
              "CREDIT_CARD",
              "ECHECK",
              "DEBIT_CARD",
              "CREDIT_CARD_AND_CASH",
              "GIFT_CERTIFICATE_OFFLINE",
              "GIFT_CERTIFICATE_AND_CASH",
              "INSURANCE",
              "CHEQUE",
              "RADIUS",
              "RAZORPAY_ACCOUNT",
              "PAYPAL_ACCOUNT"
            ],
            "default": "UNSPECIFIED_PAYMENT_METHOD"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AppointmentReportSortBy_UNDEFINED",
              "AppointmentReportSortBy_StartTime",
              "AppointmentReportSortBy_EndTime",
              "AppointmentReportSortBy_BookingTime",
              "AppointmentReportSortBy_LastRescheduledTime",
              "AppointmentReportSortBy_ServiceTitle",
              "AppointmentReportSortBy_EmployeeName",
              "AppointmentReportSortBy_EmployeeEmail",
              "AppointmentReportSortBy_CustomerName",
              "AppointmentReportSortBy_CustomerEmail"
            ],
            "default": "AppointmentReportSortBy_UNDEFINED"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "default": "Ascending"
          },
          {
            "name": "packageCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayCustomerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.serviceIds",
            "description": "https://appointy.atlassian.net/browse/AXN-3779",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.bookedByUserId",
            "description": "https://appointy.atlassian.net/browse/AXN-3786",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.discountCoupon",
            "description": "https://appointy.atlassian.net/browse/AXN-3777",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalReportsFilters.vehicleRegistrationNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalReportsFilters.buyerOrganizationName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalReportsFilters.buyerOrganizationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/report/grouped": {
      "get": {
        "operationId": "Appointments_GetGroupedAppointmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupedAppointmentReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appointmentDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "appointmentDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "groupByEmployee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "groupByService",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "groupByResource",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "groupByResourceType",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "groupByMonth",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exportTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportedFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "consumerQuery",
            "description": "https://appointy.atlassian.net/browse/AXN-3784\n\nSearch query for consumers' name/email both/any",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.serviceIds",
            "description": "https://appointy.atlassian.net/browse/AXN-3779",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.bookedByUserId",
            "description": "https://appointy.atlassian.net/browse/AXN-3786",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.discountCoupon",
            "description": "https://appointy.atlassian.net/browse/AXN-3777",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/report/grouped/{parent}": {
      "get": {
        "operationId": "Appointments_GetCompanyGroupedAppointmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCompanyGroupedAppointmentReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appointmentDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "appointmentDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "groupByMonth",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exportTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportedFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "consumerQuery",
            "description": "https://appointy.atlassian.net/browse/AXN-3784\n\nSearch query for consumers' name/email both/any",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.serviceIds",
            "description": "https://appointy.atlassian.net/browse/AXN-3779",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.bookedByUserId",
            "description": "https://appointy.atlassian.net/browse/AXN-3786",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.discountCoupon",
            "description": "https://appointy.atlassian.net/browse/AXN-3777",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/reports/details/{parent}": {
      "get": {
        "operationId": "Appointments_GetCompanyAppointmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCompanyAppointmentReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "appointmentDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "appointmentDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "bookingDate.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "consumerName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceTitle",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price.amount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "price.currency",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price.amountInFloat",
            "description": "@deprecated - DO NOT USE",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "campaign",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerTag",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "statusFilter.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statusFilter.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exportTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerName",
            "description": "guardian_name filters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerEmail",
            "description": "guardian_email filters",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportedFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accessContact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "paymentMethod",
            "description": " - CASH: Offline\n - CREDIT_CARD: Offline\n - ECHECK: Offline\n - DEBIT_CARD: Offline\n - CREDIT_CARD_AND_CASH: Offline\n - GIFT_CERTIFICATE_OFFLINE: Offline\n - GIFT_CERTIFICATE_AND_CASH: Offline\n - INSURANCE: Offline\n - CHEQUE: Offline",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNSPECIFIED_PAYMENT_METHOD",
              "CASH",
              "STRIPE_CARD",
              "SQUARE_CARD",
              "PACKAGE",
              "GIFT_CERTIFICATE",
              "MEMBERSHIP",
              "DISCOUNT_CODE",
              "CREDIT_CARD",
              "ECHECK",
              "DEBIT_CARD",
              "CREDIT_CARD_AND_CASH",
              "GIFT_CERTIFICATE_OFFLINE",
              "GIFT_CERTIFICATE_AND_CASH",
              "INSURANCE",
              "CHEQUE",
              "RADIUS",
              "RAZORPAY_ACCOUNT",
              "PAYPAL_ACCOUNT"
            ],
            "default": "UNSPECIFIED_PAYMENT_METHOD"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "AppointmentReportSortBy_UNDEFINED",
              "AppointmentReportSortBy_StartTime",
              "AppointmentReportSortBy_EndTime",
              "AppointmentReportSortBy_BookingTime",
              "AppointmentReportSortBy_LastRescheduledTime",
              "AppointmentReportSortBy_ServiceTitle",
              "AppointmentReportSortBy_EmployeeName",
              "AppointmentReportSortBy_EmployeeEmail",
              "AppointmentReportSortBy_CustomerName",
              "AppointmentReportSortBy_CustomerEmail"
            ],
            "default": "AppointmentReportSortBy_UNDEFINED"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "default": "Ascending"
          },
          {
            "name": "packageCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayCustomerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.serviceIds",
            "description": "https://appointy.atlassian.net/browse/AXN-3779",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.employeeIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dropDownFilters.bookedByUserId",
            "description": "https://appointy.atlassian.net/browse/AXN-3786",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dropDownFilters.discountCoupon",
            "description": "https://appointy.atlassian.net/browse/AXN-3777",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalReportsFilters.vehicleRegistrationNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalReportsFilters.buyerOrganizationName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalReportsFilters.buyerOrganizationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/reports/group/{parent}": {
      "get": {
        "operationId": "Appointments_GetGroupLevelAppointmentReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGroupLevelAppointmentReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dateFilter.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateFilter.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "exportTo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportedFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/serialize": {
      "post": {
        "operationId": "Appointments_SerializeAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SerializeAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SerializeAppointmentRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/{appointment.id}": {
      "put": {
        "summary": "Client request to update a appointment\nAccepts UpdateAppointmentRequest which is a Appointment and returns\nupdated appointment if all the validations are passed\nUpdate will only update update only fields like:\n time_slot, resources, service, channel, employee",
        "operationId": "Appointments_UpdateAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Appointment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appointment.id",
            "description": "Id of the appointment.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentsUpdateAppointmentBody"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/{code}": {
      "get": {
        "operationId": "Appointments_GetAppointmentByCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Appointment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment/{id}": {
      "get": {
        "summary": "GetAppointment returns a appointment based on its unique ID.\nID should be one that was retrieved by one of the list methods.",
        "operationId": "Appointments_GetAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Appointment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the appointment. (required)",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          },
          {
            "name": "viewMask",
            "description": "ViewMask is used to partially return data. For example,\n[ \"id\", \"service.title\" ] will return id and service title ignoring all other fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "description": "customer id is for the sole purpose of rights check",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment:batchCreate": {
      "post": {
        "operationId": "Appointments_BatchCreateAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCreateAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchCreateAppointmentRequest"
            }
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointment:list": {
      "get": {
        "summary": "ListAppointments returns all the appointments of the specified\nparent or specified employee or consumer",
        "operationId": "Appointments_ListAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "parent is fully qualified string containing hierarchical information",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "first",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeslot.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeslot.endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "getMarketingStatus",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "employeeId",
            "description": "EmployeeId is the id of the employee.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consumerId",
            "description": "ConsumerId is the id of the consumer.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "description": "Query can be used for search appointments using\n Employee's or Consumer's Name or Email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.statuses",
            "description": "status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_STATUS_UNSPECIFIED",
                "APPOINTMENT_CONFIRMED",
                "APPOINTMENT_CANCELLED",
                "APPOINTMENT_WAITING_FOR_APPROVAL",
                "APPOINTMENT_BOOKING_IN_PROCESS",
                "APPOINTMENT_FAILED"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status.paymentStatuses",
            "description": "payment status filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "APPOINTMENT_PAYMENT_UNKNOWN",
                "APPOINTMENT_PAYMENT_FAILED",
                "APPOINTMENT_PAYMENT_PAID",
                "APPOINTMENT_PAYMENT_UNPAID",
                "APPOINTMENT_PAYMENT_REFUND",
                "APPOINTMENT_PAYMENT_PARTIAL"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status.customStatus",
            "description": "consumer custom status",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status.customStatusNames",
            "description": "consumer custom status names (not used in reports at the moment)",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "customerId",
            "description": "customer id for rights check",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "default": "Ascending"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "StartTime",
              "CreatedOn"
            ],
            "default": "StartTime"
          },
          {
            "name": "otherFilters.locationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "otherFilters.consumerIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "otherFilters.consumerName",
            "description": "search queries",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherFilters.consumerEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherFilters.serviceTitle",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherFilters.employeeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherFilters.employeeEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "otherFilters.query",
            "description": "on all above, search queries with 'or' condition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "buyerOrganizationIdFilter",
            "description": "this filter is used by VTNZ",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    },
    "/v1/appointments": {
      "get": {
        "operationId": "Appointments_BatchGetAppointment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetAppointmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "viewMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Appointments"
        ]
      }
    }
  },
  "definitions": {
    "AppointmentsAddConsumersBody": {
      "type": "object",
      "properties": {
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Consumer"
          }
        },
        "skipValidation": {
          "type": "boolean"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "notes": {
          "type": "string",
          "title": "initial notes given"
        },
        "setNotePrivate": {
          "type": "boolean"
        },
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmissions"
          }
        }
      }
    },
    "AppointmentsAddConsumersToRecurringAppointmentBody": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        },
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Consumer"
          }
        },
        "skipValidation": {
          "type": "boolean"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "notes": {
          "type": "string"
        },
        "setNotePrivate": {
          "type": "boolean"
        },
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmissions"
          }
        }
      }
    },
    "AppointmentsBatchCancelConsumersBody": {
      "type": "object",
      "properties": {
        "consumerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "AppointmentsCancelAllFutureAppointmentsBody": {
      "type": "object",
      "properties": {
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "AppointmentsCancelAppointmentBody": {
      "type": "object",
      "properties": {
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before cancellation"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "reason": {
          "type": "string",
          "title": "reason for cancellation"
        },
        "consumerId": {
          "type": "string"
        }
      },
      "title": "Request to cancel appointment"
    },
    "AppointmentsCancelAppointmentByDataCodeBody": {
      "type": "object",
      "properties": {
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before cancellation"
        },
        "reason": {
          "type": "string",
          "title": "reason for cancellation"
        }
      }
    },
    "AppointmentsCancelPortedAppointmentByDataCodeBody": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before cancellation"
        },
        "reason": {
          "type": "string",
          "title": "reason for cancellation"
        }
      }
    },
    "AppointmentsCancelRecurringAppointmentsBody": {
      "type": "object",
      "properties": {
        "recurringType": {
          "$ref": "#/definitions/v1RecurringUpdateType"
        },
        "recurringId": {
          "type": "string",
          "title": "one of the two will be required"
        },
        "thisAppointmentId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "customerId": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        }
      }
    },
    "AppointmentsChangeAppointmentStatusBody": {
      "type": "object",
      "properties": {
        "newStatus": {
          "$ref": "#/definitions/v1AppointmentStatus"
        },
        "newCustomStatus": {
          "$ref": "#/definitions/v1CustomStatus"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before update"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "paymentStatus": {
          "$ref": "#/definitions/v1AppointmentPaymentStatus",
          "title": "for internal use only"
        },
        "reason": {
          "type": "string",
          "title": "reason for status change"
        },
        "isAdmin": {
          "type": "boolean"
        }
      },
      "title": "Request to change appointment status"
    },
    "AppointmentsChangeAppointmentStatusByDataCodeBody": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "title": "reason for cancellation"
        },
        "newStatus": {
          "$ref": "#/definitions/v1AppointmentStatus",
          "title": "NewStatus: new appointment status"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment for log service"
        }
      }
    },
    "AppointmentsChangeConsumerStatusBody": {
      "type": "object",
      "properties": {
        "cusId": {
          "type": "string"
        },
        "newConsumerStatus": {
          "$ref": "#/definitions/v1ConsumerStatus"
        },
        "newCustomStatus": {
          "$ref": "#/definitions/v1CustomStatus"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "reason": {
          "type": "string"
        }
      },
      "title": "Request to change consumer status"
    },
    "AppointmentsChangeRecurringAppointmentStatusBody": {
      "type": "object",
      "properties": {
        "newStatus": {
          "$ref": "#/definitions/v1AppointmentStatus"
        },
        "newCustomStatus": {
          "$ref": "#/definitions/v1CustomStatus"
        },
        "originalAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          },
          "title": "OriginalAppointment is the appointment before update"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "reason": {
          "type": "string",
          "title": "reason for status change"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "recurringId": {
          "type": "string",
          "title": "change recurring appointment status, all at a time"
        }
      },
      "title": "Request to change recurring-appointment status"
    },
    "AppointmentsDeleteRecurringAppointmentsBody": {
      "type": "object",
      "properties": {
        "recurringType": {
          "$ref": "#/definitions/v1RecurringUpdateType"
        },
        "recurringId": {
          "type": "string",
          "title": "one of the two will be required"
        },
        "thisAppointmentId": {
          "type": "string"
        }
      }
    },
    "AppointmentsListAppointmentsOfOrderBody": {
      "type": "object",
      "properties": {
        "recurringId": {
          "type": "string"
        },
        "appointmentId": {
          "type": "string"
        }
      }
    },
    "AppointmentsUpdateAppointmentBody": {
      "type": "object",
      "properties": {
        "appointment": {
          "type": "object",
          "properties": {
            "timeSlot": {
              "$ref": "#/definitions/typesTimeslot",
              "title": "Timeslot of the appointment in UTC. (required)"
            },
            "resources": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1Resource"
              },
              "title": "Resources booked in this appointment. (optional)"
            },
            "resourceTypes": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1ResourceType"
              },
              "title": "Resource Types booked in this appointment. (optional)"
            },
            "service": {
              "$ref": "#/definitions/v1Service",
              "title": "Service of the appointment. (required)"
            },
            "channel": {
              "$ref": "#/definitions/v1Channel",
              "title": "Channel of the appointment. (optional)"
            },
            "employee": {
              "$ref": "#/definitions/v1Employee",
              "title": "Employee of the appointment. (required but can be filled using availability only in serialize appointment case)\nIn case of Meeting, this employee is considered to be the Host of the booking"
            },
            "invitedEmployees": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1InvitedEmployee"
              },
              "title": "InvitedEmployees represents list of employees other than the host that are booked in the appointment\nThis will only be used in case of meetings"
            },
            "consumers": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1Consumer"
              },
              "title": "Consumers booked in this appointment. (optional)"
            },
            "quantity": {
              "type": "string",
              "format": "int64",
              "description": "total consumers",
              "title": "total no. of consumers in the appointment"
            },
            "bookingId": {
              "type": "string",
              "description": "BookingId is a unique grouping id for appointments booked together. For example,\nrecurring appointments will share the same booking id."
            },
            "recurringId": {
              "type": "string"
            },
            "status": {
              "$ref": "#/definitions/v1AppointmentStatus"
            },
            "paymentStatus": {
              "$ref": "#/definitions/v1AppointmentPaymentStatus"
            },
            "createdBy": {
              "type": "string"
            },
            "createdOn": {
              "type": "string",
              "format": "date-time"
            },
            "updatedBy": {
              "type": "string"
            },
            "updatedOn": {
              "type": "string",
              "format": "date-time"
            },
            "source": {
              "type": "string"
            },
            "rescheduleAllowedTill": {
              "type": "string",
              "format": "date-time"
            },
            "cancellationAllowedTill": {
              "type": "string",
              "format": "date-time"
            },
            "totalPrice": {
              "$ref": "#/definitions/typesPrice"
            },
            "discountCode": {
              "type": "string"
            },
            "totalDiscountedPrice": {
              "$ref": "#/definitions/typesPrice"
            },
            "meetingData": {
              "$ref": "#/definitions/v1MeetingData"
            },
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "medium": {
              "type": "string"
            },
            "campaign": {
              "type": "string"
            },
            "isBookedByAdmin": {
              "type": "boolean",
              "title": "is_booked_by_admin true if booked by admin"
            },
            "reason": {
              "type": "string",
              "title": "reason for update or cancel"
            },
            "submissionData": {
              "type": "string",
              "format": "byte",
              "title": "form submission data, this is read only value, and is not stored in db"
            },
            "isIntakeFormSubmitted": {
              "type": "boolean"
            },
            "hasNotes": {
              "type": "boolean"
            },
            "historicalData": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1AppointmentHistory"
              },
              "title": "Appointment historical data"
            },
            "everRescheduled": {
              "type": "boolean",
              "title": "true on update in time"
            },
            "lastRescheduledBy": {
              "type": "string"
            },
            "lastRescheduledOn": {
              "type": "string",
              "format": "date-time"
            },
            "isLastRescheduledByAdmin": {
              "type": "boolean"
            },
            "lastStatusUpdatedBy": {
              "type": "string",
              "title": "Last Status Change fields"
            },
            "lastStatusUpdatedOn": {
              "type": "string",
              "format": "date-time"
            },
            "isLastStatusUpdatedByAdmin": {
              "type": "boolean"
            },
            "recurrenceSet": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "inviteeCanModify": {
              "type": "boolean",
              "description": "InviteeCanModify represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can modify the booking or not."
            },
            "inviteeCanManageOtherInvitees": {
              "type": "boolean",
              "description": "InviteeCanManageOtherInvitees represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can invite or remove some other invitees."
            },
            "viewGuestList": {
              "type": "boolean",
              "description": "ViewGuestList represent Meeting app permission for all users to view other users involved in appointment."
            },
            "lastRecurringAppointment": {
              "type": "boolean"
            }
          },
          "title": "Appointment contains appointment object"
        },
        "updateMask": {
          "type": "string",
          "title": "update mask can only have update only fields"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before update"
        },
        "userId": {
          "type": "string",
          "title": "Note: user_id for client side only, to be send instead of parent for validations \u0026 right"
        },
        "skipValidation": {
          "type": "boolean"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "consumerId": {
          "type": "string"
        },
        "timezone": {
          "type": "string",
          "title": "update booking timezone by sending it in here (if empty no change will take place)"
        },
        "note": {
          "type": "string",
          "title": "note"
        },
        "noteAtAppointmentLevel": {
          "type": "boolean",
          "description": "note_level_apt if true then the notes to stored at appointment level."
        },
        "formFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        },
        "originalExtendedFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        }
      },
      "title": "Request to update appointment"
    },
    "AppointmentsUpdateAppointmentByDataCodeBody": {
      "type": "object",
      "properties": {
        "appointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "Appointment contains appointment object"
        },
        "updateMask": {
          "type": "string",
          "title": "update mask can only have update only fields"
        },
        "timezone": {
          "type": "string",
          "title": "update booking timezone by sending it in here (if empty no change will take place)"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before update"
        }
      }
    },
    "AppointmentsUpdateAppointmentCustomStatusBody": {
      "type": "object",
      "properties": {
        "customStatus": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "isDefault": {
              "type": "boolean"
            },
            "displayOrder": {
              "type": "string",
              "format": "int64"
            }
          }
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "AppointmentsUpdateConsumerRSVPByDataCodeBody": {
      "type": "object",
      "properties": {
        "rsvp": {
          "$ref": "#/definitions/typesRsvp"
        },
        "rsvpMessage": {
          "type": "string"
        }
      }
    },
    "AppointmentsUpdateConsumersQuantityBody": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "consumerId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        }
      }
    },
    "AppointmentsUpdatePortedAppointmentByDataCodeBody": {
      "type": "object",
      "properties": {
        "appointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "Appointment contains appointment object"
        },
        "updateMask": {
          "type": "string",
          "title": "update mask can only have update only fields"
        },
        "timezone": {
          "type": "string",
          "title": "update booking timezone by sending it in here (if empty no change will take place)"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before update"
        }
      }
    },
    "AppointmentsUpdateRecurringAppointmentsBody": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/v1Appointment"
        },
        "updateMask": {
          "type": "string"
        },
        "recurringType": {
          "$ref": "#/definitions/v1RecurringUpdateType"
        },
        "recurringId": {
          "type": "string"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "timezone": {
          "type": "string",
          "title": "update booking timezone by sending it in here (if empty no change will take place)"
        },
        "skipValidation": {
          "type": "boolean",
          "title": "skip validation"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesAddress": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "title": "Country , e.g. \"USA\". (required)"
        },
        "locality": {
          "type": "string",
          "title": "Locality or locality/city, e.g. \"Mountain View\". (required)"
        },
        "region": {
          "type": "string",
          "title": "Region, The region/state/province, e.g. \"CA\". This field is only required\nin\ncountries where region is commonly a part of the address. (optional)"
        },
        "postalCode": {
          "type": "string",
          "title": "PostalCode  e.g. \"94043\". (required)"
        },
        "streetAddress": {
          "type": "string",
          "title": "StreetAddress, e.g. \"1600 Amphitheatre Pkwy\". (required)"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "GeoCoordinates , e.g. latitude=23.2599333, longitude=77.41261499999996\nLatitude e.g. 23.2599333"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "Longitude e.g. 77.41261499999996"
        }
      }
    },
    "typesDateslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Dateslot object"
    },
    "typesExtendedFieldSubmissionValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "stringKey": {
          "type": "string"
        },
        "intKey": {
          "type": "string",
          "format": "int64"
        },
        "floatKey": {
          "type": "number",
          "format": "float"
        },
        "boolKey": {
          "type": "boolean"
        },
        "addressKey": {
          "$ref": "#/definitions/typesAddress"
        },
        "stringArrKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "intArrKey": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "typesFormValue": {
      "type": "object",
      "properties": {
        "valueType": {
          "$ref": "#/definitions/typesFormValueType",
          "title": "value type"
        },
        "text": {
          "type": "string",
          "title": "value"
        },
        "boolean": {
          "type": "boolean"
        },
        "number": {
          "type": "string",
          "format": "int64"
        },
        "decimal": {
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "typesFormValueType": {
      "type": "string",
      "enum": [
        "String",
        "Boolean",
        "Number",
        "Decimal",
        "Timestamp",
        "OnlyDatePart",
        "OnlyTimePart"
      ],
      "default": "String",
      "title": "- Timestamp: date + time\n - OnlyDatePart: date\n - OnlyTimePart: time"
    },
    "typesGalleryItem": {
      "type": "object",
      "properties": {
        "thumbImage": {
          "type": "string"
        },
        "largeImage": {
          "type": "string"
        }
      },
      "title": "Generic Gallery Item Object"
    },
    "typesIntegrationType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TYPE",
        "GOOGLECALENDAR",
        "OUTLOOK",
        "QUICKBOOKS",
        "STRIPE",
        "GOOGLE_BUSINESS_REVIEW",
        "YELP",
        "OTHERS",
        "FIREBASE",
        "WEBEX",
        "ZOOM",
        "GOOGLE_TAG_MANAGER",
        "GOOGLE_ANALYTICS",
        "FACEBOOK_PIXEL",
        "MIXPANEL",
        "SQUARE",
        "BRAINTREE",
        "PAYPAL",
        "ICLOUD",
        "INTERCOM",
        "GOOGLE_DRIVE",
        "DROPBOX",
        "GOOGLE_CONTACT",
        "ZAPIER",
        "MICROSOFT_TEAMS",
        "MICROSOFT_TEAMS_CONNECTOR",
        "CUSTOM_WEBHOOK",
        "SERVICE_NOW",
        "RAZORPAY",
        "SALESFORCE",
        "FRESH_SALES",
        "OPEN_HOUR_GOOGLE_CALENDAR",
        "BIG_COMMERCE",
        "XERO",
        "MAILCHIMP",
        "ZENDESK",
        "HUBSPOT"
      ],
      "default": "UNKNOWN_TYPE",
      "title": "- GOOGLE_DRIVE: not for appointy\n - ZAPIER: for appointy\n - OPEN_HOUR_GOOGLE_CALENDAR: Open Hour for Google Calendar"
    },
    "typesMetaDetailsWrapper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "deletedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "updateMask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesOrderBy": {
      "type": "string",
      "enum": [
        "Ascending",
        "Descending"
      ],
      "default": "Ascending"
    },
    "typesPageInfo": {
      "type": "object",
      "properties": {
        "hasNext": {
          "type": "boolean",
          "description": "HasNext is used to indicate whether more edges exist following the set\ndefined by the clients arguments. If the client is paginating with\nfirst/after, then the server must return true if further edges exist,\notherwise false. If the client is paginating with last/before, then the\nclient may return true if edges further from before exist, if it can do so\nefficiently, otherwise may return false."
        },
        "hasPrevious": {
          "type": "boolean",
          "description": "HasPrevious is used to indicate whether more edges exist prior to the set\ndefined by the clients arguments.\nIf the client is paginating with last/before, then the server must return\ntrue if prior edges exist, otherwise false. If the client is paginating\nwith first/after, then the client may return true if edges prior to after\nexist, if it can do so efficiently, otherwise may return false."
        },
        "startCursor": {
          "type": "string"
        },
        "endCursor": {
          "type": "string"
        }
      }
    },
    "typesPaginationInfo": {
      "type": "object",
      "properties": {
        "hasNext": {
          "type": "boolean"
        },
        "hasPrevious": {
          "type": "boolean"
        },
        "nextOffset": {
          "type": "integer",
          "format": "int32"
        },
        "previousOffset": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Pagination Info for report"
    },
    "typesPaymentMethod": {
      "type": "string",
      "enum": [
        "UNSPECIFIED_PAYMENT_METHOD",
        "CASH",
        "STRIPE_CARD",
        "SQUARE_CARD",
        "PACKAGE",
        "GIFT_CERTIFICATE",
        "MEMBERSHIP",
        "DISCOUNT_CODE",
        "CREDIT_CARD",
        "ECHECK",
        "DEBIT_CARD",
        "CREDIT_CARD_AND_CASH",
        "GIFT_CERTIFICATE_OFFLINE",
        "GIFT_CERTIFICATE_AND_CASH",
        "INSURANCE",
        "CHEQUE",
        "RADIUS",
        "RAZORPAY_ACCOUNT",
        "PAYPAL_ACCOUNT"
      ],
      "default": "UNSPECIFIED_PAYMENT_METHOD",
      "description": "- CASH: Offline\n - CREDIT_CARD: Offline\n - ECHECK: Offline\n - DEBIT_CARD: Offline\n - CREDIT_CARD_AND_CASH: Offline\n - GIFT_CERTIFICATE_OFFLINE: Offline\n - GIFT_CERTIFICATE_AND_CASH: Offline\n - INSURANCE: Offline\n - CHEQUE: Offline",
      "title": "PaymentMethod defines the all the type of mode of payment supported by saastack"
    },
    "typesPrice": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "currency": {
          "type": "string"
        },
        "amountInFloat": {
          "type": "number",
          "format": "double",
          "title": "@deprecated - DO NOT USE"
        }
      },
      "title": "Generic Price object"
    },
    "typesProtobuf": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string",
          "title": "TypeUrl specifies the path of the protocol buffer message"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "title": "Data is valid serialized protocol buffer message"
        }
      },
      "title": "Protobuf represesnts any serialized protocol buffer message"
    },
    "typesRsvp": {
      "type": "string",
      "enum": [
        "NOT_RESPONDED",
        "YES",
        "NO",
        "MAYBE"
      ],
      "default": "NOT_RESPONDED"
    },
    "typesTimeslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Timeslot object"
    },
    "v1AddConsumersToRecurringAppointmentResponse": {
      "type": "object",
      "properties": {
        "appointmentsWithMessage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        }
      }
    },
    "v1AddOrRemoveMeetingInviteesRequest": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "employees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InvitedEmployee"
          },
          "title": "InvitedEmployees will contain list of employees\n * to be added if Remove is false,\n * or to be removed if Remove is true"
        },
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Consumer"
          },
          "title": "Similarly, consumers will contain list of consumers\n * to be added if Remove is false,\n * or to be removed if Remove is true"
        },
        "remove": {
          "type": "boolean",
          "title": "Remove flag as discussed in Employees and Consumers fields above"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        }
      }
    },
    "v1AdditionalReportsFilter": {
      "type": "object",
      "properties": {
        "vehicleRegistrationNumber": {
          "type": "string"
        },
        "buyerOrganizationName": {
          "type": "string"
        },
        "buyerOrganizationId": {
          "type": "string"
        }
      }
    },
    "v1Appointment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the appointment."
        },
        "timeSlot": {
          "$ref": "#/definitions/typesTimeslot",
          "title": "Timeslot of the appointment in UTC. (required)"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Resource"
          },
          "title": "Resources booked in this appointment. (optional)"
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceType"
          },
          "title": "Resource Types booked in this appointment. (optional)"
        },
        "service": {
          "$ref": "#/definitions/v1Service",
          "title": "Service of the appointment. (required)"
        },
        "channel": {
          "$ref": "#/definitions/v1Channel",
          "title": "Channel of the appointment. (optional)"
        },
        "employee": {
          "$ref": "#/definitions/v1Employee",
          "title": "Employee of the appointment. (required but can be filled using availability only in serialize appointment case)\nIn case of Meeting, this employee is considered to be the Host of the booking"
        },
        "invitedEmployees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InvitedEmployee"
          },
          "title": "InvitedEmployees represents list of employees other than the host that are booked in the appointment\nThis will only be used in case of meetings"
        },
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Consumer"
          },
          "title": "Consumers booked in this appointment. (optional)"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "total consumers",
          "title": "total no. of consumers in the appointment"
        },
        "bookingId": {
          "type": "string",
          "description": "BookingId is a unique grouping id for appointments booked together. For example,\nrecurring appointments will share the same booking id."
        },
        "recurringId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1AppointmentStatus"
        },
        "paymentStatus": {
          "$ref": "#/definitions/v1AppointmentPaymentStatus"
        },
        "createdBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        },
        "rescheduleAllowedTill": {
          "type": "string",
          "format": "date-time"
        },
        "cancellationAllowedTill": {
          "type": "string",
          "format": "date-time"
        },
        "totalPrice": {
          "$ref": "#/definitions/typesPrice"
        },
        "discountCode": {
          "type": "string"
        },
        "totalDiscountedPrice": {
          "$ref": "#/definitions/typesPrice"
        },
        "meetingData": {
          "$ref": "#/definitions/v1MeetingData"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "medium": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        },
        "isBookedByAdmin": {
          "type": "boolean",
          "title": "is_booked_by_admin true if booked by admin"
        },
        "reason": {
          "type": "string",
          "title": "reason for update or cancel"
        },
        "submissionData": {
          "type": "string",
          "format": "byte",
          "title": "form submission data, this is read only value, and is not stored in db"
        },
        "isIntakeFormSubmitted": {
          "type": "boolean"
        },
        "hasNotes": {
          "type": "boolean"
        },
        "historicalData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentHistory"
          },
          "title": "Appointment historical data"
        },
        "everRescheduled": {
          "type": "boolean",
          "title": "true on update in time"
        },
        "lastRescheduledBy": {
          "type": "string"
        },
        "lastRescheduledOn": {
          "type": "string",
          "format": "date-time"
        },
        "isLastRescheduledByAdmin": {
          "type": "boolean"
        },
        "lastStatusUpdatedBy": {
          "type": "string",
          "title": "Last Status Change fields"
        },
        "lastStatusUpdatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isLastStatusUpdatedByAdmin": {
          "type": "boolean"
        },
        "recurrenceSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inviteeCanModify": {
          "type": "boolean",
          "description": "InviteeCanModify represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can modify the booking or not."
        },
        "inviteeCanManageOtherInvitees": {
          "type": "boolean",
          "description": "InviteeCanManageOtherInvitees represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can invite or remove some other invitees."
        },
        "viewGuestList": {
          "type": "boolean",
          "description": "ViewGuestList represent Meeting app permission for all users to view other users involved in appointment."
        },
        "lastRecurringAppointment": {
          "type": "boolean"
        }
      }
    },
    "v1AppointmentBuyerOrganization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "This is created for VTNZ Client"
    },
    "v1AppointmentCancellationPolicyResponse": {
      "type": "object",
      "properties": {
        "cancellationPossible": {
          "type": "boolean"
        },
        "penalty": {
          "$ref": "#/definitions/typesPrice"
        },
        "penaltyPercentage": {
          "type": "number",
          "format": "double"
        },
        "reason": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "v1AppointmentCustomStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "displayOrder": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1AppointmentEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string",
          "title": "title of service"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent": {
          "type": "string",
          "title": "contains location-id"
        }
      }
    },
    "v1AppointmentFormField": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "formFieldType": {
          "$ref": "#/definitions/v1AppointmentFormFieldType"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentFormFieldOption"
          }
        },
        "multiple": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1AppointmentFormFieldOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1AppointmentFormFieldType": {
      "type": "string",
      "enum": [
        "FormFieldType_UNDEFINED",
        "INPUT",
        "CHECKBOX",
        "SELECT",
        "ADDRESS"
      ],
      "default": "FormFieldType_UNDEFINED"
    },
    "v1AppointmentHistory": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "meta data for this history object"
        },
        "createdBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "isCreatedByAdmin": {
          "type": "boolean"
        },
        "timeslot": {
          "$ref": "#/definitions/typesTimeslot",
          "title": "Old Appointment data"
        },
        "serviceId": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        },
        "inviteeCanModify": {
          "type": "boolean"
        },
        "inviteeCanManageOtherInvitees": {
          "type": "boolean"
        },
        "viewGuestList": {
          "type": "boolean"
        },
        "consumerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inviteeEmployeeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/v1AppointmentStatus"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "paymentStatus": {
          "$ref": "#/definitions/v1AppointmentPaymentStatus"
        }
      }
    },
    "v1AppointmentMonthView": {
      "type": "string",
      "enum": [
        "StaffView",
        "ServiceView",
        "ResourceView",
        "LocationView"
      ],
      "default": "StaffView"
    },
    "v1AppointmentNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string",
          "title": "Position is the current position of the cursor in the Appointment list eg :row\nnumber"
        },
        "node": {
          "$ref": "#/definitions/v1Appointment",
          "title": "Information about the AppointmentNode"
        },
        "buyerOrganization": {
          "$ref": "#/definitions/v1AppointmentBuyerOrganization"
        }
      },
      "title": "Information about each Appointment and its position"
    },
    "v1AppointmentNote": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "all its validations are checked in notes service"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "private": {
          "type": "boolean"
        },
        "typeId": {
          "type": "string"
        },
        "against": {
          "type": "string"
        },
        "appTypeId": {
          "type": "string"
        },
        "appTypeName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string",
          "title": "meta details"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedBy": {
          "type": "string"
        },
        "createdByName": {
          "type": "string"
        },
        "updatedByName": {
          "type": "string"
        },
        "deletedByName": {
          "type": "string"
        },
        "createdByEmail": {
          "type": "string"
        },
        "updatedByEmail": {
          "type": "string"
        },
        "deletedByEmail": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "deletedOn": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1AppointmentNoteNode": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1AppointmentNote",
          "title": "Node is the actual consumer object"
        }
      }
    },
    "v1AppointmentPaymentStatus": {
      "type": "string",
      "enum": [
        "APPOINTMENT_PAYMENT_UNKNOWN",
        "APPOINTMENT_PAYMENT_FAILED",
        "APPOINTMENT_PAYMENT_PAID",
        "APPOINTMENT_PAYMENT_UNPAID",
        "APPOINTMENT_PAYMENT_REFUND",
        "APPOINTMENT_PAYMENT_PARTIAL"
      ],
      "default": "APPOINTMENT_PAYMENT_UNKNOWN"
    },
    "v1AppointmentRefundStatus": {
      "type": "string",
      "enum": [
        "APPOINTMENT_REFUND_STATUS_UNKNOWN",
        "APPOINTMENT_PAYMENT_FULL_REFUND",
        "APPOINTMENT_PAYMENT_PARTIAL_REFUND"
      ],
      "default": "APPOINTMENT_REFUND_STATUS_UNKNOWN"
    },
    "v1AppointmentReportData": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConsumerWithTags"
          }
        },
        "serviceTitle": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "employeeFirstName": {
          "type": "string"
        },
        "employeeLastName": {
          "type": "string"
        },
        "employeeEmail": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1AppointmentStatus"
        },
        "paymentStatus": {
          "$ref": "#/definitions/v1AppointmentPaymentStatus"
        },
        "totalPrice": {
          "$ref": "#/definitions/typesPrice"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Resource"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceType"
          }
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "appointmentDate": {
          "$ref": "#/definitions/typesTimeslot"
        },
        "source": {
          "type": "string"
        },
        "medium": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        },
        "notes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isBookedByAdmin": {
          "type": "boolean"
        },
        "bookedByUserId": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "employeeId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "forms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReportIntakeForm"
          }
        },
        "submissionValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UnitSubmissionValue"
          }
        },
        "invitedEmployees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1InvitedEmployee"
          },
          "title": "Invited employees"
        },
        "rescheduledByUserId": {
          "type": "string"
        },
        "cancelledByUserId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "extendedFormFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        },
        "extendedFormFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentFormField"
          }
        },
        "employeeExtendedFormFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        },
        "employeeExtendedFormFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentFormField"
          }
        },
        "discountCode": {
          "type": "string"
        },
        "totalDiscountedPrice": {
          "$ref": "#/definitions/typesPrice"
        },
        "serviceCategory": {
          "type": "string"
        },
        "employeeSsoId": {
          "type": "string"
        },
        "membershipTitle": {
          "type": "string"
        },
        "membershipCode": {
          "type": "string"
        },
        "refundStatus": {
          "$ref": "#/definitions/v1AppointmentRefundStatus"
        },
        "refundedQuantity": {
          "type": "string",
          "format": "int64"
        },
        "bookingUrl": {
          "type": "string"
        },
        "additionalAmountNote": {
          "type": "string"
        },
        "additionalDiscountNote": {
          "type": "string"
        },
        "buyerOrganization": {
          "$ref": "#/definitions/v1AppointmentBuyerOrganization"
        }
      }
    },
    "v1AppointmentReportLocationData": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "customLocationId": {
          "type": "string"
        }
      }
    },
    "v1AppointmentReportNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1AppointmentReportData"
        }
      }
    },
    "v1AppointmentReportSortBy": {
      "type": "string",
      "enum": [
        "AppointmentReportSortBy_UNDEFINED",
        "AppointmentReportSortBy_StartTime",
        "AppointmentReportSortBy_EndTime",
        "AppointmentReportSortBy_BookingTime",
        "AppointmentReportSortBy_LastRescheduledTime",
        "AppointmentReportSortBy_ServiceTitle",
        "AppointmentReportSortBy_EmployeeName",
        "AppointmentReportSortBy_EmployeeEmail",
        "AppointmentReportSortBy_CustomerName",
        "AppointmentReportSortBy_CustomerEmail"
      ],
      "default": "AppointmentReportSortBy_UNDEFINED"
    },
    "v1AppointmentSearchData": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "timeSlot": {
          "$ref": "#/definitions/typesTimeslot"
        },
        "service": {
          "$ref": "#/definitions/v1ServiceSearchData"
        },
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConsumerSearchData"
          },
          "title": "student data"
        },
        "employee": {
          "$ref": "#/definitions/v1UserSearchData",
          "title": "employee data"
        },
        "status": {
          "$ref": "#/definitions/v1AppointmentStatus"
        }
      }
    },
    "v1AppointmentSearchForCalendarResponse": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentSearchNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo",
          "title": "in PageInfo object, HasPrevious field is always ignored, do not use it"
        }
      }
    },
    "v1AppointmentSearchNode": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string",
          "title": "cursor is the current position of the cursor in the Appointment list eg :row\nnumber"
        },
        "node": {
          "$ref": "#/definitions/v1AppointmentSearchData",
          "title": "Information about appointment"
        }
      }
    },
    "v1AppointmentSortBy": {
      "type": "string",
      "enum": [
        "StartTime",
        "CreatedOn"
      ],
      "default": "StartTime"
    },
    "v1AppointmentStatus": {
      "type": "string",
      "enum": [
        "APPOINTMENT_STATUS_UNSPECIFIED",
        "APPOINTMENT_CONFIRMED",
        "APPOINTMENT_CANCELLED",
        "APPOINTMENT_WAITING_FOR_APPROVAL",
        "APPOINTMENT_BOOKING_IN_PROCESS",
        "APPOINTMENT_FAILED"
      ],
      "default": "APPOINTMENT_STATUS_UNSPECIFIED"
    },
    "v1AppointmentStatusFilter": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AppointmentStatus"
          },
          "title": "status filter"
        },
        "paymentStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AppointmentPaymentStatus"
          },
          "title": "payment status filter"
        },
        "customStatus": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "consumer custom status"
        },
        "customStatusNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "consumer custom status names (not used in reports at the moment)"
        }
      }
    },
    "v1AppointmentWithMessage": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/v1Appointment",
          "title": "App contains appointment object"
        },
        "isBooked": {
          "type": "boolean",
          "title": "whether appointment is booked or not"
        },
        "errorMessage": {
          "type": "string",
          "title": "error message for appointment"
        },
        "isUpdated": {
          "type": "boolean",
          "title": "whether appointment is updated or not"
        },
        "isCancelled": {
          "type": "boolean",
          "title": "whether appointment is cancelled or not"
        }
      }
    },
    "v1AppointmentsCancellationPoliciesResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentCancellationPolicyResponse"
          }
        }
      }
    },
    "v1AppointmentsMonthViewResponse": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DailyAppointmentViewCount"
          }
        }
      }
    },
    "v1AvailabilityStatus": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "v1BatchCancelAppointmentsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "reason": {
          "type": "string",
          "title": "reason for cancellation"
        },
        "employeeId": {
          "type": "string",
          "title": "for sole purpose of rights check"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "v1BatchCancelAppointmentsResponse": {
      "type": "object",
      "properties": {
        "appointmentsWithMessage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        },
        "cancellationPolicies": {
          "$ref": "#/definitions/v1AppointmentsCancellationPoliciesResponse"
        }
      }
    },
    "v1BatchCancelConsumersResponse": {
      "type": "object",
      "properties": {
        "cancellationPolicy": {
          "$ref": "#/definitions/v1AppointmentCancellationPolicyResponse"
        }
      }
    },
    "v1BatchCheckAvailabilityRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Parent contains the hierarchical information of the given appointment\nlike business/group."
        },
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          },
          "description": "Appointments to be checked. If recurrence is set then only first is considered."
        },
        "recurrence": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Recurrence is the rrule set. It takes first of the Appointments field and applies recurrence."
        },
        "userId": {
          "type": "string",
          "title": "Note: user_id for client side only, to be send instead of parent for validations \u0026 right"
        },
        "skipValidation": {
          "type": "boolean"
        },
        "checkOpenHours": {
          "type": "boolean"
        }
      }
    },
    "v1BatchCheckAvailabilityResponse": {
      "type": "object",
      "properties": {
        "cannotBook": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "List of items that cannot be booked.\nIf the request has recurrence then it is the index of slot in order built."
        },
        "slotsStatus": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1AvailabilityStatus"
          }
        }
      }
    },
    "v1BatchConsumerAppointmentCountResponse": {
      "type": "object",
      "properties": {
        "consumersAppointmentCount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ConsumerAppointmentCountResponse"
          }
        }
      }
    },
    "v1BatchCreateAppointmentRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Parent contains the hierarchical information of the given appointment\nlike business/group."
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateAppointmentWrapper"
          },
          "title": "List of Appointments requested"
        },
        "userId": {
          "type": "string",
          "title": "Note: user_id for client side only, to be send instead of parent for validations \u0026 right"
        },
        "skipValidation": {
          "type": "boolean"
        },
        "setNotesPrivate": {
          "type": "boolean"
        },
        "importCall": {
          "type": "boolean"
        }
      }
    },
    "v1BatchCreateAppointmentResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          },
          "title": "List of Appointment with message"
        },
        "bookingId": {
          "type": "string",
          "title": "Unique booking id of appointment"
        }
      }
    },
    "v1BatchGetAppointmentResponse": {
      "type": "object",
      "properties": {
        "appointment": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1BatchUpdateAppointmentsRequest": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/v1Appointment"
        },
        "parent": {
          "type": "string"
        },
        "updateMask": {
          "type": "string"
        },
        "appointmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skipValidation": {
          "type": "boolean"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "timezone": {
          "type": "string",
          "title": "update booking timezone by sending it in here (if empty no change will take place)"
        },
        "originalAppointment": {
          "$ref": "#/definitions/v1Appointment",
          "title": "OriginalAppointment is the appointment before update"
        },
        "note": {
          "type": "string"
        },
        "noteAtAppointmentLevel": {
          "type": "boolean",
          "description": "note_level_apt if true then the notes to stored at appointment level."
        }
      }
    },
    "v1BatchUpdateAppointmentsResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        },
        "originalList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          },
          "description": "OriginalList contains original appointments before update with 1 to 1 mapping with list."
        }
      }
    },
    "v1CancelAllFutureAppointmentsResponse": {
      "type": "object",
      "properties": {
        "appointmentCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1CancelAppointmentByDataCodeResponse": {
      "type": "object",
      "properties": {
        "userInfo": {
          "$ref": "#/definitions/v1UserInfo"
        }
      }
    },
    "v1CancelAppointmentResponse": {
      "type": "object",
      "properties": {
        "cancellationPolicy": {
          "$ref": "#/definitions/v1AppointmentCancellationPolicyResponse"
        }
      }
    },
    "v1CancelRecurringAppointmentsResponse": {
      "type": "object",
      "properties": {
        "oldAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        },
        "cancellationPolicies": {
          "$ref": "#/definitions/v1AppointmentsCancellationPoliciesResponse"
        }
      }
    },
    "v1ChangeAppointmentStatusByDataCodeResponse": {
      "type": "object",
      "properties": {
        "userInfo": {
          "$ref": "#/definitions/v1UserInfo"
        }
      }
    },
    "v1ChangeAppointmentStatusResponse": {
      "type": "object",
      "properties": {
        "cancellationPolicy": {
          "$ref": "#/definitions/v1AppointmentCancellationPolicyResponse"
        },
        "updatedAppointment": {
          "$ref": "#/definitions/v1AppointmentWithMessage"
        }
      }
    },
    "v1ChangeRecurringAppointmentStatusResponse": {
      "type": "object",
      "properties": {
        "cancellationPolicy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentCancellationPolicyResponse"
          }
        },
        "updatedAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        }
      }
    },
    "v1Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the channel"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1CompanyAppointmentReportData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1AppointmentReportData"
        },
        "location": {
          "$ref": "#/definitions/v1CompanyAppointmentReportLocationData"
        }
      }
    },
    "v1CompanyAppointmentReportLocationData": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "customLocationId": {
          "type": "string"
        }
      }
    },
    "v1CompanyAppointmentReportNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1CompanyAppointmentReportData"
        }
      }
    },
    "v1CompanyGroupedAppointmentReportData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1GroupedAppointmentReportData"
        },
        "location": {
          "$ref": "#/definitions/v1CompanyGroupedAppointmentReportLocationData"
        }
      }
    },
    "v1CompanyGroupedAppointmentReportLocationData": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1CompanyGroupedAppointmentReportNode": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1CompanyGroupedAppointmentReportData"
        }
      }
    },
    "v1ConfirmLeaseResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1Consumer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the consumer"
        },
        "email": {
          "type": "string",
          "description": "Email of consumer."
        },
        "consumerType": {
          "$ref": "#/definitions/v1ConsumerType",
          "title": "type and other data of consumer"
        },
        "consumerData": {
          "$ref": "#/definitions/v1ConsumerData"
        },
        "status": {
          "$ref": "#/definitions/v1ConsumerStatus",
          "title": "Status of consumer whether unspecified, confirmed, cancelled or no show"
        },
        "language": {
          "type": "string",
          "description": "Language is the ISO language codes. For example 'en-US', 'fr', 'fr-CA'."
        },
        "timezone": {
          "type": "string",
          "title": "Timezone is the IANA timezone string. For example, 'Asia/Kolkatta', 'America/Los_Angeles'"
        },
        "customStatus": {
          "$ref": "#/definitions/v1CustomStatus",
          "title": "custom status"
        },
        "customStatusLastChangedOn": {
          "type": "string",
          "format": "date-time"
        },
        "isBookedByAdmin": {
          "type": "boolean",
          "title": "is_booked_by_admin true if booked by admin"
        },
        "policyId": {
          "type": "string"
        },
        "acceptanceId": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/typesPrice"
        },
        "address": {
          "$ref": "#/definitions/typesAddress"
        },
        "telephones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "title": "total no. of consumers"
        },
        "reviewSent": {
          "type": "boolean"
        },
        "smsReminderSent": {
          "type": "boolean"
        },
        "emailReminderSent": {
          "type": "boolean"
        },
        "smsRemindOn": {
          "type": "string",
          "format": "date-time"
        },
        "emailRemindOn": {
          "type": "string",
          "format": "date-time"
        },
        "rsvp": {
          "$ref": "#/definitions/typesRsvp",
          "title": "Rsvp status of the consumer, will be used only in case of meetings app"
        },
        "rsvpMessage": {
          "type": "string"
        },
        "isHost": {
          "type": "boolean",
          "title": "IsHost represents whether this consumer is the client host of the booking\nThis is also used only in case of meetings app"
        },
        "consumerName": {
          "type": "string",
          "description": "only for readonly purpose: if consumer_type=='STUDENT'\nconsumer_name = student_data.first_name + \" \" + student_data.last_name\nif consumer_type=='CUSTOMER' consumer_name = customer_data.first_name + \" \" + customer_data.last_name\nThis field is only for purpose of join simplicity."
        },
        "customerName": {
          "type": "string",
          "description": "only for readonly purpose: if consumer_type=='STUDENT'\ncustomer_name = student_data.guardian_first_name + \" \" + student_data.guardian_last_name\nif consumer_type=='CUSTOMER' customer_name = customer_data.first_name + \" \" + customer_data.last_name\nThis field is only for purpose of join simplicity."
        },
        "customerEmail": {
          "type": "string",
          "description": "only for readonly purpose: if consumer_type=='STUDENT' then customer_email=student_data.guardianEmail\nif consumer_type=='CUSTOMER' customer_email == Consumer.email\nThis field is only for purpose of join simplicity."
        },
        "bookingCustomerId": {
          "type": "string",
          "description": "BookingCustomerId is the booking customer id or the main customer id e.g.\nIn case of student type, it will be the booking guardian's id or the student's primary guardian's id.\nand else it will be the booking customer id or the main customer id."
        },
        "consumerGuests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cancelationReason": {
          "type": "string"
        }
      }
    },
    "v1ConsumerAppointmentCountResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "consumerId": {
          "type": "string"
        }
      }
    },
    "v1ConsumerData": {
      "type": "object",
      "properties": {
        "customerData": {
          "$ref": "#/definitions/v1CustomerData"
        },
        "studentData": {
          "$ref": "#/definitions/v1StudentData"
        }
      }
    },
    "v1ConsumerSearchData": {
      "type": "object",
      "properties": {
        "consumerId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "customStatus": {
          "$ref": "#/definitions/v1CustomStatus"
        },
        "customer": {
          "$ref": "#/definitions/v1UserSearchData",
          "title": "Guardian data"
        }
      }
    },
    "v1ConsumerStatus": {
      "type": "string",
      "enum": [
        "CONSUMER_STATUS_UNSPECIFIED",
        "CONFIRMED",
        "CANCELLED"
      ],
      "default": "CONSUMER_STATUS_UNSPECIFIED"
    },
    "v1ConsumerType": {
      "type": "string",
      "enum": [
        "CUSTOMER",
        "STUDENT"
      ],
      "default": "CUSTOMER",
      "description": "More type will be added in the future."
    },
    "v1ConsumerWithTags": {
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/v1Consumer"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "companyId": {
          "type": "string"
        },
        "extendedFormFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        },
        "extendedFormFields": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentFormField"
          }
        },
        "ssoId": {
          "type": "string"
        },
        "displayCustomerId": {
          "type": "string"
        }
      }
    },
    "v1CreateAppointmentCustomStatusRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "customStatus": {
          "$ref": "#/definitions/v1AppointmentCustomStatus"
        }
      }
    },
    "v1CreateAppointmentNoteRequest": {
      "type": "object",
      "properties": {
        "setPrivate": {
          "type": "boolean"
        },
        "appointmentId": {
          "type": "string"
        },
        "note": {
          "$ref": "#/definitions/v1AppointmentNote"
        }
      }
    },
    "v1CreateAppointmentRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "title": "Parent id where the appointment is to be created"
        },
        "leaseId": {
          "type": "string",
          "description": "LeaseId is the id obtained from LeaseAppointment method."
        },
        "appointment": {
          "$ref": "#/definitions/v1Appointment",
          "description": "Appointment is the appointment to be booked."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "ValidateOnly if true, it indicates that the given request should only be validated, not executed."
        },
        "skipValidation": {
          "type": "boolean"
        },
        "userId": {
          "type": "string",
          "title": "Note: user_id for client side only, to be send instead of parent for validations \u0026 right"
        },
        "notes": {
          "type": "string",
          "title": "initial notes given"
        },
        "setNotePrivate": {
          "type": "boolean"
        },
        "noteAtAppointmentLevel": {
          "type": "boolean",
          "description": "note_level_apt if true then the notes to stored at appointment level."
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmissions"
          }
        },
        "lastRequestTime": {
          "type": "string",
          "format": "date-time"
        },
        "recurringSlots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesTimeslot"
          }
        },
        "recurrenceSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "formFieldValues": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesExtendedFieldSubmissionValue"
          }
        }
      },
      "title": "CreateAppointmentRequest: Request object for CreateAppointment rpc call"
    },
    "v1CreateAppointmentWrapper": {
      "type": "object",
      "properties": {
        "appointment": {
          "$ref": "#/definitions/v1Appointment"
        },
        "note": {
          "type": "string"
        },
        "noteAtAppointmentLevel": {
          "type": "boolean"
        },
        "sendNotification": {
          "$ref": "#/definitions/v1SendNotification"
        },
        "metaDetails": {
          "$ref": "#/definitions/typesMetaDetailsWrapper",
          "title": "MetaDetailsWrapper: ignore id and set update_mask to which ever field is need to be set in it"
        }
      }
    },
    "v1CustomStatus": {
      "type": "object",
      "properties": {
        "customStatusId": {
          "type": "string"
        },
        "customStatusName": {
          "type": "string"
        }
      }
    },
    "v1CustomerData": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of consumer."
        },
        "lastName": {
          "type": "string",
          "description": "LastName of consumer."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1DailyAppointmentCount": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1DailyAppointmentViewCount": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "count": {
          "type": "string",
          "format": "int64"
        },
        "against": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "v1DeleteRecurringAppointmentsResponse": {
      "type": "object",
      "properties": {
        "deletedAppointmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deletedAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1DeleteRelatedAppointmentsRequest": {
      "type": "object",
      "properties": {
        "relatedToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "relatedTo": {
          "$ref": "#/definitions/v1DeleteRelatedAppointmentsType"
        },
        "period": {
          "$ref": "#/definitions/v1DeleteRelatedAppointmentsTimePeriod"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "optional"
        },
        "deleteOnlyCancelled": {
          "type": "boolean"
        },
        "buyerOrganizationId": {
          "type": "string"
        }
      }
    },
    "v1DeleteRelatedAppointmentsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1DeleteRelatedAppointmentsTimePeriod": {
      "type": "string",
      "enum": [
        "NoTime",
        "AllTime",
        "PastTime",
        "FutureTime"
      ],
      "default": "NoTime"
    },
    "v1DeleteRelatedAppointmentsType": {
      "type": "string",
      "enum": [
        "RelatedToNone",
        "RelatedToService",
        "RelatedToEmployee",
        "RelatedToConsumer"
      ],
      "default": "RelatedToNone"
    },
    "v1Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the employee. (required)"
        },
        "firstName": {
          "type": "string",
          "description": "FirstName of the employee."
        },
        "lastName": {
          "type": "string",
          "description": "LastName of the employee."
        },
        "email": {
          "type": "string",
          "description": "Email of the employee."
        },
        "profileId": {
          "type": "string",
          "title": "profile id"
        },
        "lastId": {
          "type": "string",
          "title": "in case of update: the last employee id will contain old employee id"
        },
        "name": {
          "type": "string",
          "title": "only for readonly purpose: name = first_name + \" \" + last_name"
        },
        "smsReminderSent": {
          "type": "boolean"
        },
        "emailReminderSent": {
          "type": "boolean"
        },
        "smsRemindOn": {
          "type": "string",
          "format": "date-time"
        },
        "emailRemindOn": {
          "type": "string",
          "format": "date-time"
        },
        "reviewMailStatus": {
          "$ref": "#/definitions/v1EmployeeReviewMailStatus"
        }
      }
    },
    "v1EmployeeReviewMailStatus": {
      "type": "string",
      "enum": [
        "DoNotSendMail",
        "ReviewMailScheduled",
        "ReviewMailSent"
      ],
      "default": "DoNotSendMail"
    },
    "v1FormSubmissions": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SingleSubmission"
          }
        },
        "submittedForName": {
          "type": "string"
        },
        "submittedForEmail": {
          "type": "string"
        },
        "submittedForUserId": {
          "type": "string"
        }
      }
    },
    "v1GenerateDataCodeForPortedAppointmentRequest": {
      "type": "object",
      "properties": {
        "oldOrderId": {
          "type": "string",
          "format": "int64"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1GenerateDataCodeForPortedAppointmentResponse": {
      "type": "object",
      "properties": {
        "dataCode": {
          "type": "string"
        }
      }
    },
    "v1GetAppointmentCountResponse": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1DailyAppointmentCount"
          }
        }
      }
    },
    "v1GetAppointmentReportResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentReportNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPaginationInfo"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "downloadLimit": {
          "type": "string",
          "format": "int64"
        },
        "totalPrice": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesPrice"
          }
        },
        "duration": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/v1AppointmentReportLocationData"
        }
      }
    },
    "v1GetCompanyAppointmentReportResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CompanyAppointmentReportNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPaginationInfo"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "downloadLimit": {
          "type": "string",
          "format": "int64"
        },
        "totalPrice": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesPrice"
          }
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "v1GetCompanyGroupedAppointmentReportResponse": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CompanyGroupedAppointmentReportNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPaginationInfo"
        }
      }
    },
    "v1GetGroupLevelAppointmentReportResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GroupLevelAppointmentReportNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPaginationInfo"
        },
        "total": {
          "type": "string",
          "format": "int64"
        },
        "downloadLimit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetGroupedAppointmentReportResponse": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1GroupedAppointmentReportNode"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPaginationInfo"
        }
      }
    },
    "v1GetPortedAppointmentsByCodeResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1GetRecurringAppointmentsFromBaseAppointmentResponse": {
      "type": "object",
      "properties": {
        "recurringAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1GroupBatchCheckAvailabilityRequest": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string",
          "description": "Parent contains the hierarchical information of the given appointment\nlike business/group."
        },
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          },
          "title": "list of appointments with different consumers to be checked"
        },
        "recurrence": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Recurrence is the rrule set. we will apply this recurrence rule for all the appointments in request"
        },
        "skipValidation": {
          "type": "boolean"
        },
        "checkOpenHours": {
          "type": "boolean"
        }
      }
    },
    "v1GroupBatchCheckAvailabilityResponse": {
      "type": "object",
      "properties": {
        "slotsStatus": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1AvailabilityStatus"
          },
          "description": "recurrence will be the index of slots in this map."
        }
      }
    },
    "v1GroupLevelAppointmentReportData": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/v1AppointmentReportData"
        },
        "location": {
          "$ref": "#/definitions/v1GroupLevelAppointmentReportLocationData"
        }
      }
    },
    "v1GroupLevelAppointmentReportLocationData": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "customLocationId": {
          "type": "string"
        }
      }
    },
    "v1GroupLevelAppointmentReportNode": {
      "type": "object",
      "properties": {
        "position": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1GroupLevelAppointmentReportData"
        }
      }
    },
    "v1GroupedAppointmentReportData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "parsed date-time: will be used as cursor // no need"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "serviceTitle": {
          "type": "string"
        },
        "employeeName": {
          "type": "string"
        },
        "employeeEmail": {
          "type": "string"
        },
        "resourceTitle": {
          "type": "string"
        },
        "resourceTypeTitle": {
          "type": "string"
        },
        "appointmentCount": {
          "type": "integer",
          "format": "int32"
        },
        "consumerCount": {
          "type": "integer",
          "format": "int32"
        },
        "sales": {
          "$ref": "#/definitions/typesPrice"
        },
        "grouperId": {
          "type": "string"
        }
      }
    },
    "v1GroupedAppointmentReportNode": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "string"
        },
        "node": {
          "$ref": "#/definitions/v1GroupedAppointmentReportData"
        }
      }
    },
    "v1ImportAppointmentsResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        }
      }
    },
    "v1InvitedEmployee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/v1Employee"
        }
      },
      "title": "InvitedEmployee represents other invited employees in any booking"
    },
    "v1LeaseResultWrapper": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "leaseId": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "v1ListAppointmentCustomStatusesResponse": {
      "type": "object",
      "properties": {
        "customStatus": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentCustomStatus"
          }
        }
      }
    },
    "v1ListAppointmentEventsForCalendarResponse": {
      "type": "object",
      "properties": {
        "appointmentEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentEvent"
          }
        }
      }
    },
    "v1ListAppointmentFilters": {
      "type": "object",
      "properties": {
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "consumerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "consumerName": {
          "type": "string",
          "title": "search queries"
        },
        "consumerEmail": {
          "type": "string"
        },
        "serviceTitle": {
          "type": "string"
        },
        "employeeName": {
          "type": "string"
        },
        "employeeEmail": {
          "type": "string"
        },
        "query": {
          "type": "string",
          "title": "on all above, search queries with 'or' condition"
        }
      }
    },
    "v1ListAppointmentNotesResponse": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentNoteNode"
          },
          "title": "List of notes"
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo",
          "title": "PageInfo contains information about the current page"
        }
      }
    },
    "v1ListAppointmentResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentNode"
          },
          "title": "List of Appointments node which contains Appointment and its position in the list"
        },
        "pageInfo": {
          "$ref": "#/definitions/typesPageInfo",
          "title": "in PageInfo object, HasPrevious field is always ignored, do not use it"
        }
      },
      "title": "ListAppointmentsResponse: Response object for ListAppointments rpc call"
    },
    "v1ListAppointmentsForCalendarResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        },
        "blockingAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1ListAppointmentsOfOrderResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1LocationStaffFilter": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "employeeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1MeetingData": {
      "type": "object",
      "properties": {
        "integrationType": {
          "$ref": "#/definitions/typesIntegrationType"
        },
        "externalMeetingId": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "joinUrl": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        }
      }
    },
    "v1MeetingInvitee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "profileImage": {
          "$ref": "#/definitions/typesGalleryItem"
        }
      }
    },
    "v1NoteStatusType": {
      "type": "string",
      "enum": [
        "PUBLIC",
        "PRIVATE",
        "ANY"
      ],
      "default": "PUBLIC"
    },
    "v1ObtainLeaseForAppointmentResponse": {
      "type": "object",
      "properties": {
        "leaseIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LeaseResultWrapper"
          }
        },
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        }
      }
    },
    "v1RecurringUpdateType": {
      "type": "string",
      "enum": [
        "ThisAppointment",
        "ThisAndFollowingAppointment",
        "AllAppointments"
      ],
      "default": "ThisAppointment"
    },
    "v1ReportIntakeForm": {
      "type": "object",
      "properties": {
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReportIntakeFormBlock"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ReportIntakeFormBlock": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "v1ReportsDropDownFilter": {
      "type": "object",
      "properties": {
        "serviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "https://appointy.atlassian.net/browse/AXN-3779"
        },
        "employeeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bookedByUserId": {
          "type": "string",
          "title": "https://appointy.atlassian.net/browse/AXN-3786"
        },
        "discountCoupon": {
          "type": "string",
          "title": "https://appointy.atlassian.net/browse/AXN-3777"
        }
      }
    },
    "v1Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the resource"
        },
        "title": {
          "type": "string",
          "title": "Title of the resource"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "deprecated Resource will not have capacity, now"
        },
        "resourceTypeId": {
          "type": "string",
          "title": "ResourceTypeId denotes the resourceType id"
        }
      }
    },
    "v1ResourceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the resource type"
        },
        "title": {
          "type": "string",
          "title": "Title of the resource type"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "Capacity of the resource type"
        }
      }
    },
    "v1SearchMeetingInviteesResponse": {
      "type": "object",
      "properties": {
        "meetingInvitee": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MeetingInvitee"
          }
        }
      }
    },
    "v1SendNotification": {
      "type": "object",
      "properties": {
        "email": {
          "type": "boolean"
        },
        "sms": {
          "type": "boolean"
        }
      }
    },
    "v1SerializeAppointmentRequest": {
      "type": "object",
      "properties": {
        "appointment": {
          "$ref": "#/definitions/v1Appointment"
        },
        "parent": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "title": "Note: user_id for client side only, to be send instead of parent for validations \u0026 right"
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        },
        "dynamicLinkId": {
          "type": "string"
        },
        "submissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1FormSubmissions"
          }
        },
        "lastRequestTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1SerializeAppointmentResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/typesProtobuf"
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesProtobuf"
          }
        },
        "updatedRequests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        }
      }
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id can be empty as it can be dynamically booked"
        },
        "title": {
          "type": "string",
          "description": "Title of the service in various locales."
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "Capacity"
        },
        "preBufferTime": {
          "type": "string",
          "format": "int64",
          "title": "Pre appointment buffer time in seconds"
        },
        "postBufferTime": {
          "type": "string",
          "format": "int64",
          "title": "Post appointment buffer time in seconds"
        },
        "isDynamic": {
          "type": "boolean",
          "title": "in case of  link sharing  , we have to create dynamic service"
        },
        "lastId": {
          "type": "string",
          "title": "in case of update: the last service id will contain old service id"
        },
        "templateId": {
          "type": "string",
          "title": "service template id"
        },
        "dynamicLinkId": {
          "type": "string",
          "title": "dynamic link id"
        }
      }
    },
    "v1ServiceSearchData": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceTitle": {
          "type": "string"
        }
      }
    },
    "v1SingleSubmission": {
      "type": "object",
      "properties": {
        "formId": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UnitSubmissionValue"
          }
        }
      }
    },
    "v1StudentData": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "guardian": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "guardianEmail": {
          "type": "string"
        },
        "guardianFirstName": {
          "type": "string"
        },
        "guardianLastName": {
          "type": "string"
        }
      }
    },
    "v1UnitSubmissionValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "response": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesFormValue"
          }
        }
      }
    },
    "v1UpdateAppointmentByDataCodeResponse": {
      "type": "object",
      "properties": {
        "appointment": {
          "$ref": "#/definitions/v1Appointment"
        },
        "userInfo": {
          "$ref": "#/definitions/v1UserInfo",
          "title": "internal"
        }
      }
    },
    "v1UpdateAppointmentNoteRequest": {
      "type": "object",
      "properties": {
        "setPrivate": {
          "type": "boolean"
        },
        "note": {
          "$ref": "#/definitions/v1AppointmentNote"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateConsumerRSVPByDataCodeResponse": {
      "type": "object",
      "properties": {
        "userInfo": {
          "$ref": "#/definitions/v1UserInfo"
        }
      }
    },
    "v1UpdateConsumerRSVPRequest": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "consumerId": {
          "type": "string"
        },
        "rsvp": {
          "$ref": "#/definitions/typesRsvp"
        },
        "rsvpMessage": {
          "type": "string"
        },
        "originalRsvp": {
          "$ref": "#/definitions/typesRsvp",
          "title": "internal use"
        }
      }
    },
    "v1UpdateMeetingPermissionsRequest": {
      "type": "object",
      "properties": {
        "appointmentId": {
          "type": "string"
        },
        "inviteeCanModify": {
          "type": "boolean",
          "description": "InviteeCanModify represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can modify the booking or not."
        },
        "inviteeCanManageOtherInvitees": {
          "type": "boolean",
          "description": "InviteeCanManageOtherInvitees represent Meetings app permission handler for InvitedEmployee\nthat the invited employees in the booking can invite or remove some other invitees."
        },
        "viewGuestList": {
          "type": "boolean",
          "description": "SeeGuestList represent Meeting app permission for all users to view other users involved in appointment."
        }
      }
    },
    "v1UpdateRecurringAppointmentsResponse": {
      "type": "object",
      "properties": {
        "oldAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Appointment"
          }
        },
        "updatedAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppointmentWithMessage"
          }
        }
      }
    },
    "v1UserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1UserSearchData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    }
  }
}
