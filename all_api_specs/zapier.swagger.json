{
  "swagger": "2.0",
  "info": {
    "title": "zapier/pb/zapier.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Zapier"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesAddress": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "title": "Country , e.g. \"USA\". (required)"
        },
        "locality": {
          "type": "string",
          "title": "Locality or locality/city, e.g. \"Mountain View\". (required)"
        },
        "region": {
          "type": "string",
          "title": "Region, The region/state/province, e.g. \"CA\". This field is only required\nin\ncountries where region is commonly a part of the address. (optional)"
        },
        "postalCode": {
          "type": "string",
          "title": "PostalCode  e.g. \"94043\". (required)"
        },
        "streetAddress": {
          "type": "string",
          "title": "StreetAddress, e.g. \"1600 Amphitheatre Pkwy\". (required)"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "title": "GeoCoordinates , e.g. latitude=23.2599333, longitude=77.41261499999996\nLatitude e.g. 23.2599333"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "Longitude e.g. 77.41261499999996"
        }
      }
    },
    "typesGalleryItem": {
      "type": "object",
      "properties": {
        "thumbImage": {
          "type": "string"
        },
        "largeImage": {
          "type": "string"
        }
      },
      "title": "Generic Gallery Item Object"
    },
    "typesGender": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "FEMALE",
        "MALE",
        "OTHER",
        "PREFER_NOT_TO_SAY"
      ],
      "default": "UNSPECIFIED"
    },
    "typesIntegrationType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TYPE",
        "GOOGLECALENDAR",
        "OUTLOOK",
        "QUICKBOOKS",
        "STRIPE",
        "GOOGLE_BUSINESS_REVIEW",
        "YELP",
        "OTHERS",
        "FIREBASE",
        "WEBEX",
        "ZOOM",
        "GOOGLE_TAG_MANAGER",
        "GOOGLE_ANALYTICS",
        "FACEBOOK_PIXEL",
        "MIXPANEL",
        "SQUARE",
        "BRAINTREE",
        "PAYPAL",
        "ICLOUD",
        "INTERCOM",
        "GOOGLE_DRIVE",
        "DROPBOX",
        "GOOGLE_CONTACT",
        "ZAPIER",
        "MICROSOFT_TEAMS",
        "MICROSOFT_TEAMS_CONNECTOR",
        "CUSTOM_WEBHOOK",
        "SERVICE_NOW",
        "RAZORPAY",
        "SALESFORCE",
        "FRESH_SALES",
        "OPEN_HOUR_GOOGLE_CALENDAR",
        "BIG_COMMERCE",
        "XERO",
        "MAILCHIMP",
        "ZENDESK",
        "HUBSPOT"
      ],
      "default": "UNKNOWN_TYPE",
      "title": "- GOOGLE_DRIVE: not for appointy\n - ZAPIER: for appointy\n - OPEN_HOUR_GOOGLE_CALENDAR: Open Hour for Google Calendar"
    },
    "typesPrice": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "currency": {
          "type": "string"
        },
        "amountInFloat": {
          "type": "number",
          "format": "double",
          "title": "@deprecated - DO NOT USE"
        }
      },
      "title": "Generic Price object"
    },
    "typesTimeslot": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Generic Timeslot object"
    },
    "v1AppointmentStatus": {
      "type": "string",
      "enum": [
        "APPOINTMENT_STATUS_UNSPECIFIED",
        "APPOINTMENT_CONFIRMED",
        "APPOINTMENT_CANCELLED",
        "APPOINTMENT_WAITING_FOR_APPROVAL"
      ],
      "default": "APPOINTMENT_STATUS_UNSPECIFIED"
    },
    "v1ChangedAppointment": {
      "type": "object",
      "properties": {
        "oldAppointment": {
          "$ref": "#/definitions/v1ZapierAppointment"
        },
        "newAppointment": {
          "$ref": "#/definitions/v1ZapierAppointment"
        }
      }
    },
    "v1ChangedCustomer": {
      "type": "object",
      "properties": {
        "oldCustomer": {
          "$ref": "#/definitions/v1ZapierCustomer"
        },
        "newCustomer": {
          "$ref": "#/definitions/v1ZapierCustomer"
        }
      }
    },
    "v1Channel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the channel"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1Consumer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the customer"
        },
        "firstName": {
          "type": "string",
          "description": "First name of customer."
        },
        "lastName": {
          "type": "string",
          "description": "LastName of customer."
        },
        "email": {
          "type": "string",
          "description": "Email of customer."
        },
        "status": {
          "$ref": "#/definitions/v1ConsumerStatus",
          "title": "Status of customer whether unspecified, confirmed, cancelled or no show"
        },
        "language": {
          "type": "string",
          "description": "Language is the ISO language codes. For example 'en-US', 'fr', 'fr-CA'."
        },
        "timezone": {
          "type": "string",
          "title": "Timezone is the IANA timezone string. For example, 'Asia/Kolkatta', 'America/Los_Angeles'"
        },
        "customStatus": {
          "$ref": "#/definitions/v1CustomStatus",
          "title": "custom status"
        },
        "isBookedByAdmin": {
          "type": "boolean",
          "title": "is_booked_by_admin true if booked by admin"
        },
        "policyId": {
          "type": "string"
        },
        "acceptanceId": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/typesPrice"
        },
        "telephones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumber": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "address": {
          "$ref": "#/definitions/typesAddress"
        },
        "rescheduleLink": {
          "type": "string"
        },
        "cancelLink": {
          "type": "string"
        }
      }
    },
    "v1ConsumerStatus": {
      "type": "string",
      "enum": [
        "CONSUMER_STATUS_UNSPECIFIED",
        "CONFIRMED",
        "CANCELLED"
      ],
      "default": "CONSUMER_STATUS_UNSPECIFIED"
    },
    "v1CustomStatus": {
      "type": "object",
      "properties": {
        "customStatusId": {
          "type": "string"
        },
        "customStatusName": {
          "type": "string"
        }
      }
    },
    "v1Employee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the employee. (required)"
        },
        "firstName": {
          "type": "string",
          "description": "FirstName of the employee."
        },
        "lastName": {
          "type": "string",
          "description": "LastName of the employee."
        },
        "email": {
          "type": "string",
          "description": "Email of the employee."
        },
        "profileId": {
          "type": "string",
          "title": "profile id"
        }
      }
    },
    "v1GetHooksResponse": {
      "type": "object",
      "properties": {
        "hooks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierHook"
          }
        }
      }
    },
    "v1ListCompaniesResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierCompany"
          }
        }
      }
    },
    "v1ListEmployeesResponse": {
      "type": "object",
      "properties": {
        "employees": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierEmployee"
          }
        }
      }
    },
    "v1ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierLocation"
          }
        }
      }
    },
    "v1ListResourceTypesResponse": {
      "type": "object",
      "properties": {
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierResourceType"
          }
        }
      }
    },
    "v1ListResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierResource"
          }
        }
      }
    },
    "v1MeetingData": {
      "type": "object",
      "properties": {
        "integrationType": {
          "$ref": "#/definitions/typesIntegrationType"
        },
        "externalMeetingId": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "joinUrl": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        }
      }
    },
    "v1Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the resource"
        },
        "title": {
          "type": "string",
          "title": "Title of the resource"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "Capacity of the resource"
        }
      }
    },
    "v1ResourceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the resource type"
        },
        "title": {
          "type": "string",
          "title": "Title of the resource type"
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "Capacity of the resource type"
        }
      }
    },
    "v1SampleAppointmentResponse": {
      "type": "object",
      "properties": {
        "appointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierAppointment"
          }
        }
      }
    },
    "v1SampleChangedAppointmentResponse": {
      "type": "object",
      "properties": {
        "changedAppointments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChangedAppointment"
          }
        }
      }
    },
    "v1SampleChangedCustomerResponse": {
      "type": "object",
      "properties": {
        "changedCustomers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ChangedCustomer"
          }
        }
      }
    },
    "v1SampleCustomerResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierCustomer"
          }
        }
      }
    },
    "v1SearchCustomerResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ZapierCustomer"
          }
        }
      }
    },
    "v1Service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title of the service in various locales."
        },
        "capacity": {
          "type": "string",
          "format": "int64",
          "title": "Capacity"
        },
        "preBufferTime": {
          "type": "string",
          "format": "int64",
          "title": "Pre appointment buffer time in seconds"
        },
        "postBufferTime": {
          "type": "string",
          "format": "int64",
          "title": "Post appointment buffer time in seconds"
        },
        "isDynamic": {
          "type": "boolean",
          "title": "in case of  link sharing  , we have to create dynamic service"
        }
      }
    },
    "v1TriggerType": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "NEW_APPOINTMENT_TRIGGER",
        "UPDATE_APPOINTMENT_TRIGGER",
        "RESCHEDULE_APPOINTMENT_TRIGGER",
        "DELETE_APPOINTMENT_TRIGGER",
        "STATUS_CHANGED_APPOINTMENT_TRIGGER",
        "NEW_CUSTOMER_TRIGGER",
        "UPDATE_CUSTOMER_TRIGGER"
      ],
      "default": "UNDEFINED"
    },
    "v1ValidateApiKeyResponse": {
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "v1ZapierAppointment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the appointment."
        },
        "timeSlot": {
          "$ref": "#/definitions/typesTimeslot",
          "title": "Timeslot of the appointment in UTC. (required)"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Resource"
          },
          "title": "Resources booked in this appointment. (optional)"
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ResourceType"
          },
          "title": "Resource Types booked in this appointment. (optional)"
        },
        "service": {
          "$ref": "#/definitions/v1Service",
          "title": "Service of the appointment. (required)"
        },
        "channel": {
          "$ref": "#/definitions/v1Channel",
          "title": "Channel of the appointment. (optional)"
        },
        "employee": {
          "$ref": "#/definitions/v1Employee",
          "title": "Employee of the appointment. (required)"
        },
        "consumers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Consumer"
          },
          "title": "Customers booked in this appointment. (optional)"
        },
        "bookingId": {
          "type": "string",
          "description": "BookingId is a unique grouping id for appointments booked together. For example,\nrecurring appointments will share the same booking id."
        },
        "recurringId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1AppointmentStatus"
        },
        "createdBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        },
        "rescheduleAllowedTill": {
          "type": "string",
          "format": "date-time"
        },
        "cancellationAllowedTill": {
          "type": "string",
          "format": "date-time"
        },
        "totalPrice": {
          "$ref": "#/definitions/typesPrice"
        },
        "meetingData": {
          "$ref": "#/definitions/v1MeetingData"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "orderId": {
          "type": "string"
        },
        "medium": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        }
      }
    },
    "v1ZapierBlockHourRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceId": {
          "type": "string",
          "title": "Id of the specific resource/employee\nMinimum length should be 1"
        },
        "slot": {
          "$ref": "#/definitions/typesTimeslot",
          "title": "Time slots for which the resource will be blocked"
        },
        "reason": {
          "type": "string",
          "title": "Reason due to which the resource is blocked"
        },
        "locale": {
          "type": "string",
          "title": "Locale in which the time slot is blocked"
        },
        "title": {
          "type": "string",
          "description": "title for blockHour\nShould never be considered unique for any purposes\nand should only be used for reference."
        },
        "source": {
          "type": "string"
        },
        "externalSourceId": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        }
      }
    },
    "v1ZapierCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ZapierCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Id of the customer"
        },
        "email": {
          "type": "string",
          "title": "Unique email of the customer"
        },
        "firstName": {
          "type": "string",
          "title": "First name of the customer"
        },
        "lastName": {
          "type": "string",
          "title": "Last Name of the customer"
        },
        "birthDate": {
          "type": "string",
          "format": "date-time",
          "title": "Date of Birth of the customer"
        },
        "profileImage": {
          "$ref": "#/definitions/typesGalleryItem",
          "title": "Url of the profile Image"
        },
        "telephones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Telephone/Mobile Numbers of the customer // Validation can be added for numbers"
        },
        "phoneNumber": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/typesAddress",
          "title": "Address of the customer"
        },
        "gender": {
          "$ref": "#/definitions/typesGender",
          "title": "Gender of Customer"
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags saved against by a customer"
        },
        "timezone": {
          "type": "string",
          "title": "Timezone of the customer"
        },
        "preferredLanguage": {
          "type": "string",
          "title": "Preferred Languages of a customer"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional metadata of the customer"
        },
        "userId": {
          "type": "string",
          "title": "user representing the customer"
        },
        "invitedBy": {
          "type": "string",
          "title": "invited_by = created_by"
        },
        "isInvitedByAdmin": {
          "type": "boolean",
          "title": "is_invited_by_admin true if customer is invited by admin"
        },
        "createdBy": {
          "type": "string",
          "title": "Created by and created on"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string",
          "title": "Updated by and updated on"
        },
        "updatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        },
        "medium": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        },
        "customerLevel": {
          "type": "string",
          "description": "to signify if customer is a lead, active, paying, ..."
        },
        "companyId": {
          "type": "string"
        }
      }
    },
    "v1ZapierEmployee": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ZapierHook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hookUrl": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "employeeId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "triggerType": {
          "$ref": "#/definitions/v1TriggerType"
        }
      }
    },
    "v1ZapierLocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ZapierResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ZapierResourceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
