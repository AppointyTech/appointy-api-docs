{
  "swagger": "2.0",
  "info": {
    "title": "slug/pb/slug.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Slugs"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/checkSlugAvailability": {
      "get": {
        "operationId": "Slugs_CheckSlugAvailability",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckSlugAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "slugValue",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Slugs"
        ]
      }
    },
    "/v1/slugs/{sourceId}": {
      "get": {
        "summary": "GetSlug returns the slug by its unique id.",
        "operationId": "Slugs_GetSlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Slug"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "Slugs"
        ]
      },
      "delete": {
        "summary": "DeleteSlug will delete the slug from the system by Id.\nThis will be a soft delete from the system",
        "operationId": "Slugs_DeleteSlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "Slugs"
        ]
      },
      "put": {
        "summary": "UpsertSlug will upsert the slug identified by its slug id.\nUpsert Slug uses Field Mask to upsert specific properties of slug object",
        "operationId": "Slugs_UpsertSlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Slug"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SlugsUpsertSlugBody"
            }
          }
        ],
        "tags": [
          "Slugs"
        ]
      }
    },
    "/v1/slugs:batchGet": {
      "get": {
        "summary": "Gets all the Slug(s) by their ids",
        "operationId": "Slugs_BatchGetSlug",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchGetSlugResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Slugs"
        ]
      }
    }
  },
  "definitions": {
    "SlugsUpsertSlugBody": {
      "type": "object",
      "properties": {
        "slugValue": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BatchGetSlugResponse": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Slug"
          }
        }
      }
    },
    "v1CheckSlugAvailabilityResponse": {
      "type": "object",
      "properties": {
        "isValid": {
          "type": "boolean"
        }
      }
    },
    "v1Slug": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "parent is the source-id i.e. company, location..."
        },
        "slugValue": {
          "type": "string"
        },
        "slugType": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  }
}
